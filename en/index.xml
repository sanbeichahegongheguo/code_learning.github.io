<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>英文文章</title>
    <link>/en/</link>
    <description>Recent content on 英文文章</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 05 May 2021 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="/en/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Markdown文档形式的介绍</title>
      <link>/en/post/%E8%BD%AC%E8%BD%BD%E7%BF%BB%E8%AF%91/000jane-theme-preview/</link>
      <pubDate>Mon, 01 Jan 2018 16:01:23 +0800</pubDate>
      
      <guid>/en/post/%E8%BD%AC%E8%BD%BD%E7%BF%BB%E8%AF%91/000jane-theme-preview/</guid>
      
        <description>&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt; is created by &lt;a href=&#34;http://daringfireball.net/&#34;&gt;Daring Fireball&lt;/a&gt;, the original guideline is &lt;a href=&#34;http://daringfireball.net/projects/markdown/syntax&#34;&gt;here&lt;/a&gt;. Its syntax, however, varies between different parsers or editors.&lt;/p&gt;
&lt;p&gt;Please note that HTML fragments in markdown source will be recognized but not parsed or rendered. Also, there may be small reformatting on the original markdown source code after saving.&lt;/p&gt;
&lt;h2 id=&#34;paragraph-and-line-breaks&#34;&gt;Paragraph and line breaks&lt;/h2&gt;
&lt;p&gt;A paragraph is simply one or more consecutive lines of text. In markdown source code, paragraphs are separated by more than one blank lines. In Typora, you only need to press &lt;code&gt;Return&lt;/code&gt; to create a new paragraph.&lt;/p&gt;
&lt;p&gt;Press &lt;code&gt;Shift&lt;/code&gt; + &lt;code&gt;Return&lt;/code&gt; to create a single line break. However, most markdown parser will ignore single line break, to make other markdown parsers recognize your line break, you can leave two whitespace at the end of the line, or insert &lt;code&gt;&amp;lt;br/&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;headers&#34;&gt;Headers&lt;/h2&gt;
&lt;p&gt;Headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span class=&#34;gh&#34;&gt;# This is an H1
&lt;/span&gt;&lt;span class=&#34;gh&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;gu&#34;&gt;## This is an H2
&lt;/span&gt;&lt;span class=&#34;gu&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;gu&#34;&gt;###### This is an H6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;In typora, input ‘#’s followed by title content, and press &lt;code&gt;Return&lt;/code&gt; key will create a header.&lt;/p&gt;
&lt;h2 id=&#34;blockquotes&#34;&gt;Blockquotes&lt;/h2&gt;
&lt;p&gt;Markdown uses email-style &amp;gt; characters for block quoting. They are presented as:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a blockquote with two paragraphs. This is first paragraph.&lt;/p&gt;
&lt;p&gt;This is second pragraph.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&lt;/p&gt;
&lt;p&gt;This is another blockquote with one paragraph. There is three empty line to seperate two blockquote.&lt;/p&gt;
&lt;p&gt;这是一段中文测试。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In typora, just input ‘&amp;gt;’ followed by quote contents a block quote is  generated. Typora will insert proper ‘&amp;gt;’ or line break for you. Block quote inside anther block quote is allowed by adding additional levels of ‘&amp;gt;’.&lt;/p&gt;
&lt;h2 id=&#34;lists&#34;&gt;Lists&lt;/h2&gt;
&lt;p&gt;Input &lt;code&gt;* list item 1&lt;/code&gt; will create an un-ordered list, the &lt;code&gt;*&lt;/code&gt; symbol can be replace with &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Input &lt;code&gt;1. list item 1&lt;/code&gt; will create an ordered list, their markdown source code is like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Red&lt;/li&gt;
&lt;li&gt;Green&lt;/li&gt;
&lt;li&gt;Blue&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Red&lt;/li&gt;
&lt;li&gt;Green&lt;/li&gt;
&lt;li&gt;Blue&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;task-list&#34;&gt;Task List&lt;/h2&gt;
&lt;p&gt;Task lists are lists with items marked as either &lt;code&gt;[ ]&lt;/code&gt; or &lt;code&gt;[x]&lt;/code&gt; (incomplete or complete). For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; a task list item&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; list syntax required&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; normal &lt;strong&gt;formatting&lt;/strong&gt;, @mentions, #1234 refs&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; incomplete&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; completed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can change the complete/incomplete state by click the checkbox before the item.&lt;/p&gt;
&lt;h2 id=&#34;syntax-highlighting&#34;&gt;Syntax Highlighting&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;kd&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;helloWorld&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;HelloWorld&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kd&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;String&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;args&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;System&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;out&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;println&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Hello, World!&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;o&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;math-blocks&#34;&gt;Math Blocks&lt;/h2&gt;
&lt;p&gt;You can render &lt;em&gt;LaTeX&lt;/em&gt; mathematical expressions using &lt;strong&gt;MathJax&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Input &lt;code&gt;$$&lt;/code&gt;, then press &amp;lsquo;Return&amp;rsquo; key will trigger an input field which accept &lt;em&gt;Tex/LaTex&lt;/em&gt; source. Following is an example:
$$
\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}
\mathbf{i} &amp;amp; \mathbf{j} &amp;amp; \mathbf{k} \&lt;br&gt;
\frac{\partial X}{\partial u} &amp;amp;  \frac{\partial Y}{\partial u} &amp;amp; 0 \&lt;br&gt;
\frac{\partial X}{\partial v} &amp;amp;  \frac{\partial Y}{\partial v} &amp;amp; 0 \&lt;br&gt;
\end{vmatrix}
$$&lt;/p&gt;
&lt;p&gt;In markdown source file, math block is &lt;em&gt;LaTeX&lt;/em&gt; expression wrapped by ‘$$’ mark:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;$$
\mathbf{V}_1 \times \mathbf{V}_2 =  \begin{vmatrix}
\mathbf{i} &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; \mathbf{j} &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; \mathbf{k} \\
\frac{\partial X}{\partial u} &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt;  \frac{\partial Y}{\partial u} &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; 0 \\
\frac{\partial X}{\partial v} &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt;  \frac{\partial Y}{\partial v} &lt;span class=&#34;err&#34;&gt;&amp;amp;&lt;/span&gt; 0 \\
\end{vmatrix}
$$
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;tables&#34;&gt;Tables&lt;/h2&gt;
&lt;p&gt;Input &lt;code&gt;| First Header  | Second Header |&lt;/code&gt; and press &lt;code&gt;return&lt;/code&gt; key will create a table with two column.&lt;/p&gt;
&lt;p&gt;After table is created, focus on that table will pop up a toolbar for table, where you can resize, align, or delete table. You can also use context menu to copy and add/delete column/row.&lt;/p&gt;
&lt;p&gt;Following descriptions can be skipped, as markdown source code for tables are generated by typora automatically.&lt;/p&gt;
&lt;p&gt;In markdown source code, they look like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;| Name              | Markdown            | HTML tag             |
| ----------------- | ------------------- | -------------------- |
| &lt;span class=&#34;ge&#34;&gt;*Emphasis*&lt;/span&gt;        | &lt;span class=&#34;sb&#34;&gt;`*Emphasis*`&lt;/span&gt;        | &lt;span class=&#34;sb&#34;&gt;`&amp;lt;em&amp;gt;&amp;lt;/em&amp;gt;`&lt;/span&gt;          |
| &lt;span class=&#34;gs&#34;&gt;**Strong**&lt;/span&gt;        | &lt;span class=&#34;sb&#34;&gt;`**Strong**`&lt;/span&gt;        | &lt;span class=&#34;sb&#34;&gt;`&amp;lt;strong&amp;gt;&amp;lt;/strong&amp;gt;`&lt;/span&gt; |
| &lt;span class=&#34;sb&#34;&gt;`code`&lt;/span&gt;            | ``code``            | &lt;span class=&#34;sb&#34;&gt;`&amp;lt;code&amp;gt;&amp;lt;/code&amp;gt;`&lt;/span&gt;      |
| &lt;span class=&#34;gd&#34;&gt;~~Strikethrough~~&lt;/span&gt; | &lt;span class=&#34;sb&#34;&gt;`~~Strikethrough~~`&lt;/span&gt; | &lt;span class=&#34;sb&#34;&gt;`&amp;lt;del&amp;gt;&amp;lt;/del`&lt;/span&gt;         |
| &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Underline&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;u&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;  | &lt;span class=&#34;sb&#34;&gt;`&amp;lt;u&amp;gt;underline&amp;lt;/u&amp;gt;`&lt;/span&gt;  | &lt;span class=&#34;sb&#34;&gt;`&amp;lt;u&amp;gt;&amp;lt;/u&amp;gt;`&lt;/span&gt;            |
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Markdown&lt;/th&gt;
&lt;th&gt;HTML tag&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;em&gt;Emphasis&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;*Emphasis*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;em&amp;gt;&amp;lt;/em&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;Strong&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;**Strong**&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt; &amp;lt;strong&amp;gt;&amp;lt;/strong&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;code&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;`code`&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;code&amp;gt;&amp;lt;/code&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;del&gt;Strikethrough&lt;/del&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;~~Strikethrough~~&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;del&amp;gt;&amp;lt;/del&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;u&gt;Underline&lt;/u&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;u&amp;gt;underline&amp;lt;/u&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;u&amp;gt;&amp;lt;/u&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;footnotes&#34;&gt;Footnotes&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;You can create footnotes like this[^footnote].

[^footnote]: Here is the &lt;span class=&#34;ge&#34;&gt;*text*&lt;/span&gt; of the &lt;span class=&#34;gs&#34;&gt;**footnote**&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;will produce:&lt;/p&gt;
&lt;p&gt;You can create footnotes like this&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Mouse on the ‘footnote’ superscript to see content of the footnote.&lt;/p&gt;
&lt;h2 id=&#34;horizontal-rules&#34;&gt;Horizontal Rules&lt;/h2&gt;
&lt;p&gt;Input &lt;code&gt;***&lt;/code&gt; or &lt;code&gt;---&lt;/code&gt; on a blank line and press &lt;code&gt;return&lt;/code&gt; will draw a horizontal line.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;links&#34;&gt;Links&lt;/h2&gt;
&lt;p&gt;Markdown supports two style of links: inline and reference.&lt;/p&gt;
&lt;p&gt;In both styles, the link text is delimited by [square brackets].&lt;/p&gt;
&lt;p&gt;To create an inline link, use a set of regular parentheses immediately after the link text’s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an optional title for the link, surrounded in quotes. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;This is [&lt;span class=&#34;nt&#34;&gt;an example&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;http://example.com/ &amp;#34;Title&amp;#34;&lt;/span&gt;) inline link.

[&lt;span class=&#34;nt&#34;&gt;This link&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;http://example.net/&lt;/span&gt;) has no title attribute.
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;will produce:&lt;/p&gt;
&lt;p&gt;This is &lt;a href=&#34;http://example.com/%22Title%22&#34;&gt;an example&lt;/a&gt; inline link. (&lt;code&gt;&amp;lt;p&amp;gt;This is &amp;lt;a href=&amp;quot;http://example.com/&amp;quot; title=&amp;quot;Title&amp;quot;&amp;gt;&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://example.net/&#34;&gt;This link&lt;/a&gt; has no title attribute. (&lt;code&gt;&amp;lt;p&amp;gt;&amp;lt;a href=&amp;quot;http://example.net/&amp;quot;&amp;gt;This link&amp;lt;/a&amp;gt; has no&lt;/code&gt;)&lt;/p&gt;
&lt;h3 id=&#34;internal-links&#34;&gt;Internal Links&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;You can set the href to headers&lt;/strong&gt;, which will create a bookmark that allow you to jump to that section after clicking. For example:&lt;/p&gt;
&lt;p&gt;Command(on Windows: Ctrl) + Click &lt;a href=&#34;#block-elements&#34;&gt;This link&lt;/a&gt; will jump to header &lt;code&gt;Block Elements&lt;/code&gt;. To see how to write that, please move cursor or click that link with &lt;code&gt;⌘&lt;/code&gt; key pressed to expand the element into markdown source.&lt;/p&gt;
&lt;h3 id=&#34;reference-links&#34;&gt;Reference Links&lt;/h3&gt;
&lt;p&gt;Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;This is [an example][id] reference-style link.

Then, anywhere in the document, you define your link label like this, on a line by itself:

[id]: http://example.com/  &amp;#34;Optional Title Here&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;In typora, they will be rendered like:&lt;/p&gt;
&lt;p&gt;This is &lt;a href=&#34;http://example.com/&#34; title=&#34;Optional Title Here&#34;&gt;an example&lt;/a&gt; reference-style link.&lt;/p&gt;
&lt;p&gt;The implicit link name shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets — e.g., to link the word “Google” to the google.com web site, you could simply write:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;[Google][]
And then define the link:

[Google]: http://google.com/
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;In typora click link will expand it for editing, command+click will open the hyperlink in web browser.&lt;/p&gt;
&lt;h2 id=&#34;urls&#34;&gt;URLs&lt;/h2&gt;
&lt;p&gt;Typora allows you to insert urls as links, wrapped by &lt;code&gt;&amp;lt;&lt;/code&gt;brackets&lt;code&gt;&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;i@typora.io&amp;gt;&lt;/code&gt; becomes &lt;a href=&#34;mailto:i@typora.io&#34;&gt;i@typora.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Typora will aslo auto link standard URLs. e.g: &lt;a href=&#34;http://www.google.com&#34;&gt;www.google.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;images&#34;&gt;Images&lt;/h2&gt;
&lt;p&gt;Image looks similar with links, but it requires an additional &lt;code&gt;!&lt;/code&gt; char before the start of link. Image syntax looks like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;![&lt;span class=&#34;nt&#34;&gt;Alt text&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;/path/to/img.jpg&lt;/span&gt;)

![&lt;span class=&#34;nt&#34;&gt;Alt text&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;/path/to/img.jpg &amp;#34;Optional title&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;You are able to use drag &amp;amp; drop to insert image from image file or we browser. And modify the markdown source code by clicking on the image. Relative path will be used if image is in same directory or sub-directory with current editing document when drag &amp;amp; drop.&lt;/p&gt;
&lt;p&gt;For more tips on images, please read &lt;a href=&#34;http://support.typora.io//Images/&#34;&gt;http://support.typora.io//Images/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;emphasis&#34;&gt;Emphasis&lt;/h2&gt;
&lt;p&gt;Markdown treats asterisks (&lt;code&gt;*&lt;/code&gt;) and underscores (&lt;code&gt;_&lt;/code&gt;) as indicators of emphasis. Text wrapped with one &lt;code&gt;*&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt; will be wrapped with an HTML &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt; tag. E.g:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;*single asterisks*

&lt;span class=&#34;ge&#34;&gt;_single underscores_&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;output:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;single asterisks&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;single underscores&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;GFM will ignores underscores in words, which is commonly used in code and names, like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;wow_great_stuff&lt;/p&gt;
&lt;p&gt;do_this_and_do_that_and_another_thing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;\*this text is surrounded by literal asterisks\*
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Typora recommends to use &lt;code&gt;*&lt;/code&gt; symbol.&lt;/p&gt;
&lt;h2 id=&#34;strong&#34;&gt;Strong&lt;/h2&gt;
&lt;p&gt;double *’s or _’s will be wrapped with an HTML &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag, e.g:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;**double asterisks**

&lt;span class=&#34;gs&#34;&gt;__double underscores__&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;output:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;double asterisks&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;double underscores&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Typora recommends to use &lt;code&gt;**&lt;/code&gt; symbol.&lt;/p&gt;
&lt;h2 id=&#34;code&#34;&gt;Code&lt;/h2&gt;
&lt;p&gt;To indicate a span of code, wrap it with backtick quotes (`). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;Use the &lt;span class=&#34;sb&#34;&gt;`printf()`&lt;/span&gt; function.
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;will produce:&lt;/p&gt;
&lt;p&gt;Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;/p&gt;
&lt;h2 id=&#34;strikethrough&#34;&gt;Strikethrough&lt;/h2&gt;
&lt;p&gt;GFM adds syntax to create strikethrough text, which is missing from standard Markdown.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;~~Mistaken text.~~&lt;/code&gt; becomes &lt;del&gt;Mistaken text.&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&#34;underline&#34;&gt;Underline&lt;/h2&gt;
&lt;p&gt;Underline is powered by raw HTML.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;u&amp;gt;Underline&amp;lt;/u&amp;gt;&lt;/code&gt; becomes &lt;u&gt;Underline&lt;/u&gt;.&lt;/p&gt;
&lt;h2 id=&#34;emoji-happy&#34;&gt;Emoji :happy:&lt;/h2&gt;
&lt;p&gt;Input emoji with syntax &lt;code&gt;😄&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;User can trigger auto-complete suggestions for emoji by pressing &lt;code&gt;ESC&lt;/code&gt; key, or trigger it automatically after enable it on preference panel. Also, input UTF8 emoji char directly from &lt;code&gt;Edit&lt;/code&gt; -&amp;gt; &lt;code&gt;Emoji &amp;amp; Symbols&lt;/code&gt; from menu bar is also supported.&lt;/p&gt;
&lt;h2 id=&#34;inline-math&#34;&gt;Inline Math&lt;/h2&gt;
&lt;p&gt;To use this feature, first, please enable it in &lt;code&gt;Preference&lt;/code&gt; Panel -&amp;gt; &lt;code&gt;Markdown&lt;/code&gt; Tab. Then use &lt;code&gt;$&lt;/code&gt; to wrap TeX command, for example: &lt;code&gt;$\lim_{x \to \infty} \exp(-x) = 0$&lt;/code&gt; will be rendered as LaTeX command.&lt;/p&gt;
&lt;p&gt;To trigger inline preview for inline math: input “$”, then press &lt;code&gt;ESC&lt;/code&gt; key, then input TeX command, a preview tooltip will be visible like below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://typora.io/img/inline-math.gif&#34; style=&#34;zoom:50%;&#34; /&gt;&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Here is the &lt;em&gt;text&lt;/em&gt; of the &lt;strong&gt;footnote&lt;/strong&gt;.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;</description>
      
    </item>
    
    <item>
      <title>凯文凯利68岁生日给年轻人的68个建议 | 火山灰 </title>
      <link>/en/post/%E8%BD%AC%E8%BD%BD%E7%BF%BB%E8%AF%91/%E5%87%AF%E6%96%87%E5%87%AF%E5%88%A968-bits-of-unsolicited-advice/</link>
      <pubDate>Wed, 05 May 2021 00:00:00 +0000</pubDate>
      
      <guid>/en/post/%E8%BD%AC%E8%BD%BD%E7%BF%BB%E8%AF%91/%E5%87%AF%E6%96%87%E5%87%AF%E5%88%A968-bits-of-unsolicited-advice/</guid>
      
        <description>&lt;h2 id=&#34;68-bits-of-unsolicited-advicehttpskkorgthetechnium68-bits-of-unsolicited-advice&#34;&gt;&lt;a href=&#34;https://kk.org/thetechnium/68-bits-of-unsolicited-advice/&#34;&gt;68 Bits of Unsolicited Advice&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://kk.org/thetechnium/68-bits-of-unsolicited-advice/&#34;&gt;April 28, 2020&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It’s my birthday. I’m 68. I feel like pulling up a rocking chair and dispensing advice to the young ‘uns. Here are 68 pithy bits of unsolicited advice which I offer as my birthday present to all of you.
(For my 69th birthday I made &lt;a href=&#34;https://kk.org/thetechnium/99-additional-bits-of-unsolicited-advice/&#34;&gt;another batch&lt;/a&gt;.)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Learn how to learn from those you disagree with, or even offend you. See if you can find the truth in what they believe.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being enthusiastic is worth 25 IQ points.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always demand a deadline. A deadline weeds out the extraneous and the ordinary. It prevents you from trying to make it perfect, so you have to make it different. Different is better.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t be afraid to ask a question that may sound stupid because 99% of the time everyone else is thinking of the same question and is too embarrassed to ask it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being able to listen well is a superpower. While listening to someone you love keep asking them “Is there more?”, until there is no more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A worthy goal for a year is to learn enough about a subject so that you can’t believe how ignorant you were a year earlier.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Gratitude will unlock all other virtues and is something you can get better at.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Treating a person to a meal never fails, and is so easy to do. It’s powerful with old friends and a great way to make new friends.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t trust all-purpose glue.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reading to your children regularly will bond you together and kickstart their imaginations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Never use a credit card for credit. The only kind of credit, or debt, that is acceptable is debt to acquire something whose exchange value is extremely likely to increase, like in a home. The exchange value of most things diminishes or vanishes the moment you purchase them. Don’t be in debt to losers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Pros are just amateurs who know how to gracefully recover from their mistakes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Extraordinary claims should require extraordinary evidence to be believed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t be the smartest person in the room. Hangout with, and learn from, people smarter than yourself. Even better, find smart people who will disagree with you.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rule of 3 in conversation. To get to the real reason, ask a person to go deeper than what they just said. Then again, and once more. The third time’s answer is close to the truth.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t be the best. Be the only.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Everyone is shy. Other people are waiting for you to introduce yourself to them, they are waiting for you to send them an email, they are waiting for you to ask them on a date. Go ahead.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t take it personally when someone turns you down. Assume they are like you: busy, occupied, distracted. Try again later. It’s amazing how often a second try works.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The purpose of a habit is to remove that action from self-negotiation. You no longer expend energy deciding whether to do it. You just do it. Good habits can range from telling the truth, to flossing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Promptness is a sign of respect.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you are young spend at least 6 months to one year living as poor as you can, owning as little as you possibly can, eating beans and rice in a tiny room or tent, to experience what your “worst” lifestyle might be. That way any time you have to risk something in the future you won’t be afraid of the worst case scenario.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Trust me: There is no “them”.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The more you are interested in others, the more interesting they find you. To be interesting, be interested.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Optimize your generosity. No one on their deathbed has ever regretted giving too much away.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To make something good, just do it. To make something great, just re-do it, re-do it, re-do it. The secret to making fine things is in remaking them.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The Golden Rule will never fail you. It is the foundation of all other virtues.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are looking for something in your house, and you finally find it, when you’re done with it, don’t put it back where you found it. Put it back where you first looked for it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Saving money and investing money are both good habits. Small amounts of money invested regularly for many decades without deliberation is one path to wealth.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To make mistakes is human. To own your mistakes is divine. Nothing elevates a person higher than quickly admitting and taking personal responsibility for the mistakes you make and then fixing them fairly. If you mess up, fess up. It’s astounding how powerful this ownership is.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Never get involved in a land war in Asia.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can obsess about serving your customers/audience/clients, or you can obsess about beating the competition. Both work, but of the two, obsessing about your customers will take you further.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Show up. Keep showing up. Somebody successful said: 99% of success is just showing up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Separate the processes of creation from improving. You can’t write and edit, or sculpt and polish, or make and analyze at the same time. If you do, the editor stops the creator. While you invent, don’t select. While you sketch, don’t inspect. While you write the first draft, don’t reflect. At the start, the creator mind must be unleashed from judgement.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you are not falling down occasionally, you are just coasting.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Perhaps the most counter-intuitive truth of the universe is that the more you give to others, the more you’ll get. Understanding this is the beginning of wisdom.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Friends are better than money. Almost anything money can do, friends can do better. In so many ways a friend with a boat is better than owning a boat.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This is true: It’s hard to cheat an honest man.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When an object is lost, 95% of the time it is hiding within arm’s reach of where it was last seen. Search in all possible locations in that radius and you’ll find it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You are what you do. Not what you say, not what you believe, not how you vote, but what you spend your time on.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you lose or forget to bring a cable, adapter or charger, check with your hotel. Most hotels now have a drawer full of cables, adapters and chargers others have left behind, and probably have the one you are missing. You can often claim it after borrowing it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hatred is a curse that does not affect the hated. It only poisons the hater. Release a grudge as if it was a poison.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There is no limit on better. Talent is distributed unfairly, but there is no limit on how much we can improve what we start with.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be prepared: When you are 90% done any large project (a house, a film, an event, an app) the rest of the myriad details will take a second 90% to complete.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you die you take absolutely nothing with you except your reputation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Before you are old, attend as many funerals as you can bear, and listen. Nobody talks about the departed’s achievements. The only thing people will remember is what kind of person you were while you were achieving.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For every dollar you spend purchasing something substantial, expect to pay a dollar in repairs, maintenance, or disposal by the end of its life.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;•Anything real begins with the fiction of what could be. Imagination is therefore the most potent force in the universe, and a skill you can get better at. It’s the one skill in life that benefits from ignoring what everyone else knows.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When crisis and disaster strike, don’t waste them. No problems, no progress.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On vacation go to the most remote place on your itinerary first, bypassing the cities. You’ll maximize the shock of otherness in the remote, and then later you’ll welcome the familiar comforts of a city on the way back.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you get an invitation to do something in the future, ask yourself: would you accept this if it was scheduled for tomorrow? Not too many promises will pass that immediacy filter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t say anything about someone in email you would not be comfortable saying to them directly, because eventually they &lt;em&gt;will&lt;/em&gt; read it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you desperately need a job, you are just another problem for a boss; if you can solve many of the problems the boss has right now, you are hired. To be hired, think like your boss.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Art is in what you leave out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Acquiring things will rarely bring you deep satisfaction. But acquiring experiences will.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rule of 7 in research. You can find out anything if you are willing to go seven levels. If the first source you ask doesn’t know, ask them who you should ask next, and so on down the line. If you are willing to go to the 7th source, you’ll almost always get your answer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;How to apologize: Quickly, specifically, sincerely.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t ever respond to a solicitation or a proposal on the phone. The urgency is a disguise.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When someone is nasty, rude, hateful, or mean with you, pretend they have a disease. That makes it easier to have empathy toward them which can soften the conflict.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Eliminating clutter makes room for your true treasures.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You really don’t want to be famous. Read the biography of any famous person.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Experience is overrated. When hiring, hire for aptitude, train for skills. Most really amazing or great things are done by people doing them for the first time.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A vacation + a disaster = an adventure.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Buying tools: Start by buying the absolute cheapest tools you can find. Upgrade the ones you use a lot. If you wind up using some tool for a job, buy the very best you can afford.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn how to take a 20-minute power nap without embarrassment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Following your bliss is a recipe for paralysis if you don’t know what you are passionate about. A better motto for most youth is “master something, anything”. Through mastery of one thing, you can drift towards extensions of that mastery that bring you more joy, and eventually discover where your bliss is.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I’m positive that in 100 years much of what I take to be true today will be proved to be wrong, maybe even embarrassingly wrong, and I try really hard to identify what it is that I am wrong about today.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Over the long term, the future is decided by optimists. To be an optimist you don’t have to ignore all the many problems we create; you just have to imagine improving our capacity to solve problems.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The universe is conspiring behind your back to make you a success. This will be much easier to do if you embrace this pronoia.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For my 69th birthday I made another batch of &lt;a href=&#34;https://kk.org/thetechnium/99-additional-bits-of-unsolicited-advice/&#34;&gt;additional unsolicited advice&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I made a video recording of me reciting these 68 bits of advice from a rocking chair, &lt;a href=&#34;https://youtu.be/Zz70rcguxwk&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;[You can follow me &lt;a href=&#34;https://twitter.com/kevin2kelly&#34;&gt;@kevin2kelly&lt;/a&gt;. Join my newsletter &lt;a href=&#34;https://www.getrevue.co/profile/Recomendo&#34;&gt;Recomendo&lt;/a&gt; for 6 recommendations per week.]&lt;/p&gt;
&lt;p&gt;Translation in &lt;a href=&#34;https://umanz.fr/a-la-une/05/05/2020/les-68-conseils-de-vie-de-kevin-kelly-fondateur-de-wired&#34;&gt;French&lt;/a&gt;. &lt;a href=&#34;https://goncalotomas.com/68-ensinamentos-nao-solicitados&#34;&gt;Portuguese&lt;/a&gt;. &lt;a href=&#34;https://www.mokita.de/blog/2020/05/04/68-unaufgeforderte-ratschlaege-von-kevin-kelly-auf-deutsch/&#34;&gt;German&lt;/a&gt;. &lt;a href=&#34;https://youdo.blog/2020/05/07/kevin-kelly/&#34;&gt;Arabic&lt;/a&gt;. &lt;a href=&#34;https://habr.com/ru/post/500694/&#34;&gt;Russian&lt;/a&gt;. &lt;a href=&#34;https://marcocevoli.com/blog/68-consigli-non-richiesti&#34;&gt;Italian&lt;/a&gt;. &lt;a href=&#34;https://kk.org/thetechnium/files/2020/04/68-Consejos-no-Solicitados-Kevin-Kelly.pdf&#34;&gt;Spanish 1&lt;/a&gt;. &lt;a href=&#34;https://thefryeshow.com/68-bits-de-consejos-no-solicitados&#34;&gt;Spanish 2&lt;/a&gt;. &lt;a href=&#34;https://kk.org/thetechnium/files/2020/05/KKelly_68_Bits_of_Unsolicited_Advice_GREEK_translation_by_Paris_Mexis1.pdf&#34;&gt;Greek&lt;/a&gt;. &lt;a href=&#34;https://jussivirtanen.fi/blog/68-ei-toivottua-vinkkia-kevin-kelly/&#34;&gt;Finnish&lt;/a&gt;. &lt;a href=&#34;https://news.hada.io/topic?id=2060&#34;&gt;Korean&lt;/a&gt;. &lt;a href=&#34;https://thetoobluescientist.com/68-loi-khuyen-tu-ong-kevin-kelly-nao-khong-biet-nhung-hay-lam/&#34;&gt;Vietnamese&lt;/a&gt;. &lt;a href=&#34;https://zhuanlan.zhihu.com/p/143834871&#34;&gt;Chinese&lt;/a&gt;. &lt;a href=&#34;https://kk.org/thetechnium/files/2020/05/68-Bits-of-Unsolicited-Advice-Lithuanian.pdf&#34;&gt;Lithuanian&lt;/a&gt;. &lt;a href=&#34;https://kk.org/thetechnium/files/2020/04/Danish-Translation-68-Bits-of-Unsolicited-Advice.pdf&#34;&gt;Danish&lt;/a&gt;. &lt;a href=&#34;http://angsar.blogspot.com/2020/10/68-nasihat-yang-tidak-diminta.html&#34;&gt;Indonesian&lt;/a&gt;. &lt;a href=&#34;https://kk.org/thetechnium/files/2020/04/68-Bits-of-Unsolicited-Advice_Hebrew_AssafGophna.pdf&#34;&gt;Hebrew&lt;/a&gt;. Other translations welcomed. Improved translations also welcomed.&lt;/p&gt;
&lt;h2 id=&#34;99-additional-bits-of-unsolicited-advicehttpskkorgthetechnium99-additional-bits-of-unsolicited-advice&#34;&gt;&lt;a href=&#34;https://kk.org/thetechnium/99-additional-bits-of-unsolicited-advice/&#34;&gt;99 Additional Bits of Unsolicited Advice&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://kk.org/thetechnium/99-additional-bits-of-unsolicited-advice/&#34;&gt;April 19, 2021&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;I have another birthday, and another bunch of unsolicited advice.&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;That thing that made you weird as a kid could make you great as an adult — if you don’t lose it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you have any doubt at all about being able to carry a load in one trip, do yourself a huge favor and make two trips.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;What you get by achieving your goals is not as important as what you become by achieving your goals. At your funeral people will not recall what you did; they will only remember how you made them feel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Recipe for success: under-promise and over-deliver.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It’s not an apology if it comes with an excuse. It is not a compliment if it comes with a request.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Jesus, Superman, and Mother Teresa never made art. Only imperfect beings can make art because art begins in what is broken.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If someone is trying to convince you it’s not a pyramid scheme, it’s a pyramid scheme.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Learn how to tie a bowline knot. Practice in the dark. With one hand. For the rest of your life you’ll use this knot more times than you would ever believe.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If something fails where you thought it would fail, that is not a failure.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be governed not by the tyranny of the urgent but by the elevation of the important.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Leave a gate behind you the way you first found it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The greatest rewards come from working on something that nobody has a name for. If you possibly can, work where there are no words for what you do.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A balcony or porch needs to be at least 6 feet (2m) deep or it won’t be used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t create things to make money; make money so you can create things. The reward for good work is more work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In all things — except love — start with the exit strategy. Prepare for the ending. Almost anything is easier to get into than out of.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Train employees well enough they could get another job, but treat them well enough so they never want to.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t aim to have others like you; aim to have them respect you.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The foundation of maturity: Just because it’s not your fault doesn’t mean it’s not your responsibility.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A multitude of bad ideas is necessary for one good idea.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Being wise means having more questions than answers.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Compliment people behind their back. It’ll come back to you.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Most overnight successes — in fact any significant successes — take at least 5 years. Budget your life accordingly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You are only as young as the last time you changed your mind.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Assume anyone asking for your account information for any reason is guilty of scamming you, unless proven innocent. The way to prove innocence is to call them back, or login to your account using numbers or a website that you provide, not them. Don’t release any identifying information while they are contacting you via phone, message or email. You must control the channel.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Sustained outrage makes you stupid.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be strict with yourself and forgiving of others. The reverse is hell for everyone.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your best response to an insult is “You’re probably right.” Often they are.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The worst evils in history have always been committed by those who truly believed they were combating evil. Beware of combating evil.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you can avoid seeking approval of others, your power is limitless.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When a child asks an endless string of “why?” questions, the smartest reply is, “I don’t know, what do you think?”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To be wealthy, accumulate all those things that money can’t buy.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be the change you wish to see.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When brainstorming, improvising, jamming with others, you’ll go much further and deeper if you build upon each contribution with a playful “yes — and” example instead of a deflating “no — but” reply.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Work to become, not to acquire.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t loan money to a friend unless you are ready to make it a gift.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the way to a grand goal, celebrate the smallest victories as if each one were the final goal. No matter where it ends you are victorious.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Calm is contagious.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Even a foolish person can still be right about most things. Most conventional wisdom is true.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always cut away from yourself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Show me your calendar and I will tell you your priorities. Tell me who your friends are, and I’ll tell you where you’re going.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When hitchhiking, look like the person you want to pick you up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Contemplating the weaknesses of others is easy; contemplating the weaknesses in yourself is hard, but it pays a much higher reward.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Worth repeating: measure twice, cut once.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your passion in life should fit you exactly; but your purpose in life should exceed you. Work for something much larger than yourself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you can’t tell what you desperately need, it’s probably sleep.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When playing Monopoly, spend all you have to buy, barter, or trade for the Orange properties. Don’t bother with Utilities.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you borrow something, try to return it in better shape than you received it. Clean it, sharpen it, fill it up.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Even in the tropics it gets colder at night than you think. Pack warmly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To quiet a crowd or a drunk, just whisper.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Writing down one thing you are grateful for each day is the cheapest possible therapy ever.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When someone tells you something is wrong, they’re usually right. When someone tells you how to fix it, they’re usually wrong.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you think you saw a mouse, you did. And, if there is one, there are more.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Money is overrated. Truly new things rarely need an abundance of money. If that was so, billionaires would have a monopoly on inventing new things, and they don’t. Instead almost all breakthroughs are made by those who lack money, because they are forced to rely on their passion, persistence and ingenuity to figure out new ways. Being poor is an advantage in innovation.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ignore what others may be thinking of you, because they aren’t.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Avoid hitting the snooze button. That’s just training you to oversleep.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always say less than necessary.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You are given the gift of life in order to discover what your gift &lt;em&gt;in&lt;/em&gt; life is. You will complete your mission when you figure out what your mission is. This is not a paradox. This is the way.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t treat people as bad as they are. Treat them as good as you are.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;It is much easier to change how you think by changing your behavior, than it is to change your behavior by changing how you think. Act out the change you seek.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can eat any dessert you want if you take only 3 bites.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each time you reach out to people, bring them a blessing; then they’ll be happy to see you when you bring them a problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Bad things can happen fast, but almost all good things happen slowly.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t worry how or where you begin. As long as you keep moving, your success will be far from where you start.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you confront a stuck bolt or screw: righty tighty, lefty loosey.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you meet a jerk, overlook them. If you meet jerks everywhere everyday, look deeper into yourself.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dance with your hips.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We are not bodies that temporarily have souls. We are souls that temporarily have bodies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can reduce the annoyance of someone’s stupid belief by increasing your understanding of why they believe it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If your goal does not have a schedule, it is a dream.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All the greatest gains in life — in wealth, relationships, or knowledge —come from the magic of compounding interest — amplifying small steady gains. All you need for abundance is to keep adding 1% more than you subtract on a regular basis.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The greatest breakthroughs are missed because they look like hard work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;People can’t remember more than 3 points from a speech.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I have never met a person I admired who did not read more books than I did.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The greatest teacher is called “doing”.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Finite games are played to win or lose. Infinite games are played to keep the game going. Seek out infinite games because they yield infinite rewards.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Everything is hard before it is easy. The day before something is a breakthrough, it’s a stupid idea.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A problem that can be solved with money is not really a problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you are stuck, sleep on it. Let your subconscious work for you.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Your work will be endless, but your time is finite. You cannot limit the work so you must limit your time. Hours are the only thing you can manage.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To succeed, get other people to pay you; to become wealthy, help other people to succeed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Children totally accept — and crave — family rules. “In our family we have a rule for X” is the only excuse a parent needs for setting a family policy. In fact, “I have a rule for X” is the only excuse you need for your own personal policies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;All guns are loaded.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Many backward steps are made by standing still.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;This is the best time ever to make something. None of the greatest, coolest creations 20 years from now have been invented yet. You are not late.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;No rain, no rainbow.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Every person you meet knows an amazing lot about something you know virtually nothing about. Your job is to discover what it is, and it won’t be obvious.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You don’t marry a person, you marry a family.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Always give credit, take blame.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be frugal in all things, except in your passions splurge.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When making something, always get a few extras — extra material, extra parts, extra space, extra finishes. The extras serve as backups for mistakes, reduce stress, and fill your inventory for the future. They are the cheapest insurance.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Something does not need to be perfect to be wonderful. Especially weddings.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Don’t let your email inbox become your to-do list.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The best way to untangle a knotty tangle is not to “untie” the knots, but to keep pulling the loops apart wider and wider. Just make the mess as big, loose and open as possible. As you open up the knots they will unravel themselves. Works on cords, strings, hoses, yarns, or electronic cables.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be a good ancestor. Do something a future generation will thank you for. A simple thing is to plant a tree.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To combat an adversary, become their friend.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Take one simple thing — almost anything — but take it extremely seriously, as if it was the only thing in the world, or maybe the entire world is in it — and by taking it seriously you’ll light up the sky.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;History teaches us that in 100 years from now some of the assumptions you believed will turn out to be wrong. A good question to ask yourself today is “What might I be wrong about?”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Be nice to your children because they are going to choose your nursing home.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Advice like these are not laws. They are like hats. If one doesn’t fit, try another.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;For more see my previous &lt;a href=&#34;https://kk.org/thetechnium/68-bits-of-unsolicited-advice/&#34;&gt;68 Bits of Unsolicited Advice&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Translation in &lt;a href=&#34;https://marcocevoli.com/blog/altri-99-consigli-non-richiesti&#34;&gt;Italian&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&amp;mdash;EOF&amp;mdash;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;EOF&lt;/em&gt;是一个计算机术语，为&lt;code&gt;End Of File&lt;/code&gt;的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p&gt;
&lt;p&gt;本人公众号&lt;code&gt;火山灰&lt;/code&gt;，亦可搜&lt;code&gt;time_ash_past&lt;/code&gt;。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Biodiversity May Thrive Through Games of Rock-Paper-Scissors</title>
      <link>/en/post/%E8%BD%AC%E8%BD%BD%E7%BF%BB%E8%AF%91/%E7%94%9F%E7%89%A9%E5%A4%9A%E6%A0%B7%E6%80%A7/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>/en/post/%E8%BD%AC%E8%BD%BD%E7%BF%BB%E8%AF%91/%E7%94%9F%E7%89%A9%E5%A4%9A%E6%A0%B7%E6%80%A7/</guid>
      
        <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Recent findings add weight to the evidence that intransitive competitions between species enrich the diversity of nature.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/07/28/WIs01g.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Some species seem to compete in a kind of rock-paper-scissors game in which no one species enjoys a lasting dominance. It may be part of why nature can maintain so much biodiversity.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://camillechew.com/&#34;&gt;Camille Chew&lt;/a&gt; for Quanta Magazine&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Apioneer of synthetic biology at the University of California, San Diego, &lt;a href=&#34;http://biodynamics.ucsd.edu/profiles/jeff&#34;&gt;Jeff Hasty&lt;/a&gt; has spent his 20-year career designing strategies to make genetic circuits in engineered bacteria work together. But several years ago, Hasty had to admit that even he couldn’t outfox the humble bacterium &lt;em&gt;Escherichia coli&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Hasty didn’t have a problem engineering useful, tightly regulated new genetic traits or getting them to work in cells. That was the easy part. What’s harder, he discovered, is maintaining those traits. If a cell needs to divert some of its resources to make a desired protein, it becomes marginally less fit than cells that don’t synthesize it. Inevitably, cells acquire mutations deactivating the introduced genetic circuitry, and the mutants quickly replace the original cells. As a result, the desired characteristic disappears, often within 36 hours.&lt;/p&gt;
&lt;p&gt;“It’s not a matter of if, it’s a matter of when,” Hasty said.&lt;/p&gt;
&lt;p&gt;For years, Hasty watched mutant &lt;em&gt;E. coli&lt;/em&gt; disable even his elegantly engineered systems. But &lt;a href=&#34;http://doi.org/10.1126/science.aaw0542&#34;&gt;last September in &lt;em&gt;Science&lt;/em&gt;&lt;/a&gt;, Hasty, his doctoral student &lt;a href=&#34;http://biodynamics.ucsd.edu/people&#34;&gt;Michael Liao&lt;/a&gt; and their colleagues designed a strategy to thwart even the most mutation-happy bacterium through a kind of “microbial peer pressure,” as &lt;a href=&#34;http://doi.org/10.1126/science.aay3157&#34;&gt;an accompanying commentary&lt;/a&gt; called it. The UCSD team used three engineered strains of &lt;em&gt;E. coli&lt;/em&gt; that worked in tandem. Each strain produced a toxin, a corresponding antitoxin to protect itself, and a second antitoxin for protection against one of the other strains. The first strain could kill the second but not the third; the second could kill the third but not the first; the third could kill the first but not the second.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/07/28/WIsw9S.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Michael Liao, a doctoral student of biodynamics and synthetic biology at the University of California, San Diego, helped to develop a system of engineered bacteria that stabilizes itself through rock-paper-scissors interactions.&lt;/p&gt;
&lt;p&gt;– University of California San Diego&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This round robin of antagonism meant that, by sequentially adding the strains of bacteria, the researchers could keep the numbers of engineered &lt;em&gt;E. coli&lt;/em&gt; high while ensuring that unhelpful mutants were snuffed out by the newcomers’ toxins. The ecological interaction of the cells stabilized the system.&lt;/p&gt;
&lt;p&gt;The project was nearing completion when Liao stumbled across the fact that other scientists were already paying attention to this strategy. Researchers in ecology and evolution had wrestled with it for decades as one possible answer to a major question in their field: How does so much biodiversity survive in nature? But even aside from its scientific history, the strategy is better known as a game used by children around the world to settle playground squabbles.&lt;/p&gt;
&lt;p&gt;The game is rock-paper-scissors, “a classic game in game theory and evolutionary theory,” said the mathematical biologist &lt;a href=&#34;https://www.eeb.ucsc.edu/about/dept-directory.php?uid=sinervo&#34;&gt;Barry Sinervo&lt;/a&gt; of the University of California, Santa Cruz, whose field studies on side-blotched lizards helped to establish its relevance to ecosystems.&lt;/p&gt;
&lt;p&gt;The rules of the game are easy: Rock beats scissors, scissors beat paper, and paper beats rock. No player has an advantage, and the chances of winning are equal regardless of what item they pick. When two people play, there’s always a clear victor. Add in more players, however, and the game becomes more complex, with the success of different strategies often cyclically rising and falling.&lt;/p&gt;
&lt;p&gt;Biologists studying rock-paper-scissors have modeled how the game plays out with scores or even hundreds of species. They have also investigated how it changes when the species interact in various landscapes, and when the species differ in their mobility and competitiveness. What they have found is that over time, rock-paper-scissors may enable many species to coexist in the same area by cycling in and out of dominance.&lt;/p&gt;
&lt;p&gt;Scientists are still determining the true importance of the game to living systems, but their discoveries have implications that could affect evolutionary theory, our understanding of ecological dynamics, biotechnology, and conservation policy. “It’s a universal game, which is pretty darn neat,” Sinervo said. “Rock-paper-scissors covers the entire biological universe.”&lt;/p&gt;
&lt;h2 id=&#34;equations-of-abundance&#34;&gt;Equations of Abundance&lt;/h2&gt;
&lt;p&gt;When Charles Darwin published his theory of natural selection in 1859, he and his contemporaries hypothesized that competition between individuals provided the force behind evolution. More than 150 years of experiments following Darwin’s initial work confirmed that competition is indeed a major evolutionary force. There is just one problem.&lt;/p&gt;
&lt;p&gt;If simplistic competition were the only evolutionary force, then after billions of years, only a handful of highly competitive species should be left. Instead, the planet is home to a staggering array of life. The number of species for which Earth is home is almost impossible to estimate; one recent attempt pegged it &lt;a href=&#34;https://www.journals.uchicago.edu/doi/10.1086/693564&#34;&gt;at about 2 billion&lt;/a&gt;, but earlier efforts ranged from &lt;a href=&#34;https://journals.plos.org/plosbiology/article?id=10.1371/journal.pbio.1001127&#34;&gt;under 10 million&lt;/a&gt; to &lt;a href=&#34;https://www.pnas.org/content/113/21/5970.full&#34;&gt;1 trillion&lt;/a&gt;. The lowland Amazon rainforests alone are home to &lt;a href=&#34;https://www.pnas.org/content/114/40/10695&#34;&gt;more than 6,700 tree species&lt;/a&gt; and 7,300 other seed plant species — numbers that don’t begin to account for the accompanying insects, mammals, fungi and microbes.&lt;/p&gt;
&lt;p&gt;“We look around and there are thousands, even millions, of microbes living in one hectare of forest,” said &lt;a href=&#34;https://gee.ethz.ch/people/profile.MjU3OTQy.TGlzdC8zMDU5LC0xMjcwMjU0MjUx.html&#34;&gt;Daniel Maynard&lt;/a&gt;, an ecologist at the Swiss Federal Institute of Technology Zurich. “And no matter what you do, they all survive. It’s not like one tears through the community and beats out everything else.”&lt;/p&gt;
&lt;p&gt;One of the first breakthroughs in explaining biodiversity came not from ecology but from mathematics. In 1910, the American biophysicist and statistician Alfred Lotka &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4534218/&#34;&gt;developed a series of equations&lt;/a&gt; to describe certain chemical reactions. By 1925, he had realized that the same equations could be adapted to describe the cyclic rise and fall of predator and prey populations. A year later, the Italian mathematician and physicist Vito Volterra independently developed the same set of equations.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Rock-paper-scissors covers the entire biological universe.”&lt;/p&gt;
&lt;p&gt;– Barry Sinervo, University of California, Santa Cruz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Their work showed how the number of predators depends on the number of prey. That insight might seem obvious, says &lt;a href=&#34;https://biological-sciences.uq.edu.au/profile/36/margaret-mayfield&#34;&gt;Margaret Mayfield&lt;/a&gt;, an ecologist at the University of Queensland in Australia, but the equations of Lotka and Volterra were groundbreaking in their time because they gave ecologists a way to start measuring and modeling the natural world.&lt;/p&gt;
&lt;p&gt;Still, the equations weren’t perfect. They rested on useful but simplistic assumptions, and they couldn’t represent relationships between species that weren’t predator and prey but competed for resources.&lt;/p&gt;
&lt;p&gt;That began to change in 1975, however, when the mathematicians &lt;a href=&#34;https://royalsociety.org/people/robert-may-11914/&#34;&gt;Robert May&lt;/a&gt; and &lt;a href=&#34;https://www.nhlbi.nih.gov/science/molecular-immunology/people/leonard-warren&#34;&gt;Warren Leonard&lt;/a&gt; &lt;a href=&#34;https://epubs.siam.org/doi/10.1137/0129022&#34;&gt;adapted the classic Lotka-Volterra equations&lt;/a&gt; for what ecologists call intransitive competition. When competition is transitive, it’s hierarchical: If A beats B and B beats C, then A also beats C, making A the winner in any contest. Intransitive competition lacks this hierarchy, because C can beat A. Instead of staying a clear winner, A will dominate for a while but then give way to C, which then gives way to B, followed once again by the rise of A.&lt;/p&gt;
&lt;p&gt;What May and Leonard created was in effect the math to describe rock-paper-scissors in ecology. Later mathematicians extended their work to show that these intransitive relationships could involve a nearly infinite number of species.&lt;/p&gt;
&lt;p&gt;Think of it like a gladiator death match, Maynard said. In single combat against a skilled fighter, he said, “I’m going to lose.” But if he were in a group of 100 fighters, he said, other defensive options might be available, such as forming an alliance with a stronger fighter. That strategy might help him outlast his competitors and come out on top.&lt;/p&gt;
&lt;h2 id=&#34;mating-games&#34;&gt;Mating Games&lt;/h2&gt;
&lt;p&gt;In the 1970s and ’80s, scientists began to document real-life examples in papers that showed rock-paper-scissors relationships among organisms living on coral reefs and among strains of the common yeast &lt;em&gt;Saccharomyces cerevisiae&lt;/em&gt;. Among the most famous studies, however, was Sinervo’s work on the common side-blotched lizard, &lt;a href=&#34;https://doi.org/10.1038/380240a0&#34;&gt;published in &lt;em&gt;Nature&lt;/em&gt;&lt;/a&gt; in 1996.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/07/28/WIsBcQ.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Male common side-blotched lizards with blue throats, like this one, band together to guard their females cooperatively. Other competing forms of this lizard with orange and yellow throats use different strategies.&lt;/p&gt;
&lt;p&gt;– &lt;a href=&#34;https://bit.ly/3atOhlV&#34;&gt;Rick Cameron&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;At first glance, the common side-blotched lizard lives down to its humble name. It’s small, brown and finger-length, and its main distinguishing characteristics are the patterns on its back and a spot of color on its throat. The lizards’ mating system, however, is far more unusual. In 1990, Sinervo traveled to the heart of side-blotched lizard territory, on the slopes of California’s parched Inner Coast Range, just outside the city of Merced. Sinervo spent five years studying how male lizards convince their lady friends to swipe right — and how they get their rivals to stay away.&lt;/p&gt;
&lt;p&gt;A male’s mating strategy, Sinervo knew, was indicated by the patch of color on its throat. Lizards with orange throats are ultra-competitive. They individually guard large harems of females and attack any trespassing male rivals. Blues cooperate with each other to guard their territory and mates, a strategy that is only somewhat effective against the oranges. But it makes them less susceptible to the sneaky yellows, which mimic the appearance of sexually mature females and sneak into orange males’ territory to mate without fear of competition.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/07/28/WIsDXj.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Barry Sinervo, a mathematical biologist at the University of California, Santa Cruz, led landmark studies of the side-blotched lizards. He showed that the intransitive competitions between the various males creates a cycle of dominance in which each of the three coexisting forms is on top for a year or two.&lt;/p&gt;
&lt;p&gt;– Carolyn Lagattuta/UC Santa Cruz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Sinervo noticed that at his study site, each color dominated for a year or two, after which a specific rival took over: Blue gave way to orange, which gave way to yellow, which gave way to blue once again. Some locations might have just a single color, but Sinervo never saw just two colors together, because one always completely replaced the other. But with three, the populations oscillated in dominance. When Sinervo and a colleague later began writing out equations to describe the observations, they soon realized they were describing a form of rock-paper-scissors.&lt;/p&gt;
&lt;p&gt;Other situations in nature where this game theory seems to guide evolution have come to light. &lt;a href=&#34;https://doi.org/10.1086/706810&#34;&gt;In the February 2020 issue&lt;/a&gt; of &lt;em&gt;The&lt;/em&gt; &lt;em&gt;American Naturalist&lt;/em&gt;, for instance, Sinervo and his colleagues describe how it explains the prevalence of particular mating strategies among 288 species of rodents — and why certain species are more or less likely to be promiscuous, polygynous or monogamous.&lt;/p&gt;
&lt;p&gt;Still, observations from nature can only tell scientists so much. To understand what types of environments create these rock-paper-scissors games between species and whether the new equations can help explain biodiversity, scientists had to go back to the lab.&lt;/p&gt;
&lt;h2 id=&#34;local-environments-change-the-game&#34;&gt;Local Environments Change the Game&lt;/h2&gt;
&lt;p&gt;The bacterium &lt;em&gt;E. coli&lt;/em&gt; gets a bad rap as a mundane colon dweller. Yet over the years, microbiologists have identified hundreds of &lt;em&gt;E. coli&lt;/em&gt; strains with diverse properties. One family carries a group of genes named Col, which produces a toxin called colicin but also a protein that protects the bacterium against it. Some &lt;em&gt;E. coli&lt;/em&gt; strains are sensitive to colicin, and others have evolved mutations that make them resistant. Resistant strains (known as R) grow faster than colicin-producing (C) strains because they don’t have the cost of producing colicin. Sensitive (S) strains can outcompete R because the protective mutations also impair the cells’ ability to transport nutrients. This system creates a perfect rock-paper-scissors setup, since R beats C, C beats S, and S beats R.&lt;/p&gt;
&lt;p&gt;About two decades ago, microbiologists at Stanford University had the bacteria play rock-paper-scissors in three different situations: a flask where they all mixed together; a static petri dish where they were grouped together with limited movement; and a “mixed plate” environment where they had more intermediate mobility. In &lt;a href=&#34;https://www.nature.com/articles/nature00823&#34;&gt;their &lt;em&gt;Nature&lt;/em&gt; paper&lt;/a&gt; in 2002, &lt;a href=&#34;https://www.biology.washington.edu/people/profile/benjamin-kerr&#34;&gt;Benjamin Kerr&lt;/a&gt; (now at the University of Washington), &lt;a href=&#34;https://ie2.uoregon.edu/people/bohannan/&#34;&gt;Brendan Bohannan&lt;/a&gt; (now at the University of Oregon), and their colleagues found that in both the flask and the distributed plate, the R strain quickly won out over both the S and C groups.&lt;/p&gt;
&lt;p&gt;The static petri dish, however, told a different story. When Kerr and Bohannan analyzed photographs of the bacterial colonies growing there, they saw a game of rock-paper-scissors playing out where the different strains came into contact, just as theory predicted. These results showed that local environments play a crucial role not only in the emergence of rock-paper-scissors, but in the consequent appearance and maintenance of biodiversity, explained &lt;a href=&#34;https://ecologyandevolution.uchicago.edu/faculty/stefano-allesina-phd&#34;&gt;Stefano Allesina&lt;/a&gt;, a theoretical ecologist at the University of Chicago.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/07/28/WIs01g.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Reading this paper as a graduate student, Allesina found it “mind-blowing.” He picked the study for his journal club and posed a rhetorical question to his fellow students: Could rock-paper-scissors work with as many as 70 strains of &lt;em&gt;E. coli&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;Because that discussion question stuck in his brain, Allesina decided to focus his work on developing computational models that could simulate rock-paper-scissors for large numbers of players. He found that adding more species to his model &lt;a href=&#34;https://doi.org/10.1038/nature23273&#34;&gt;bolstered the system’s stability&lt;/a&gt;, making it less likely that any individual population would go extinct. Maynard reached the same conclusion in his research: &lt;a href=&#34;http://dx.doi.org/10.1038/s41559-017-0156&#34;&gt;Biodiversity begets more biodiversity&lt;/a&gt; as a simple result of the system’s stability because large numbers of organisms can coexist.&lt;/p&gt;
&lt;p&gt;This interdependence is part of what makes intransitivity so very common, according to Maynard. “You can’t be great at everything,” he said. “That genetically just can’t exist.” Each species has an Achilles’ heel that leaves the way open for rock-paper-scissors effects, which make every species vulnerable but also offer some relief from overwhelming predation. More diverse systems have higher levels of intransitivity and stability.&lt;/p&gt;
&lt;p&gt;“It’s hard to reconcile a very unstable world with what we’re seeing in nature,” Allesina said. And as the diversity of a system increases, it offers more ways for species to interact, which can also lead to greater coexistence and biodiversity.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://physics.uoregon.edu/profile/tsu/&#34;&gt;Tristan Ursell&lt;/a&gt; at the University of Oregon, inspired by Kerr and Bohannan’s work, wanted to take it one step further. Although their study had shown that the distribution of organisms was key to the development of rock-paper-scissors, the environments in their experiments didn’t have physical barriers that would prevent the bacteria from moving about. The natural world is nothing like that: Whether a microbe is living on a plant’s roots or snuggled up somewhere in our intestines, its environment is filled with obstructions. Ursell, a biophysicist rather than a microbiologist, decided to create a series of computer models to see how physical obstacles could alter the rock-paper-scissors cycles.&lt;/p&gt;
&lt;p&gt;Going into the project, Ursell expected that the obstacles might have minor consequences for the simulation. “I did not anticipate that it would in some cases completely flip over the stability,” he said.&lt;/p&gt;
&lt;h2 id=&#34;why-saving-single-species-isnt-enough&#34;&gt;&lt;strong&gt;Why Saving Single Species Isn’t Enough&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;Pitting two species against each other in an open space, for example, typically ended with one replacing the other. But if the landscape in Ursell’s computer model had barriers, both species could often coexist. Meanwhile, three species locked in a rock-paper-scissors game in an open space could coexist by cycling in and out of dominance. Introducing a barrier into their world often led to one species eliminating the others.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://doi.org/10.1073/pnas.1811887116&#34;&gt;Ursell’s resulting paper&lt;/a&gt; with Nick Vallespir Lowery, published online in December 2018 by the &lt;em&gt;Proceedings of the National Academies of Science&lt;/em&gt;, joined other work showing the hidden complexities of real-life rock-paper-scissors games. For example, a team of scientists led by &lt;a href=&#34;https://www.theorie.physik.uni-muenchen.de/lsfrey/members/group_leaders/erwin_frey/index.html&#34;&gt;Erwin Frey&lt;/a&gt; and &lt;a href=&#34;https://www.theorie.physik.uni-muenchen.de/lsfrey/members/former_mem/postdocs/marianne_bauer/index.html&#34;&gt;Marianne Bauer&lt;/a&gt; at the Ludwig Maximilian University of Munich created mathematical models of soil microbes, which obtain nutrients and water via small openings in the soil itself, holes that also allow them to interact with their neighbors. If you try to grow soil-dwelling microbes in the laboratory, the species that can reproduce the fastest wins out. Yet in nature, a single gram of soil can contain more than 10,000 types of microbes.&lt;/p&gt;
&lt;p&gt;The secret, &lt;a href=&#34;http://doi.org/10.1103/PhysRevE.97.042307&#34;&gt;Frey and Bauer found&lt;/a&gt;, is the amount of time is takes for the bacteria to adapt to changing environmental conditions. Because of this constraint, and the connectivity built into soil’s complex physical structure, thousands of microbes can continue to coexist.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://z3.ax1x.com/2021/07/28/WIssns.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Red, blue and yellow “microbes” compete intransitively in this simulation. If they have the right mobility, their constantly shifting patterns of dominance form entangled, rotating spirals that cover the landscape. Changing their mobility or introducing obstacles completely changes the outcome, however.&lt;/p&gt;
&lt;p&gt;– &lt;a href=&#34;https://doi-org.emedien.ub.uni-muenchen.de/10.1038/nature06095&#34;&gt;Reichenbach, T., Mobilia, M. &amp;amp; Frey, E. Mobility&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This feedback between ecology and evolution is crucial, said &lt;a href=&#34;https://chroniclevitae.com/people/1049762-swati-patel/profile&#34;&gt;Swati Patel&lt;/a&gt;, an applied mathematician at Tulane University, because these interactions can lead to either ecosystem stability or extinction, as &lt;a href=&#34;https://www.biorxiv.org/content/biorxiv/early/2017/04/28/104505&#34;&gt;her mathematical work&lt;/a&gt; in &lt;em&gt;The American Naturalist&lt;/em&gt; showed. If species A starts to go extinct, she explained, species B might evolve in such a way that A can recover. This idea also works in reverse.&lt;/p&gt;
&lt;p&gt;“Our human impact on various ecosystems can … make species evolve in ways we hadn’t anticipated,” Patel said.&lt;/p&gt;
&lt;p&gt;Long-term ecological stability and coexistence doesn’t mean that population numbers will remain the same. Fluctuations are built into these models, Patel said. But how widely they vary and how quickly is key.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.stoufferlab.org/people/stouffer/&#34;&gt;Daniel Stouffer&lt;/a&gt;, an ecologist at the University of Canterbury in New Zealand and a frequent collaborator with Mayfield, says that weaker interactions help keep fluctuations between species from becoming too extreme. Ecologists call this the storage effect. “A species doesn’t always have to be the best. It just has to have enough times where it can be sufficiently good that it can weather the bad years,” Stouffer said.&lt;/p&gt;
&lt;p&gt;If the numbers of one species drop too low, a chance event like a disease outbreak or drought can cause it to go extinct. These extinctions open a vacuum in an ecosystem, which can create an extinction cascade or open space for other organisms to recover. These ripple effects also provide clues for conservation biologists working to save endangered organisms. According to Allesina, theoretical work in rock-paper-scissors shows that ecologists may need to focus on saving entire ecosystems instead of just individual species.&lt;/p&gt;
&lt;p&gt;“Imagine that you only want to conserve the rock of the rock-paper-scissor [trio],” he said. You might not care about the paper or the scissors, but as soon as one goes extinct, that “could reverberate through these networks of interactions to other species that you would never have guessed.”&lt;/p&gt;
&lt;p&gt;Despite the advances in theoretical work that describes how rock-paper-scissors might operate in larger ecosystems, Stouffer points out that biologists have documented relatively few examples of these intransitive dynamics in the wild. Models show that they should exist, but identifying where rock-paper-scissors games are likely to dominate remains a challenge for evolutionary game theorists.&lt;/p&gt;
&lt;p&gt;Maynard says that the best way forward may be for scientists to take their cues from nature itself. He has begun to develop a new statistical approach that might enable him to infer how species interact and to identify emergent patterns in those interactions. But he says that the key will be to remember that rock-paper-scissors is only one piece of a larger biodiversity puzzle, and that constant change — whether via gene mutation and evolution or natural shifts in climate — is the rule.&lt;/p&gt;
&lt;h2 id=&#34;related&#34;&gt;RELATED:&lt;/h2&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;h5 id=&#34;evolution-saves-species-from-kill-the-winner-disastershttpswwwquantamagazineorgevolution-saves-species-from-kill-the-winner-disasters-20180212&#34;&gt;&lt;a href=&#34;https://www.quantamagazine.org/evolution-saves-species-from-kill-the-winner-disasters-20180212/&#34;&gt;Evolution Saves Species From ‘Kill the Winner’ Disasters&lt;/a&gt;&lt;/h5&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5 id=&#34;biodiversity-alters-strategies-of-bacterial-evolutionhttpswwwquantamagazineorgbiodiversity-alters-strategies-of-bacterial-evolution-20200106&#34;&gt;&lt;a href=&#34;https://www.quantamagazine.org/biodiversity-alters-strategies-of-bacterial-evolution-20200106/&#34;&gt;Biodiversity Alters Strategies of Bacterial Evolution&lt;/a&gt;&lt;/h5&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h5 id=&#34;why-winning-in-rock-paper-scissors-and-in-life-isnt-everythinghttpswwwquantamagazineorgthe-game-theory-math-behind-rock-paper-scissors-20180402&#34;&gt;&lt;a href=&#34;https://www.quantamagazine.org/the-game-theory-math-behind-rock-paper-scissors-20180402/&#34;&gt;Why Winning in Rock-Paper-Scissors (and in Life) Isn’t Everything&lt;/a&gt;&lt;/h5&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
      
    </item>
    
    <item>
      <title>Math Preview</title>
      <link>/en/post/%E8%BD%AC%E8%BD%BD%E7%BF%BB%E8%AF%91/math-preview/</link>
      <pubDate>Mon, 04 Mar 2019 16:01:23 +0800</pubDate>
      
      <guid>/en/post/%E8%BD%AC%E8%BD%BD%E7%BF%BB%E8%AF%91/math-preview/</guid>
      
        <description>&lt;p&gt;&lt;a href=&#34;https://www.intmath.com/cg5/katex-mathjax-comparison.php&#34;&gt;KaTeX and MathJax Comparison Demo, currently processed as KaTex&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;repeating-fractions&#34;&gt;Repeating fractions&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\frac{1}{\Bigl(\sqrt{\phi \sqrt{5}}-\phi\Bigr) e^{\frac25 \pi}} \equiv 1+\frac{e^{-2\pi}} {1+\frac{e^{-4\pi}} {1+\frac{e^{-6\pi}} {1+\frac{e^{-8\pi}} {1+\cdots} } } }
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;summation-notation&#34;&gt;Summation notation&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;sum-of-a-series&#34;&gt;Sum of a Series&lt;/h2&gt;

&lt;p&gt;I broke up the next two examples into separate lines so it behaves better on a mobile phone. That&#39;s why they include \displaystyle.&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\displaystyle\sum_{i=1}^{k+1}i
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\displaystyle= \left(\sum_{i=1}^{k}i\right) +(k+1)
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\displaystyle= \frac{k(k+1)}{2}+k+1
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\displaystyle= \frac{k(k+1)+2(k+1)}{2}
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\displaystyle= \frac{(k+1)(k+2)}{2}
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\displaystyle= \frac{(k+1)((k+1)+1)}{2}
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;product-notation&#34;&gt;Product notation&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\displaystyle 1 + \frac{q^2}{(1-q)}+\frac{q^6}{(1-q)(1-q^2)}+\cdots = \displaystyle \prod_{j=0}^{\infty}\frac{1}{(1-q^{5j+2})(1-q^{5j+3})}, \displaystyle\text{ for }\lvert q\rvert &lt; 1.
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;inline-math&#34;&gt;Inline math&lt;/h2&gt;

&lt;p&gt;And here is some in-line math: &lt;span  class=&#34;math&#34;&gt;\( k_{n+1} = n^2 + k_n^2 - k_{n-1} \)&lt;/span&gt; , followed by some more text.&lt;/p&gt;

&lt;h2 id=&#34;greek-letters&#34;&gt;Greek Letters&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\Gamma\ \Delta\ \Theta\ \Lambda\ \Xi\ \Pi\ \Sigma\ \Upsilon\ \Phi\ \Psi\ \Omega
\alpha\ \beta\ \gamma\ \delta\ \epsilon\ \zeta\ \eta\ \theta\ \iota\ \kappa\ \lambda\ \mu\ \nu\ \xi \ \omicron\ \pi\ \rho\ \sigma\ \tau\ \upsilon\ \phi\ \chi\ \psi\ \omega\ \varepsilon\ \vartheta\ \varpi\ \varrho\ \varsigma\ \varphi
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;arrows&#34;&gt;Arrows&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\gets\ \to\ \leftarrow\ \rightarrow\ \uparrow\ \Uparrow\ \downarrow\ \Downarrow\ \updownarrow\ \Updownarrow
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\Leftarrow\ \Rightarrow\ \leftrightarrow\ \Leftrightarrow\ \mapsto\ \hookleftarrow
\leftharpoonup\ \leftharpoondown\ \rightleftharpoons\ \longleftarrow\ \Longleftarrow\ \longrightarrow
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\Longrightarrow\ \longleftrightarrow\ \Longleftrightarrow\ \longmapsto\ \hookrightarrow\ \rightharpoonup
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\rightharpoondown\ \leadsto\ \nearrow\ \searrow\ \swarrow\ \nwarrow
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;symbols&#34;&gt;Symbols&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\surd\ \barwedge\ \veebar\ \odot\ \oplus\ \otimes\ \oslash\ \circledcirc\ \boxdot\ \bigtriangleup
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\bigtriangledown\ \dagger\ \diamond\ \star\ \triangleleft\ \triangleright\ \angle\ \infty\ \prime\ \triangle
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;calculus&#34;&gt;Calculus&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\int u \frac{dv}{dx}\,dx=uv-\int \frac{du}{dx}v\,dx
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
f(x) = \int_{-\infty}^\infty \hat f(\xi)\,e^{2 \pi i \xi x}
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\oint \vec{F} \cdot d\vec{s}=0
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;lorenz-equations&#34;&gt;Lorenz Equations&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\begin{aligned} \dot{x} &amp; = \sigma(y-x) \\ \dot{y} &amp; = \rho x - y - xz \\ \dot{z} &amp; = -\beta z + xy \end{aligned}
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;cross-product&#34;&gt;Cross Product&lt;/h2&gt;

&lt;p&gt;This works in KaTeX, but the separation of fractions in this environment is not so good.&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\mathbf{V}_1 \times \mathbf{V}_2 = \begin{vmatrix} \mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\ \frac{\partial X}{\partial u} &amp; \frac{\partial Y}{\partial u} &amp; 0 \\ \frac{\partial X}{\partial v} &amp; \frac{\partial Y}{\partial v} &amp; 0 \end{vmatrix}
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Here&#39;s a workaround: make the fractions smaller with an extra class that targets the spans with &amp;quot;mfrac&amp;quot; class (makes no difference in the MathJax case):&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\mathbf{V}_1 \times \mathbf{V}_2 = \begin{vmatrix} \mathbf{i} &amp; \mathbf{j} &amp; \mathbf{k} \\ \frac{\partial X}{\partial u} &amp; \frac{\partial Y}{\partial u} &amp; 0 \\ \frac{\partial X}{\partial v} &amp; \frac{\partial Y}{\partial v} &amp; 0 \end{vmatrix}
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;accents&#34;&gt;Accents&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\hat{x}\ \vec{x}\ \ddot{x}
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;stretchy-brackets&#34;&gt;Stretchy brackets&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\left(\frac{x^2}{y^3}\right)
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;evaluation-at-limits&#34;&gt;Evaluation at limits&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\left.\frac{x^3}{3}\right|_0^1
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;case-definitions&#34;&gt;Case definitions&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
f(n) = \begin{cases} \frac{n}{2}, &amp; \text{if } n\text{ is even} \\ 3n+1, &amp; \text{if } n\text{ is odd} \end{cases}
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;maxwells-equations&#34;&gt;Maxwell&#39;s Equations&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\begin{aligned} \nabla \times \vec{\mathbf{B}} -\, \frac1c\, \frac{\partial\vec{\mathbf{E}}}{\partial t} &amp; = \frac{4\pi}{c}\vec{\mathbf{j}} \\ \nabla \cdot \vec{\mathbf{E}} &amp; = 4 \pi \rho \\ \nabla \times \vec{\mathbf{E}}\, +\, \frac1c\, \frac{\partial\vec{\mathbf{B}}}{\partial t} &amp; = \vec{\mathbf{0}} \\ \nabla \cdot \vec{\mathbf{B}} &amp; = 0 \end{aligned}
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;These equations are quite cramped. We can add vertical spacing using (for example) [1em] after each line break (\). as you can see here:&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\begin{aligned} \nabla \times \vec{\mathbf{B}} -\, \frac1c\, \frac{\partial\vec{\mathbf{E}}}{\partial t} &amp; = \frac{4\pi}{c}\vec{\mathbf{j}} \\[1em] \nabla \cdot \vec{\mathbf{E}} &amp; = 4 \pi \rho \\[0.5em] \nabla \times \vec{\mathbf{E}}\, +\, \frac1c\, \frac{\partial\vec{\mathbf{B}}}{\partial t} &amp; = \vec{\mathbf{0}} \\[1em] \nabla \cdot \vec{\mathbf{B}} &amp; = 0 \end{aligned}
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;statistics&#34;&gt;Statistics&lt;/h2&gt;

&lt;p&gt;Definition of combination:&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\frac{n!}{k!(n-k)!} = {^n}C_k
{n \choose k}
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;fractions-on-fractions&#34;&gt;Fractions on fractions&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\frac{\frac{1}{x}+\frac{1}{y}}{y-z}
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;nth-root&#34;&gt;n-th root&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\sqrt[n]{1+x+x^2+x^3+\ldots}
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;matrices&#34;&gt;Matrices&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
\begin{pmatrix} a_{11} &amp; a_{12} &amp; a_{13}\\ a_{21} &amp; a_{22} &amp; a_{23}\\ a_{31} &amp; a_{32} &amp; a_{33} \end{pmatrix}
\begin{bmatrix} 0 &amp; \cdots &amp; 0 \\ \vdots &amp; \ddots &amp; \vdots \\ 0 &amp; \cdots &amp; 0 \end{bmatrix}
\]&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&#34;punctuation&#34;&gt;Punctuation&lt;/h2&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
f(x) = \sqrt{1+x} \quad (x \ge -1)
f(x) \sim x^2 \quad (x\to\infty)
\]&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Now with punctuation:&lt;/p&gt;

&lt;p&gt;&lt;span  class=&#34;math&#34;&gt;\[
f(x) = \sqrt{1+x}, \quad x \ge -1
f(x) \sim x^2, \quad x\to\infty
\]&lt;/span&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>A Visual Guide to Version Control</title>
      <link>/en/post/%E7%BC%96%E7%A8%8B%E4%B8%96%E7%95%8C/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%85%A5%E9%97%A8/</link>
      <pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/en/post/%E7%BC%96%E7%A8%8B%E4%B8%96%E7%95%8C/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E5%85%A5%E9%97%A8/</guid>
      
        <description>&lt;p&gt;&lt;a href=&#34;https://betterexplained.com/&#34;&gt;Home&lt;/a&gt; &amp;gt; &lt;a href=&#34;https://betterexplained.com/articles/category/guides/&#34;&gt;Guides&lt;/a&gt;, &lt;a href=&#34;https://betterexplained.com/articles/category/programming/&#34;&gt;Programming&lt;/a&gt; &amp;gt;&lt;/p&gt;
&lt;p&gt;Version Control (aka Revision Control aka Source Control) lets you track your files over time. Why do you care? So when you mess up you can easily get back to a previous working version.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://betterexplained.com/wp-content/uploads/version_control/version_control_intro_small.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;You’ve probably cooked up your own&lt;/strong&gt; version control system without realizing it had such a geeky name. Got any files like this? (Not these exact ones I hope).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;KalidAzadResumeOct2014.doc&lt;/li&gt;
&lt;li&gt;KalidAzadResumeMar2015.doc&lt;/li&gt;
&lt;li&gt;instacalc-logo3.png&lt;/li&gt;
&lt;li&gt;instacalc-logo4.png&lt;/li&gt;
&lt;li&gt;logo-old.png&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;It’s why we use “Save As”.&lt;/strong&gt; You want the new file without obliterating the old one. It’s a common problem, and solutions are usually like this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Make a &lt;strong&gt;single backup copy&lt;/strong&gt; (Document.old.txt).&lt;/li&gt;
&lt;li&gt;If we’re clever, we add a &lt;strong&gt;version number or date&lt;/strong&gt;: Document_V1.txt, DocumentMarch2015.txt&lt;/li&gt;
&lt;li&gt;We may even use a &lt;strong&gt;shared folder&lt;/strong&gt; so other people can see and edit files without sending them over email. Hopefully they relabel the file after they save it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;so-why-do-we-need-a-version-control-system-vcs&#34;&gt;So Why Do We Need A Version Control System (VCS)?&lt;/h2&gt;
&lt;p&gt;Our shared folder/naming system is fine for class projects or one-time papers. But software projects? Not a chance.&lt;/p&gt;
&lt;p&gt;Do you think the Windows source code sits in a shared folder like “Windows2007-Latest-UPDATED!!”, for anyone to edit? That every programmer just works in a different subfolder? No way.&lt;/p&gt;
&lt;p&gt;Large, fast-changing projects with many authors need a Version Control System (geekspeak for “file database”) to track changes and avoid general chaos. A good VCS does the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Backup and Restore.&lt;/strong&gt; Files are saved as they are edited, and you can jump to any moment in time. Need that file as it was on Feb 23, 2007? No problem.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Synchronization.&lt;/strong&gt; Lets people share files and stay up-to-date with the latest version.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Short-term undo.&lt;/strong&gt; Monkeying with a file and messed it up? (That’s just like you, isn’t it?). Throw away your changes and go back to the “last known good” version in the database.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Long-term undo.&lt;/strong&gt; Sometimes we mess up bad. Suppose you made a change a year ago, and it had a bug. Jump back to the old version, and see what change was made that day.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Track Changes&lt;/strong&gt;. As files are updated, you can leave messages explaining why the change happened (stored in the VCS, not the file). This makes it easy to see how a file is evolving over time, and why.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Track Ownership.&lt;/strong&gt; A VCS tags every change with the name of the person who made it. Helpful for &lt;del&gt;&lt;a href=&#34;http://www.unwords.com/unword/blamestorming.html&#34;&gt;blamestorming&lt;/a&gt;&lt;/del&gt; giving credit.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sandboxing&lt;/strong&gt;, or insurance against yourself. Making a big change? You can make temporary changes in an isolated area, test and work out the kinks before “checking in” your changes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Branching and merging&lt;/strong&gt;. A larger sandbox. You can &lt;strong&gt;branch&lt;/strong&gt; a copy of your code into a separate area and modify it in isolation (tracking changes separately). Later, you can &lt;strong&gt;merge&lt;/strong&gt; your work back into the common area.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Shared folders are quick and simple, but can’t beat these features.&lt;/p&gt;
&lt;h2 id=&#34;learn-the-lingo&#34;&gt;Learn The Lingo&lt;/h2&gt;
&lt;p&gt;Most version control systems involve the following concepts, though the labels may be different.&lt;/p&gt;
&lt;p&gt;Basic Setup&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Repository (repo)&lt;/strong&gt;: The database storing the files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt;: The computer storing the repo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Client&lt;/strong&gt;: The computer connecting to the repo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Working Set/Working Copy&lt;/strong&gt;: Your local directory of files, where you make changes.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Trunk/Main&lt;/strong&gt;: The primary location for code in the repo. Think of code as a family tree — the trunk is the main line.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Basic Actions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Add&lt;/strong&gt;: Put a file into the repo for the first time, i.e. begin tracking it with Version Control.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Revision&lt;/strong&gt;: What version a file is on (v1, v2, v3, etc.).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Head&lt;/strong&gt;: The latest revision in the repo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Check out&lt;/strong&gt;: Download a file from the repo.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Check in&lt;/strong&gt;: Upload a file to the repository (if it has changed). The file gets a new revision number, and people can “check out” the latest one.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Checkin Message&lt;/strong&gt;: A short message describing what was changed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Changelog/History&lt;/strong&gt;: A list of changes made to a file since it was created.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Update/Sync&lt;/strong&gt;: Synchronize your files with the latest from the repository. This lets you grab the latest revisions of all files.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Revert&lt;/strong&gt;: Throw away your local changes and reload the latest version from the repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Advanced Actions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Branch&lt;/strong&gt;: Create a separate copy of a file/folder for private use (bug fixing, testing, etc). Branch is both a verb (“branch the code”) and a noun (“Which branch is it in?”).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Diff/Change/Delta&lt;/strong&gt;: Finding the differences between two files. Useful for seeing what changed between revisions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Merge (or patch)&lt;/strong&gt;: Apply the changes from one file to another, to bring it up-to-date. For example, you can merge features from one branch into another. (At Microsoft this was called &lt;a href=&#34;https://blogs.msdn.com/larryosterman/archive/2005/02/01/364840.aspx&#34;&gt;Reverse Integrate and Forward Integrate&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Conflict&lt;/strong&gt;: When pending changes to a file contradict each other (both changes cannot be applied).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Resolve&lt;/strong&gt;: Fixing the changes that contradict each other and checking in the correct version.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Locking&lt;/strong&gt;: Taking control of a file so nobody else can edit it until you unlock it. Some version control systems use this to avoid conflicts.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Breaking the lock&lt;/strong&gt;: Forcibly unlocking a file so you can edit it. It may be needed if someone locks a file and goes on vacation (or “calls in sick” the day Halo 3 comes out).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Check out for edit&lt;/strong&gt;: Checking out an “editable” version of a file. Some VCSes have editable files by default, others require an explicit command.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And a typical scenario goes like this:&lt;/p&gt;
&lt;p&gt;Alice &lt;strong&gt;adds&lt;/strong&gt; a file (&lt;code&gt;list.txt&lt;/code&gt;) to the &lt;strong&gt;repository&lt;/strong&gt;. She &lt;strong&gt;checks it out&lt;/strong&gt;, makes a change (puts “milk” on the list), and checks it back in with a checkin message (“Added required item.”). The next morning, Bob &lt;strong&gt;updates&lt;/strong&gt; his local working set and sees the latest revision of &lt;code&gt;list.txt&lt;/code&gt;, which contains “milk”. He can browse the &lt;strong&gt;changelog&lt;/strong&gt; or &lt;strong&gt;diff&lt;/strong&gt; to see that Alice put “milk” the day before.&lt;/p&gt;
&lt;h2 id=&#34;visual-examples&#34;&gt;Visual Examples&lt;/h2&gt;
&lt;p&gt;This guide is purposefully high-level: most tutorials throw a bunch of text commands at you. Let’s cover the high-level concepts without getting stuck in the syntax (the &lt;a href=&#34;http://svnbook.red-bean.com/&#34;&gt;Subversion manual&lt;/a&gt; is always there, don’t worry). Sometimes it’s nice to &lt;strong&gt;see what’s possible&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;checkins&#34;&gt;Checkins&lt;/h2&gt;
&lt;p&gt;The simplest scenario is checking in a file (&lt;code&gt;list.txt&lt;/code&gt;) and modifying it over time.&lt;/p&gt;
&lt;p&gt;c&lt;/p&gt;
&lt;p&gt;Each time we check in a new version, we get a new revision (r1, r2, r3, etc.). In Subversion you’d do:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;svn add list.txt
&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;modify the file&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
svn ci list.txt -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;Changed the list&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The &lt;code&gt;-m&lt;/code&gt; flag is the message to use for this checkin.&lt;/p&gt;
&lt;h2 id=&#34;checkouts-and-editing&#34;&gt;Checkouts And Editing&lt;/h2&gt;
&lt;p&gt;In reality, you might not keep checking in a file. You may have to &lt;strong&gt;check out, edit and check in&lt;/strong&gt;. The cycle looks like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://betterexplained.com/wp-content/uploads/version_control/checkout_edit.png&#34; alt=&#34;version control checkout&#34;&gt;&lt;/p&gt;
&lt;p&gt;If you don’t like your changes and want to start over, you can &lt;strong&gt;revert&lt;/strong&gt; to the previous version and start again (or stop). When checking out, you get the latest revision by default. If you want, you can specify a particular revision. In Subversion, run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;svn co list.txt &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;get latest version&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
…edit file…
svn revert list.txt &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;throw away changes&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
svn co -r2 list.txt &lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;check out particular version&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;diffs&#34;&gt;Diffs&lt;/h2&gt;
&lt;p&gt;The trunk has a history of &lt;strong&gt;changes&lt;/strong&gt; as a file evolves. Diffs are the changes you made while editing: imagine you can “peel” them off and apply them to a file:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://betterexplained.com/wp-content/uploads/version_control/basic_diffs.png&#34; alt=&#34;version control diff&#34;&gt;&lt;/p&gt;
&lt;p&gt;For example, to go from r1 to r2, we add eggs (+Eggs). Imagine peeling off that red sticker and placing it on r1, to get r2.&lt;/p&gt;
&lt;p&gt;And to get from r2 to r3, we add Juice (+Juice). To get from r3 to r4, we remove Juice and add Soup (-Juice, +Soup).&lt;/p&gt;
&lt;p&gt;Most version control systems &lt;strong&gt;store diffs rather than full copies of the file&lt;/strong&gt;. This saves disk space: 4 revisions of a file doesn’t mean we have 4 copies; we have 1 copy and 4 small diffs. Pretty nifty, eh? In SVN, we diff two revisions of a file like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;svn diff -r3:4 list.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Diffs help us notice changes (“How did you fix that bug again?”) and even apply them from one branch to another.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Bonus question:&lt;/strong&gt; what’s the diff from r1 to r4?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;+Eggs
+Soup
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Notice how “Juice” wasn’t even involved — the direct jump from r1 to r4 doesn’t need that change, since Juice was overridden by Soup.&lt;/p&gt;
&lt;h2 id=&#34;branching&#34;&gt;Branching&lt;/h2&gt;
&lt;p&gt;Branches let us copy code into a separate folder so we can monkey with it separately:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://betterexplained.com/wp-content/uploads/version_control/first_branch.png&#34; alt=&#34;version control branch&#34;&gt;&lt;/p&gt;
&lt;p&gt;For example, we can create a branch for new, experimental ideas for our list: crazy things like Rice or Eggo waffles. Depending on the version control system, creating a branch (copy) may change the revision number.&lt;/p&gt;
&lt;p&gt;Now that we have a branch, we can change our code and work out the kinks. (&lt;em&gt;“Hrm… waffles? I don’t know what the boss will think. Rice is a safe bet.”&lt;/em&gt;). Since we’re in a separate branch, we can make changes and test in isolation, knowing our changes won’t hurt anyone. And our branch history is under version control.&lt;/p&gt;
&lt;p&gt;In Subversion, you create a branch simply by copying a directory to another.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;svn copy http://path/to/trunk http://path/to/branch
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;So branching isn’t too tough of a concept: &lt;strong&gt;Pretend you copied your code into a different directory.&lt;/strong&gt; You’ve probably branched your code in school projects, making sure you have a “fail safe” version you can return to if things blow up.&lt;/p&gt;
&lt;h2 id=&#34;merging&#34;&gt;Merging&lt;/h2&gt;
&lt;p&gt;Branching sounds simple, right? Well, it’s not — figuring out how to merge changes from one branch to another can be tricky.&lt;/p&gt;
&lt;p&gt;Let’s say we want to get the “Rice” feature from our experimental branch into the mainline. How would we do this? Diff r6 and r7 and apply that to the main line?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Wrongo.&lt;/strong&gt; We only want to apply the changes &lt;strong&gt;that happened in the branch!&lt;/strong&gt;. That means we diff r5 and r6, and apply that to the main trunk:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://betterexplained.com/wp-content/uploads/version_control/merging.png&#34; alt=&#34;version control merge&#34;&gt;&lt;/p&gt;
&lt;p&gt;If we diffed r6 and r7, we would lose the “Bread” feature that was in main. This is a subtle point — imagine “peeling off” the changes from the experimental branch (+Rice) and adding that to main. Main may have had other changes, which is ok — we just want to insert the Rice feature.&lt;/p&gt;
&lt;p&gt;In Subversion, merging is very close to diffing. Inside the main trunk, run the command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;svn merge -r5:6 http://path/to/branch
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This command diffs r5-r6 in the experimental branch and applies it to the current location. Unfortunately, Subversion doesn’t have an easy way to keep track of what merges have been applied, so if you’re not careful you may apply the same changes twice. It’s a planned feature, but the current advice is to keep a changelog message reminding you that you’ve already merged r5-r6 into main.&lt;/p&gt;
&lt;h2 id=&#34;conflicts&#34;&gt;Conflicts&lt;/h2&gt;
&lt;p&gt;Many times, the VCS can automatically merge changes to different parts of a file. &lt;strong&gt;Conflicts&lt;/strong&gt; can arise when changes appear that don’t gel: Joe wants to remove eggs and replace it with cheese (-eggs, +cheese), and Sue wants to replace eggs with a hot dog (-eggs, +hot dog).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://betterexplained.com/wp-content/uploads/version_control/vcs_conflict.png&#34; alt=&#34;version control conflict&#34;&gt;&lt;/p&gt;
&lt;p&gt;At this point it’s a race: if Joe checks in first, that’s the change that goes through (and Sue can’t make her change).&lt;/p&gt;
&lt;p&gt;When changes overlap and contradict like this, the VCS may report a &lt;strong&gt;conflict&lt;/strong&gt; and not let you check in — it’s up to you to check in a newer version that &lt;strong&gt;resolves&lt;/strong&gt; this dilemma. A few approaches:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Re-apply your changes&lt;/strong&gt;. Sync to the the latest version (r4) and re-apply your changes to this file: Add hot dog to the list that already has cheese.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Override their changes with yours&lt;/strong&gt;. Check out the latest version (r4), copy over your version, and check your version in. In effect, this removes cheese and replaces it with hot dog.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Conflicts are infrequent but can be a pain. Usually I update to the latest and re-apply my changes.&lt;/p&gt;
&lt;h2 id=&#34;tagging&#34;&gt;Tagging&lt;/h2&gt;
&lt;p&gt;Who would have thought a version control system would be Web 2.0 compliant? Many systems let you tag (label) any revision for easy reference. This way you can refer to “Release 1.0” instead of a particular build number:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://betterexplained.com/wp-content/uploads/version_control/tagging.png&#34; alt=&#34;version control tag&#34;&gt;&lt;/p&gt;
&lt;p&gt;In Subversion, tags are just branches that you agree not to edit; they are around for posterity, so you can see exactly what your version 1.0 release contained. Hence they end in a stub — there’s nowhere to go.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;o&#34;&gt;(&lt;/span&gt;in trunk&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
svn copy http://path/to/revision http://path/to/tag
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;real-life-example-managing-windows-source-code&#34;&gt;Real-Life Example: Managing Windows Source Code&lt;/h2&gt;
&lt;p&gt;We guessed that Windows was managed out of a shared folder, but it’s not the case. So &lt;a href=&#34;https://blogs.msdn.com/larryosterman/archive/2005/02/01/364840.aspx&#34;&gt;how’s it done&lt;/a&gt;?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There’s a &lt;strong&gt;main line&lt;/strong&gt; with stable builds of Windows.&lt;/li&gt;
&lt;li&gt;Each group (Networking, User Interface, Media Player, etc.) &lt;strong&gt;has its own branch&lt;/strong&gt; to develop new features. These are under development and less stable than main.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You develop new features in your branch and “Reverse Integrate (RI)” to get them into Main. Later, you “Forward Integrate” to bring the latest changes from Main into your branch:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://betterexplained.com/wp-content/uploads/version_control/windows.png&#34; alt=&#34;version control branch example&#34;&gt;&lt;/p&gt;
&lt;p&gt;Let’s say we’re at Media Player 10 and IE 6. The Media Player team makes version 11 in their own branch. When it’s ready and tested, there’s a patch from 10 – 11 which is applied to Main (just like the “Rice” example, but a tad more complicated). This is a &lt;strong&gt;reverse integration&lt;/strong&gt;, from the branch to the trunk. The IE team can do the same thing.&lt;/p&gt;
&lt;p&gt;Later, the Media Player team can pick up the latest code from other teams, like IE. In this case, Media Player &lt;strong&gt;forward integrates&lt;/strong&gt; and gets the latest patches from main into their branch. This is like pulling in the “Bread” feature into the experimental branch, but again, more complicated.&lt;/p&gt;
&lt;p&gt;So it’s RI and FI. Aye aye. This arrangement lets changes percolate throughout the branches, while keeping new code out of the main line. Cool, eh?&lt;/p&gt;
&lt;p&gt;In reality, there’s many layers of branches and sub-branches, along with quality metrics that determine when you get to RI. But you get the idea: branches help manage complexity. Now you know the basics of how one of the largest software projects is organized.&lt;/p&gt;
&lt;h2 id=&#34;key-takeaways&#34;&gt;Key Takeaways&lt;/h2&gt;
&lt;p&gt;My goal was to share high-level thoughts about version control systems. Here are the basics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Use version control.&lt;/strong&gt; Seriously, it’s a good thing, even if you’re not writing an OS. It’s worth it for backups alone.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Take it slow.&lt;/strong&gt; I’m only now looking into branching and merging for my projects. Just get a handle on using version control and go from there. If you’re a small project, branching/merging may not be an issue. Large projects often have experienced maintainers who keep track of the branches and patches.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Keep Learning.&lt;/strong&gt; There’s plenty of guides for &lt;a href=&#34;http://svnbook.red-bean.com/&#34;&gt;SVN&lt;/a&gt;, &lt;a href=&#34;http://wwwasd.web.cern.ch/wwwasd/cvs/tutorial/cvs_tutorial_toc.html&#34;&gt;CVS&lt;/a&gt;, &lt;a href=&#34;http://agave.garden.org/~aaronh/rcs/tutorial.html&#34;&gt;RCS&lt;/a&gt;, &lt;a href=&#34;https://www.kernel.org/pub/software/scm/git/docs/&#34;&gt;Git&lt;/a&gt;, &lt;a href=&#34;http://public.perforce.com/public/tutorial.html&#34;&gt;Perforce&lt;/a&gt; or whatever system you’re using. The important thing is to &lt;strong&gt;know the concepts&lt;/strong&gt; and realize every system has its own lingo and philosophy. Eric Sink has a &lt;a href=&#34;http://www.ericsink.com/scm/source_control.html&#34;&gt;detailed version control guide&lt;/a&gt; also.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are the basics — as time goes on I’ll share specific lessons I’ve learned from &lt;a href=&#34;http://instacalc.com/&#34;&gt;my projects&lt;/a&gt;. Now that you’ve figured out a regular VCS, &lt;a href=&#34;https://betterexplained.com/articles/intro-to-distributed-version-control-illustrated/&#34;&gt;try an illustrated guide to distributed version control&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&amp;mdash;EOF&amp;mdash;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;EOF&lt;/em&gt;是一个计算机术语，为&lt;code&gt;End Of File&lt;/code&gt;的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p&gt;
&lt;p&gt;本人公众号&lt;code&gt;火山灰&lt;/code&gt;，亦可搜&lt;code&gt;time_ash_past&lt;/code&gt;。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>The (too) many pitfalls of VLA in C</title>
      <link>/en/post/%E7%BC%96%E7%A8%8B%E4%B8%96%E7%95%8C/ruan/the-too-many-pitfalls-of-vla-in-c/</link>
      <pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/en/post/%E7%BC%96%E7%A8%8B%E4%B8%96%E7%95%8C/ruan/the-too-many-pitfalls-of-vla-in-c/</guid>
      
        <description>&lt;p&gt;2021-07-05 | Categories: &lt;a href=&#34;https://blog.joren.ga/categories/#programming&#34;&gt;programming&lt;/a&gt; | Tags: &lt;a href=&#34;https://blog.joren.ga/categories/#C&#34;&gt;C&lt;/a&gt; &lt;a href=&#34;https://blog.joren.ga/categories/#advice&#34;&gt;advice&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It generates much more code, and much &lt;em&gt;slower&lt;/em&gt; code (and more fragile code), than just using a fixed key size would have done.&lt;/p&gt;
&lt;p&gt;~ &lt;a href=&#34;https://lkml.org/lkml/2018/3/7/621&#34;&gt;Linus Torvalds&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;VLA&lt;/em&gt; is an acronym of &lt;strong&gt;variable-length array&lt;/strong&gt;, which is an &lt;strong&gt;array&lt;/strong&gt; (actual array, not just block of memory which can act like one) that have size (at least one dimension) determined during runtime (instead of at compile time).&lt;/p&gt;
&lt;p&gt;Languages supporting VLAs in one form or another include: Ada, Algol 68, APL, C, C#, COBOL, Fortran, J and Object Pascal. As you may notice, beside C and C#, those aren&amp;rsquo;t languages one would call mainstream nowadays.&lt;/p&gt;
&lt;p&gt;VLAs were introduced with the revision C99 of the C standard. At first glance they seem convenient and efficient, but it&amp;rsquo;s just an illusion. In reality they are just sources of constant issues. Truly a stain on otherwise really good revision.&lt;/p&gt;
&lt;p&gt;As you could have guessed by the quote at the beginning, project which used to rely on VLA quite extensively is nothing else than Linux kernel. Maintainers spent a lot of effort to get rid of all VLA and as of version 4.20 (year 2018) it&amp;rsquo;s completely VLA-free.&lt;/p&gt;
&lt;h2 id=&#34;allocation-on-stack&#34;&gt;Allocation on stack&lt;/h2&gt;
&lt;p&gt;VLAs are usually allocated on stack and this is the source of the most of the problems. Let&amp;rsquo;s consider a painfully simple, very favourable to VLA, example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;9
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;#include &amp;lt;stdio.h&amp;gt;

int main(void) {
    int n;
    scanf(&amp;#34;%d&amp;#34;, &amp;amp;n);
    long double arr[n];
    printf(&amp;#34;%Lf&amp;#34;, arr[0]);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;As we can see, it takes a number from user then makes array of that size. Compile and try it. Check how big values you can input before getting segfault caused by stack overflow. In my case, it was around half a million. With primitive type! Imagine what would be the limit for structure! Or what if it wasn&amp;rsquo;t just &lt;code&gt;main()&lt;/code&gt;? Maybe a recursive function? The limit shrinks tremendously.&lt;/p&gt;
&lt;p&gt;And you don&amp;rsquo;t have any (portable, standard) way to react after a stack overflow - the program already crashed, you lost control. So you either need to make elaborate checks before declaring an array or betting that user won&amp;rsquo;t input too large values (I think we can already guess the outcome of such gamble).&lt;/p&gt;
&lt;p&gt;So the programmer &lt;strong&gt;must&lt;/strong&gt; ensure that VLA size doesn&amp;rsquo;t exceed some safe maximum, but in reality, if you know safe maximum, there is rarely any reason for not using it always.&lt;/p&gt;
&lt;h3 id=&#34;worst-of-it-is&#34;&gt;Worst of it is…&lt;/h3&gt;
&lt;p&gt;… that segfault is actually one of the best outcomes of improperly handled VLA. The worst case is an exploitable vulnerability, where attacker may choose a value that causes an array to overlap with other allocations, giving them control over those values as well. A security nightmare.&lt;/p&gt;
&lt;p&gt;At the cost of further drop of efficiency, in GCC you can enable &lt;code&gt;-fstack-clash-protection&lt;/code&gt; option. It adds &lt;em&gt;extra&lt;/em&gt; instructions around variable length stack memory allocations to probe each page of memory at allocation time. This mitigates stack-clash attacks by ensuring all stack memory allocations are valid or by throwing a segfault if they are not, thus turning a possible code-execution attack into a denial of service.&lt;/p&gt;
&lt;h3 id=&#34;so-how-to-fix-this-example&#34;&gt;So how to fix this example?&lt;/h3&gt;
&lt;p&gt;What if I need to let user define size and creating ridiculously large fixed array would be too wasteful? It&amp;rsquo;s simple - use &lt;code&gt;malloc()&lt;/code&gt;!&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;

int main(void) {
    int n;
    scanf(&amp;#34;%d&amp;#34;, &amp;amp;n);
    long double* arr = malloc(n * sizeof(*arr));
    printf(&amp;#34;%Lf&amp;#34;, arr[0]);
    free(arr);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;In this case I was able to input over 1.3 &lt;strong&gt;billion&lt;/strong&gt; on my machine before segfault. Almost 2500 times larger size! But I still got the segfault, right? Well, the difference is in possibility of checking the value returned by &lt;code&gt;malloc()&lt;/code&gt; and thus being able to, for example, inform the user about the error:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;    long double* arr = malloc(n * sizeof(*arr));
    if (arr == NULL) {
        perror(&amp;#34;malloc()&amp;#34;); // output: &amp;#34;malloc(): Cannot allocate memory&amp;#34;
    }
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;I&amp;rsquo;ve encountered a counterargument, that as C is often used as a systems/embedded language, there are situations where using &lt;code&gt;malloc()&lt;/code&gt; may not even be possible.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sigh&lt;/strong&gt; I&amp;rsquo;m basically going to repeat myself here, but it is really important.&lt;/p&gt;
&lt;p&gt;On such device you&amp;rsquo;re not going to have a lot of stack either. So instead of dynamically allocating on stack, you should determine how much you need and just always use that fixed amount.&lt;/p&gt;
&lt;p&gt;When using VLA on system with small amounts of stack, it&amp;rsquo;s really easy to make something which seems to work, but which blows your stack if your function gets called from a deep call stack combined with the large amount of data.&lt;/p&gt;
&lt;p&gt;If you always allocate fixed amounts of stack space everywhere, and you test it, you know you&amp;rsquo;re good. If you dynamically allocate on stack, you have to test all your code paths with all the largest sizes of allocated space, which is much harder and much easier to make a mistake. Don&amp;rsquo;t make it even easier to shoot yourself in the foot for no real advantage.&lt;/p&gt;
&lt;h2 id=&#34;creation-by-accident&#34;&gt;Creation by accident&lt;/h2&gt;
&lt;p&gt;Unlike most other dangerous C functionality, VLA doesn&amp;rsquo;t have the barrier of being not known. Many newbies learn to use them via trial and error, but don&amp;rsquo;t learn about the pitfalls. Sometimes even an experiences programmer will make an mistake and create an VLA when not intended. The following will silently create a VLA when it&amp;rsquo;s clearly not necessary:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;const int n = 10;
int A[n];
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Thankfully, any half-decent compiler would notice and optimize VLA away, but… what if it doesn&amp;rsquo;t notice? Or what if for some reason (safety?) the optimizations were not turned on? But it surely isn&amp;rsquo;t so much worse, right? Well…&lt;/p&gt;
&lt;h2 id=&#34;slower-than-fixed-size&#34;&gt;Slower than fixed size&lt;/h2&gt;
&lt;p&gt;Without compiler optimizations a function with &lt;a href=&#34;https://godbolt.org/z/c7nPvGGcP&#34;&gt;VLA from previous example&lt;/a&gt; will result in &lt;strong&gt;7 times&lt;/strong&gt; more Assembly instructions than its &lt;a href=&#34;https://godbolt.org/z/jx94vx84T&#34;&gt;fixed size counterpart&lt;/a&gt; before moving past the array definition (look at the body before &lt;code&gt;jmp .L5&lt;/code&gt;). But it&amp;rsquo;s without optimizations - with them the produced Assembly is exactly the same.&lt;/p&gt;
&lt;p&gt;So &lt;a href=&#34;https://godbolt.org/z/vnf174eej&#34;&gt;an example where VLA isn&amp;rsquo;t by mistake&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;#include &amp;lt;stdio.h&amp;gt;
void bar(int*, int);

#if 1 // 1 for VLA, 0 for VLA-free

void foo(int n) {
    int A[n];
    for (int i = n; i--;) {
        scanf(&amp;#34;%d&amp;#34;, &amp;amp;A[i]);
    }
    bar(A, n);
}

#else

void foo(int n) {
    int A[1000];  // Let&amp;#39;s make it bigger than 10! (or there won&amp;#39;t be what to examine)
    for (int i = n; i--;) {
        scanf(&amp;#34;%d&amp;#34;, &amp;amp;A[i]);
    }
    bar(A, n);
}

#endif

int main(void) {
    foo(10);
    return 0;
}

void bar(int* B, int n) {
    for (int i = n; i--;) {
        printf(&amp;#34;%d %d&amp;#34;, i, B[i]);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;For our educational purposes in this example, &lt;code&gt;-O1&lt;/code&gt; level of optimisation will work best (as Assembly will be more clear and &lt;code&gt;-O2&lt;/code&gt; won&amp;rsquo;t help VLA&amp;rsquo;s case here really much).&lt;/p&gt;
&lt;p&gt;When we compile VLA version, before instructions corresponding to &lt;code&gt;for&lt;/code&gt; loop, we get:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;push    rbp
mov     rbp, rsp
push    r14
push    r13
push    r12
push    rbx
mov     r13d, edi
movsx   r12, edi       ; here VLA &amp;#34;starts&amp;#34;...
sal     r12, 2         ;
lea     rax, [r12+15]  ;
and     rax, -16       ;
sub     rsp, rax       ;
mov     r14, rsp       ; ... and there &amp;#34;ends&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;VLA-free version on the other hand generates:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;push    r12
push    rbp
push    rbx
sub     rsp, 4000      ; this is caused by array definition
mov     r12d, edi
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;So not only fixed array spawns less code, but also way simpler code. Why, VLA even causes more overhead at the beginning of the function. It&amp;rsquo;s not so much more in the grand scheme of things, but it still isn&amp;rsquo;t just a pointer bump.&lt;/p&gt;
&lt;p&gt;But are those differences significant enough to care? &lt;a href=&#34;https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=02361bc77888&#34;&gt;Yes, they are&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;no-initialization&#34;&gt;No initialization&lt;/h2&gt;
&lt;p&gt;To add more to the issue with inadvertent VLA, the following isn&amp;rsquo;t allowed:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;int n = 10;
int A[n] = { 0 };
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Even with optimizations, initialisation isn&amp;rsquo;t allowed for VLAs. So despite wanting fixed size array and compiler being technically able to provide one, it&amp;rsquo;s won&amp;rsquo;t work.&lt;/p&gt;
&lt;h2 id=&#34;mess-for-compiler-writers&#34;&gt;Mess for compiler writers&lt;/h2&gt;
&lt;p&gt;Few months ago I saved a &lt;a href=&#34;https://www.reddit.com/r/C_Programming/comments/jz2213/are_vlas_bad_even_if_theyre_not_allocated_on_the/gdc3hz6&#34;&gt;comment&lt;/a&gt; on Reddit listing problems encountered with VLA from compiler writer perspective. I will cite it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;A VLA applies to a type, not an actual array. So you can create a &lt;code&gt;typedef&lt;/code&gt; of a VLA type, which &amp;ldquo;freezes&amp;rdquo; the value of the expression used, even if elements of that expression change at the time the VLA type is applied&lt;/li&gt;
&lt;li&gt;VLAs can occur inside blocks, and inside loops. This means allocating and deallocating variable-sized data on the stack, and either screwing up all the offsets, or needing to do things indirectly via pointers.&lt;/li&gt;
&lt;li&gt;You can use &lt;code&gt;goto&lt;/code&gt; into and out of blocks with active VLAs, with some things restricted and some not, but the compiler needs to keep track of the mess.&lt;/li&gt;
&lt;li&gt;VLAs can be used with multi-dimensional arrays.&lt;/li&gt;
&lt;li&gt;VLAs can be used as pointer targets (so no allocation is done, but it still needs to keep track of the variable size).&lt;/li&gt;
&lt;li&gt;Some compilers allow VLAs inside structure definitions (I really have no idea how that works, or at what point the VLA size is frozen, so that all instances have the same VLA(s) sizes.)&lt;/li&gt;
&lt;li&gt;A function can have dozens of VLAs active at any one time, with some being created or destroyed at different times, or conditionally, or in loops.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sizeof&lt;/code&gt; needs to be specially implemented for VLAs, and all the necessary info (for actual VLAs, VLA-types, and hybrid VLA/fixed-size types and arrays and pointed-to VLAs).&lt;/li&gt;
&lt;li&gt;&amp;lsquo;VLA&amp;rsquo; is also the term used for multi-dimensional array parameters, where the dimensions are passed by other parameters.&lt;/li&gt;
&lt;li&gt;On Windows, with some compilers (GCC at least), declaring local arrays which make the stack frame size over 4 KiB, mean calling a special allocator (&lt;code&gt;__chkstk()&lt;/code&gt;), as the stack can only grow a page at a time. When a VLA is declared, since the compiler doesn&amp;rsquo;t know the size, it needs to call &lt;code&gt;__chkstk&lt;/code&gt; for every such function, even if the size turns out to be small.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;And believe me, if you take a stroll around some C forums you will see even more different complaints.&lt;/p&gt;
&lt;h2 id=&#34;reduced-portability&#34;&gt;Reduced portability&lt;/h2&gt;
&lt;p&gt;Due to all previously presented problems, some compiler providers decided to not fully support C99. The primary example is Microsoft with its MSVC. The C Standard&amp;rsquo;s Committee also noticed the problem and with C11 revision VLAs were made optional (many would prefer &lt;em&gt;deprecated&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;That means code using a VLA won&amp;rsquo;t necessarily be compiled by a C11 compiler, so you need to check whether it is supported with &lt;code&gt;__STDC_NO_VLA__&lt;/code&gt; macro and make version without VLA as fallback. Wait… if you need to implement VLA-free version either way then what&amp;rsquo;s the point of doubling the code and creating VLA in the first place?!&lt;/p&gt;
&lt;p&gt;As a side note - C++ doesn&amp;rsquo;t have VLA and nothing suggests it ever will. Not a dealbreaker, but still point against VLA in C.&lt;/p&gt;
&lt;h2 id=&#34;nitpick-breaking-conventions&#34;&gt;(nitpick) Breaking conventions&lt;/h2&gt;
&lt;p&gt;This one is more of a nitpick, but still another reason to dislike VLA. There is a widely used convention of first passing object then its parameters, what in terms of arrays means:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;void foo(int** arr, int n, int m) { /* arr[i][j] = ... */ }
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;C99 specified that array sizes need to be parsed immediately when encountered within a function definition&amp;rsquo;s parameter list, what means that when using VLA you cannot do an equivalent of the above:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;void foo(int arr[n][m], int n, int m) { /* arr[i][j] = ... */ } // INVALID!
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;You either need to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;break up with the convention:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;void foo(int n, int m, int arr[n][m]) { /* arr[i][j] = ... */ }
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;or make use of the obsolescent syntax:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;8
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;void foo(int[*][*], int, int);
void foo(arr, n, n)
    int n;
    int m;
    int arr[n][m]
{
    // arr[i][j] = ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;-kinda-useful-in-one-case&#34;&gt;… kinda useful in one case&lt;/h2&gt;
&lt;p&gt;There is one use case where VLA could come in handy: dynamically allocating multi-dimensional arrays where the inner dimensions are not known until runtime. It isn&amp;rsquo;t even so unsafe as there&amp;rsquo;s no arbitrary stack allocation.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;int (* A)[m] = malloc(n * sizeof(*A)); // `n` and `m` are variables with dimensions
if (A) {
    // A[i][j] = ...;
    free(A);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;The VLA-free alternatives are either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;piecemeal allocation with &lt;code&gt;malloc()&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;int** A = malloc(n * sizeof(*A));
if (A) {
    for (int i = 0; i &amp;lt; m; ++i) {
        A[i] = malloc(m * sizeof(*A[i]));
    }
    // A[i][j] = ...
    for (int i = 0; i &amp;lt; m; ++i) {
        free(A[i]);
    }
    free(A);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1D array with offsets&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;int* A = malloc(n * m * sizeof(*A));
if (A) {
    // A[i*n + j] = ...
    free(A);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;big fixed array&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;int A[SAFE_SIZE][SAFE_SIZE]; // SAFE_SIZE must be safe for SAFE_SIZE*SAFE_SIZE
// A[i][j] = ...;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In short, &lt;strong&gt;avoid VLA&lt;/strong&gt;. It poses dangers without giving anything really useful in return (beside in one situation). If you really need to use one, remember about its limitations.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s probably also worth mentioning that VLAs were supposed to be a solution to even more problematic (non-standard) &lt;code&gt;alloca()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;And for the very end, an example of vla lacking all those problems: &lt;a href=&#34;https://en.wikipedia.org/wiki/Vla&#34;&gt;&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/b/bb/Chocoladevla.jpg&#34; alt=&#34;Chocolate vla&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;mdash;EOF&amp;mdash;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;EOF&lt;/em&gt;是一个计算机术语，为&lt;code&gt;End Of File&lt;/code&gt;的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p&gt;
&lt;p&gt;本人公众号&lt;code&gt;火山灰&lt;/code&gt;，亦可搜&lt;code&gt;time_ash_past&lt;/code&gt;。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>AUTHOR’S POSTSCRIPT FOR THE AMERICAN EDITION</title>
      <link>/en/post/%E8%BD%AC%E8%BD%BD%E7%BF%BB%E8%AF%91/%E5%88%98%E6%85%88%E6%AC%A3%E4%B8%89%E4%BD%93%E5%BA%8F/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/en/post/%E8%BD%AC%E8%BD%BD%E7%BF%BB%E8%AF%91/%E5%88%98%E6%85%88%E6%AC%A3%E4%B8%89%E4%BD%93%E5%BA%8F/</guid>
      
        <description>&lt;p&gt;A night from my childhood remains crisply etched in my memory: I was standing by a pond before a village somewhere in Luoshan County, Henan Province, where generations of my ancestors had lived. Next to me stood many other people, both adults and children. Together, we gazed up at the clear night sky, where a tiny star slowly glided across the darkfirmament.&lt;/p&gt;
&lt;p&gt;It was the first artificial satellite China had ever launched: Dongfanghong I (“The East is Red I”). The date was April 25, 1970, and I was seven.&lt;/p&gt;
&lt;p&gt;It had been thirteen years since Sputnik had been launched into space, and nine years since the first cosmonaut had left the Earth. Just a week earlier, Apollo 13 had safely returned from a perilous journey to the moon.&lt;/p&gt;
&lt;p&gt;But I didn’t know any of that. As I gazed at that tiny, gliding star, my heart was filled with indescribable curiosity and yearning. And etched in my memory just as deeply as these feelings was the sensation of hunger. At that time, the region around my village was extremely poor. Hunger was the constant companion of every child. I was relatively fortunate because I had shoes on my feet. Most of the friends standing by my side were barefoot, and some of the tiny feet still had unhealed frostbite from the previous winter. Behind me, faint light from kerosene lamps shone out of cracks in the walls of dilapidated thatched huts—the village wasn’t wired for electricityuntil the eighties.&lt;/p&gt;
&lt;p&gt;The adults standing nearby said that the satellite wasn’t like an airplane because it flew outside of the Earth. Back then the dust and smoke of industry hadn’t yet polluted the air, and the starry sky was especially clear, with the Milky Way clearly visible. In my mind, the stars that filled the heavens weren’t much farther away than the tiny, gliding satellite, and so I thought it was flying among them. I even worried that it might collide with one as it passed through the dense stellar clusters.&lt;/p&gt;
&lt;p&gt;My parents weren’t with mebecause they were working at a coal mine more than a thousand kilometers away, in Shanxi Province. A few years earlier, when I had been even younger, the mine had been a combat zone for the factional civil wars of the Cultural Revolution. I remembered gunshots in the middle of the night, trucks passing in the street, filled with men clutching guns and wearing red armbands.… But I had been too young back then, and I can’t be sure whether these images are real memories, or mirages constructed later. However, I know one thing for certain: Because the mine was too unsafe and my parents had been impacted by the Cultural Revolution, they had had no choice but to send me to my ancestral home village in Henan. By the time I saw Dongfanghong I, I had already lived there for more than three years.&lt;/p&gt;
&lt;p&gt;A few more years passed before I understood the distance between that satellite and the stars. Back then I was reading a popular set of basic science books called A Hundred Thousand Whys. From the astronomy volume, I learned the concept of a light-year. Before then, I had already known that light could traverse a distance equal to seven and a half trips around the Earth in a single second, but I had not contemplated what kind of terrifying distance could be crossed by flying at such a speed for a whole year. I imagined a ray of light passing through the cold silence of space at the speed of 300,000 kilometers per second. I struggled to grasp the bone-chilling vastness and profundity with my imagination, felt the weight of an immense terror and awe, and simultaneously enjoyed a druglike euphoria.&lt;/p&gt;
&lt;p&gt;From that moment, I realized that I had a special talent: Scales and existences that far exceeded the bounds of human sensory perception—both macro and micro—and that seemed to be only abstract numbers to others, could take on concrete forms in my mind. I could touch them and feel them, much like others could touch and feel trees and rocks. Even today, when references to the 15-billion-light-year radius of the universe and “strings” many orders of magnitude smaller than quarks have numbed most people, theconcepts of a light-year or a nanometer can still produce lively, grand pictures in my mind and arouse in me an ineffable, religious feeling of awe and shock. Compared to most of the population who do not experience such sensations, I don’t know if I’m lucky or unlucky. But it is certain that such feelings made me first into a science fiction fan, and later a science fiction author.&lt;/p&gt;
&lt;p&gt;In that same year when I was first awed by the concept of a light-year, a flood (known as the Great Flood of August ’75) occurred near my home village. In a single day, arecord-breaking 100.5 centimeters of rain fell in the Zhumadian region of Henan. Fifty-eight dams of various sizes collapsed, one after another, and 240,000 people died in the resulting deluge. Shortly after the floodwaters had receded, I returned to the village and saw a landscape filled with refugees. I thought I was looking at the end of the world.&lt;/p&gt;
&lt;p&gt;And so, satellite, hunger, stars, kerosene lamps, the Milky Way, the Cultural Revolution’s factional civil wars, a light-year, the flood … these seemingly unconnected things melded together and formed the early part of my life, and also molded the science fiction I write today.&lt;/p&gt;
&lt;p&gt;As a science fiction writer who began as a fan, I do not use my fiction as a disguised way to criticize the reality of the present. I feel that the greatest appeal of science fiction is the creation of numerous imaginary worlds outside of reality. I’ve always felt that the greatest and most beautiful stories in the history of humanity were not sung by wandering bards or written by playwrights and novelists, but told by science. The stories of scienceare far more magnificent, grand, involved, profound, thrilling, strange, terrifying, mysterious, and even emotional, compared to the stories told by literature. Only, these wonderful stories are locked in cold equations that most do not know how to read.&lt;/p&gt;
&lt;p&gt;The creation myths of the various peoples and religions of the world pale when compared to the glory of the big bang. The three-billion-year history of life’s evolution from self-reproducing molecules to civilization contains twists and romances that cannot be matched by any myth or epic.&lt;/p&gt;
&lt;p&gt;There is also the poetic vision of space and time in relativity, the weird subatomic world of quantum mechanics … these wondrous stories of science all possess an irresistible attraction. Through the medium of science fiction, I seek only to create my own worlds using the power of imagination, and to make known the poetry of Nature in those worlds, to tell the romantic legends that have unfolded between Man and Universe.&lt;/p&gt;
&lt;p&gt;But I cannot escape and leave behind reality, just like I cannot leave behind my shadow. Realitybrands each of us with its indelible mark. Every era puts invisible shackles on those who have lived through it, and I can only dance in my chains. In science fiction, humanity is often described as a collective. In this book, a man named “humanity” confronts a disaster, and everything he demonstrates in the face of existence and annihilation undoubtedly has sources in the reality that I experienced. The wonder of science fiction is that it can, when given certain hypothetical world settings, turn what in our reality is evil and dark into what is righteous and bright, and vice versa. This book and its two sequels try to do just that, but no matter how reality is twisted by imagination, it ultimately remains there.&lt;/p&gt;
&lt;p&gt;I’ve always felt that extraterrestrial intelligence will be the greatest source of uncertainty for humanity’s future. Other great shifts, such as climate change and ecological disasters, have a certain progression and built-in adjustment periods, but contact between humankind and aliens can occur at any time. Perhaps in ten thousand years, the starry skythat humankind gazes upon will remain empty and silent, but perhaps tomorrow we’ll wake up and find an alien spaceship the size of the moon parked in orbit. The appearance of extraterrestrial intelligence will force humanity to confront an Other. Before then, humanity as a whole will never have had an external counterpart. The appearance of this Other, or mere knowledge of its existence, will impact our civilization in unpredictable ways.&lt;/p&gt;
&lt;p&gt;There’s a strange contradiction revealed by the naïveté and kindness demonstrated by humanity when faced with the universe: On Earth, humankind can step onto another continent, and without a thought, destroy the kindred civilizations found there through warfare and disease. But when they gaze up at the stars, they turn sentimental and believe that if extraterrestrial intelligences exist, they must be civilizations bound by universal, noble, moral constraints, as if cherishing and loving different forms of life are parts of a self-evident universal code of conduct.&lt;/p&gt;
&lt;p&gt;I think it should be precisely the opposite: Let’s turn the kindnesswe show toward the stars to members of the human race on Earth and build up the trust and understanding between the different peoples and civilizations that make up humanity. But for the universe outside the solar system, we should be ever vigilant, and be ready to attribute the worst of intentions to any Others that might exist in space. For a fragile civilization like ours, this is without a doubt the most responsible path.&lt;/p&gt;
&lt;p&gt;As a fan of science fiction, it has molded my life, and aconsiderable part of the science fiction I’ve read comes from America. The fact that American readers can now enjoy my book makes me both pleased and excited. Science fiction is a literature that belongs to all humankind. It portrays events of interest to all of humanity, and thus science fiction should be the literary genre most accessible to readers of different nations. Science fiction often describes a day when humanity will form a harmonious whole, and I believe the arrival of such a day need not wait for the appearance ofextraterrestrials.&lt;/p&gt;
&lt;p&gt;&amp;mdash;EOF&amp;mdash;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>The Psychology of Cross Country</title>
      <link>/en/post/%E8%BD%AC%E8%BD%BD%E7%BF%BB%E8%AF%91/the-psychology-of-cross-countrys/</link>
      <pubDate>Tue, 31 Jan 1995 00:00:00 +0000</pubDate>
      
      <guid>/en/post/%E8%BD%AC%E8%BD%BD%E7%BF%BB%E8%AF%91/the-psychology-of-cross-countrys/</guid>
      
        <description>&lt;p&gt;Buxton, W. (1995). The psychology of cross country, &lt;em&gt;The Eventer,&lt;/em&gt; Summer Issue, 16-18.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;the-psychology-of-cross-country&#34;&gt;&lt;strong&gt;The Psychology of Cross Country&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Bill Buxton&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;introduction&#34;&gt;Introduction&lt;/h4&gt;
&lt;p&gt;When we hear about the psychology of sport, what generally comes to mind has to do with the mental preparation before a competition. For example, we have all seen books or articles that give techniques on how to &amp;ldquo;think positive,&amp;rdquo; or how to handle nerves, stress or the excitement that might otherwise have a negative impact on our performance.&lt;/p&gt;
&lt;p&gt;What is less known is that there is another area of psychology that can be applied to riding as well. It is known as cognitive psychology. This is the area of psychology concerned with how we think, learn, and solve problems. Understanding some of its basics can provide insights to many of the problems that we encounter in competition. Significantly, we can make use of these insights in adjusting our training regimen so as to avoid those problems in the future.&lt;/p&gt;
&lt;p&gt;This article grew out of trying to understand my own riding mistakes (of which there are many). In my non-equestrian life, I am a scientist who studies the problems that people have in learning how to use technologies such as computers, fax machines and photocopiers. My belief is that much of what I observe in my science applies equally to riding.&lt;/p&gt;
&lt;p&gt;At this stage, one might ask, &amp;ldquo;How does the process of learning to ride relate to learning a word processor?&amp;rdquo; At first glance, there is little similarity. But on reflection, what they have in common is that both have to do with the acquisition of a new skill.&lt;/p&gt;
&lt;h4 id=&#34;skill-and-problem-solving&#34;&gt;Skill and Problem Solving&lt;/h4&gt;
&lt;p&gt;Riding is a skill. Learning to ride is skill acquisition. But why use such fancy terminology when &amp;ldquo;learning to ride&amp;rdquo; seems to do just fine? After all, it is far more down to earth. My main reason is to get a bit of distance from riding per se so that we can concentrate on the learning part.&lt;/p&gt;
&lt;p&gt;Generally, if someone tells me they want something, I assume that they know what it is. If you want a bridle, you can probably describe it to me quite clearly. But if you want a skill, can you describe what that means to the same level of detail? Yet isn&amp;rsquo;t that skill at least as important as the bridle? To find out what you do know about skill, let me give you a simple test:&lt;/p&gt;
&lt;p&gt;Before reading on, think for a moment, and tell me what is the opposite of skill?&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll even give you a hint: I&amp;rsquo;m not looking for &amp;ldquo;unskilled.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;The intended answer is, &amp;ldquo;problem solving.&amp;rdquo; Now if that was your response, then you probably don&amp;rsquo;t need to read this article. On the other hand, if this seems like a strange reply, then stick around - what follows may be of use to you.&lt;/p&gt;
&lt;h4 id=&#34;automatic-and-attentive-behaviour&#34;&gt;Automatic and Attentive Behaviour&lt;/h4&gt;
&lt;p&gt;The most important characteristic of any skilled performance, be it equestrian, musical or mathematical, is that it is automatic. That is to say, the person performing the task has done it so many times before that they literally don&amp;rsquo;t have to concentrate on it while doing it. As we shall see even more later, the most important consequence of this is that the mind is therefore freed to concentrate on other things (for example, rather than thinking &amp;ldquo;are my heels down, eyes up, &amp;hellip;?&amp;rdquo; the mind is free to think about, &amp;ldquo;where is the best line to the next jump?&amp;quot;).&lt;/p&gt;
&lt;p&gt;A good way to test if someone is really skilled at a task is to see if they can do something else at the same time. A favorite example some of riding instructors is to have a student recite something difficult (such as multiplication tables or spelling their name backwards) while going over a jump. This is an excellent test. If the student is skilled at jumping, the mind will be free to focus on the recitation. If not, the two tasks will interfere with one another, and either or both will suffer.&lt;/p&gt;
&lt;p&gt;Performing a task in which we are unskilled requires attentive behaviour. We have to think of all of the little steps that it takes to get through the task. Remember when you were unskilled at rising trot? It took all of your concentration to stay balanced and on the horse. It wasn&amp;rsquo;t until this became automatic that your mind was sufficiently freed up to enable you to begin to pay attention to what diagonal you were on. And now, you don&amp;rsquo;t even have to think of your diagonal. It too is automatic. It&amp;rsquo;s your rhythm and pace that you&amp;rsquo;re concentrating on. As skill develops, what previously required attention (and problem solving) now becomes automatic. Thus, the mind is freed so that it can attend to a new set of problems (which themselves will become automatic with practice).&lt;/p&gt;
&lt;h4 id=&#34;the-power-law-of-practice&#34;&gt;The Power Law of Practice&lt;/h4&gt;
&lt;p&gt;For me, I think that the most frustrating thing about acquiring a new skill, such as riding, is that I know intellectually what I am supposed to do. I read all the books, magazines and watch the top riders. But when I get on a horse, I just can&amp;rsquo;t put it all together.&lt;/p&gt;
&lt;p&gt;This is just a round about way of saying that acquiring any skill is hard. And if there is anything that we know about leaning a new skill, it is that the only way to develop it and keep it is to practice: do it over and over and over again, then do it some more. Recognizing this leads us to one of the keys to a good instructor: someone who can have you do something over an over again while keeping it fresh, interesting and challenging (for you and your horse - who is also acquiring new skills).&lt;/p&gt;
&lt;p&gt;Now when I say over and over again, just how many &amp;ldquo;overs&amp;rdquo; do I mean? Well, this is expressed in something called the power law of practice. Simply stated, this says that if it takes 2 hours to get one step, it will take 4 hours to get two steps, 8 hours to get three steps, 16 hours to get 4 steps, etc. Of course this is a generalization. The message to take away is that those riders on the Olympic team have put in an unbelievable number of hours, and at that level, every incremental improvement in technique comes at the cost of a large number of hours of practice.&lt;/p&gt;
&lt;h4 id=&#34;task-interference-and-its-avoidance&#34;&gt;Task Interference, and its Avoidance&lt;/h4&gt;
&lt;p&gt;&amp;ldquo;Interference&amp;rdquo; is the term that I used earlier to describe the cause of any degradation in performance that results from an attempt to perform one task at the same time as another. Interference results when different tasks compete for the same limited resources, or attention, of the brain. Remember, if I&amp;rsquo;m unskilled at a task, its performance demands attentive problem solving. Consequently, there is likely not enough processing power left to simultaneously perform the additional problem solving required by some other task in which I am also unskilled.&lt;/p&gt;
&lt;p&gt;Now let us see how this affects us in an equestrian activity, such as riding a jump on a cross country course. In this case, one could argue that we need to perform at least three different tasks:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Basic equitation: Simply put, we need to stay on our horse in a balanced position, while galloping over uneven and unfamiliar terrain.&lt;/li&gt;
&lt;li&gt;Answer the question demanded each specific jump: In a well designed course, each jump is designed to ask a specific question of the rider - a question whose difficulty is determined by the level of competition.&lt;/li&gt;
&lt;li&gt;Navigate the course: We need to remember the course and the specific line which we plan to follow, and all of us have made mistakes in this department.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The potential for task interference here is immense. If I am preoccupied with staying on my horse, I won&amp;rsquo;t be prepared to deal with the specific problem of the next jump when I get there. And if I&amp;rsquo;m not thinking about where I go next while going over the jump (because I&amp;rsquo;m preoccupied with riding the jump itself), I will be well beyond it before I get my mind back to riding my planned course. And because I consequently found myself off of my planned course after the jump, the problem of adjusting my plan is introduced, which takes my mind off of basic equitation, which means I get to the next jump off balance. And the cycle continues - hopefully without a fall.&lt;/p&gt;
&lt;p&gt;After our run we inevitably ask ourselves, &amp;ldquo;What went wrong? How did that happen? I walked the course. I can handle any of the jumps on their own. And I certainly can canter over that terrain!&amp;rdquo; Of course, all of that may well be true. But what we seem slow to appreciate is that, psychologically, doing all three together is a very different thing than doing each in isolation. The situation is similar to one that many would-be musicians have encountered: they can sing the lyrics and they can play the accompaniment on guitar, but they can&amp;rsquo;t do the two together. In both cases, the problem is classic task interference.&lt;/p&gt;
&lt;h4 id=&#34;practice-preparation-and-speed&#34;&gt;Practice, Preparation and Speed&lt;/h4&gt;
&lt;p&gt;&amp;ldquo;Putting it all together,&amp;rdquo; from the psychological perspective means being sufficiently skilled in each of the tasks that there are sufficient cognitive resources to deal with each without interference. Now there are at least three strategies that can be applied to bring us to this state:&lt;/p&gt;
&lt;p&gt;\1. &lt;em&gt;Practice:&lt;/em&gt; This is the obvious strategy. As we have discussed earlier, practice is the key to skill acquisition, and with skill comes the transition from attentive, demanding problem solving to automatic task performance.&lt;/p&gt;
&lt;p&gt;\2. &lt;em&gt;Preparation:&lt;/em&gt; No matter how skilled we are, the unexpected will inevitably occur. Due to heavy rain, you may find yourself on footing unlike anything you or your horse have ever encountered. You may get a run-out in the middle of a combination where you never expected it. In these, and many similar situations, you are (often suddenly) confronted with an &amp;ldquo;extra&amp;rdquo; problem. The psychological danger here is that this &amp;ldquo;unexpected&amp;rdquo; problem may make extra cognitive demands which interfere with the performance of other ongoing tasks, and have the knock-on effect of causing additional problems.&lt;/p&gt;
&lt;p&gt;The key to minimizing interference in these kinds of circumstances lies in appreciating the difference between unexpected and unplanned! Just because the footing or a runnout is unexpected does not mean that we should not have planned for the eventuality. Despite having a cozy indoor arena, periodically we should school dressage, cross country and stadium outside in the most miserable weather. That way, we are prepared to deal with cold fingers, slippery reins, poor visibility and slick footing when the weather is unexpectedly bad. The resulting practice means more skill and less interference when (not if) these same conditions are encountered in competition.&lt;/p&gt;
&lt;p&gt;Likewise, when we unexpectedly get a run-out in the middle of a combination or in some other situation, we can minimize the consequences through preparation. Even though we expect to go clear, we should have a &amp;ldquo;Plan B&amp;rdquo; (and &amp;ldquo;C,&amp;rdquo; &amp;ldquo;D,&amp;rdquo; &amp;hellip;) for each fence. Each is a planned response to a possible problem that we can anticipate. Some of these plans can be practiced at home, others not. This planning is one of your main tasks in walking a course. If you&amp;rsquo;ve done your planning well, then when (again, not if) the &amp;ldquo;unexpected&amp;rdquo; happens, you will be ready. You will have fewer problems to solve. Consequently, the interference with other tasks will be reduced and the damage will be contained. You can get on and ride the rest of the course without the knock-on effects that might otherwise occur.&lt;/p&gt;
&lt;p&gt;\3. &lt;em&gt;Speed:&lt;/em&gt; Of all of the things that we can do to improve our performance, perhaps slowing down is the one that gives the most gain for the least pain. All novices have heard variations of this theme before, yet excessive speed is still one of the most common causes for problems that one sees on course. Now notice that I said speed was not the problem, but the cause. What is the underlying psychology?&lt;/p&gt;
&lt;p&gt;In the physical world, we are used to describing the performance of machines in terms of how much they can do in a given unit of time. Hence, we say that a car can go so many miles per hour, a motor run at so many revolutions per minute, or a generator provide so many kilowatts per hour. For our purposes, let us think of the brain in the same way. Let us say that our brain can answer X questions (or solve X problems) a minute. Let us further assume that in riding between two jumps, we need to answer Y questions. If I get to the second jump without answering all Y questions, I am likely going to have a problem. I can avoid this easily. By stretching out the time between the two jumps, I buy myself time. I therefore arrive at the second jump with all Y questions answered, and am far less likely to make an error. (Recalling all of the alternate plans for the upcoming fence are, of course, some of the questions that are required during the approach.)&lt;/p&gt;
&lt;p&gt;Cross country speeds are normally given in metres per second. Of far more value, from the psychological perspective, would be for us to think of it in questions answered per metre. Because of skill, the expert can answer more questions more rapidly, and therefore safely cover the same distance in a shorter time, but having answered at least the same number of questions over the distance! As novices, our goal should be to match the question answering, not the speed, of the expert. This leads not only to more clean rounds, but safer and more enjoyable rounds as well.&lt;/p&gt;
&lt;p&gt;One important caveat: there are obvious limits to what I am saying, otherwise the logical conclusion would be that sitting still, giving yourself all the time in the world to problem solve, would be the sure path to a perfect round. Keep in mind that approaching a fence at the proper pace and making your round within the time limit are two of the key problems that you have to take into account. There are limits to everything!&lt;/p&gt;
&lt;h4 id=&#34;chronological-vs-perceptual-time&#34;&gt;Chronological vs Perceptual Time&lt;/h4&gt;
&lt;p&gt;In the arithmetic of the physical world and chronological time, if I only answered half of the questions demanded of me between two fences, the conclusion might be that in order to answer them all, I should cut my speed in half (that is, double the amount of time between jumps). Here is the good news: perceptual time does not follow the rules of chronological time. One of the most interesting things about it is that it only takes about 10% more time, to more-or-less double the available problem solving time! Of course, the opposite is also true: if you speed up by only 10%, you run the risk cutting the number of questions that you can answer in half. A speed increase of about 10% comes close to doubling the difficulty and likelihood of error. Cutting speed by 10% about doubles your chances of going clear (as long as you also keep in mind my caveat, above). Making the right decision here isn&amp;rsquo;t rocket science: a 10% reduction in speed makes a lot of sense if you are currently having troubles going clear.&lt;/p&gt;
&lt;h4 id=&#34;summary&#34;&gt;Summary&lt;/h4&gt;
&lt;p&gt;We are all problem solving when riding. (If the amount of problem solving is negligible, then we are competing well below our ability and should move up a level or two.) Where we get into trouble is when we become overloaded, and the mental effort of solving one problem makes demands on the mind which cause interference with solving the problems associated with some other task.&lt;/p&gt;
&lt;p&gt;Through practice, we can build up our level of skill in as many areas as possible. In so doing, the performance of those tasks will become automatic. Consequently, they will not interfere with problem solving associated with other tasks.&lt;/p&gt;
&lt;p&gt;Through preparation we can anticipate the unexpected. In so doing, we can have a prepared &amp;ldquo;recipe&amp;rdquo; for each eventuality that might occur at any point on course. By so doing, we eliminate the need to &amp;ldquo;make up&amp;rdquo; the recipe on the fly. By reducing the amount of problem solving demanded by unexpected situations, we reduce the amount of task interference compared to what would otherwise result, and therefore reduce the likelihood of knock-on effects. If something happens, we deal with it according to plan, then get on with the rest of our ride.&lt;/p&gt;
&lt;p&gt;Finally, by controlling our speed, we buy ourselves time to answer all of the questions demanded from obstacle to obstacle on course. By recognizing that psychological time is not linear, we can take advantage of the fact that it only requires about a 10% slow-down to double the problem solving time available.&lt;/p&gt;
&lt;p&gt;Riding is as much a mental as a physical activity. To ride effectively and safely requires an understanding of both of these components. Hopefully this discussion has shed some light on the mental side, and makes it so that the process of solving all of these problems does not interfere with the most important task of them all: enjoying the sport.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Bill Buxton is Head of Research at Alias | Wavefront, a computer graphics company that - among other things - built the tools which were used to create the dinosaurs in the film, Jurassic Park. He is also Chief Scientist for Siicon Graphics Inc., a computer company specializing in computer graphics systems, and a Professor of Computer Science at the University of Toronto. His specialty is the human aspects of technology. He recently began competing at the preliminary level on his 8 year old buckskin clyde/thoroughbred mare, Matinee Performance, and is coached by Ian Roberts and Kelly Plitz of Dreamcrest Equestrian in Port Perry, Ont.&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
