<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>个人随想</title><link>/</link><description>Recent content on 个人随想</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 06 Mar 2021 16:01:23 +0800</lastBuildDate><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>本博客的介绍及一些特性</title><link>/post/%E6%9C%AC%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%B8%80%E4%BA%9B%E7%89%B9%E6%80%A7/</link><pubDate>Sat, 06 Mar 2021 16:01:23 +0800</pubDate><guid>/post/%E6%9C%AC%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%B8%80%E4%BA%9B%E7%89%B9%E6%80%A7/</guid><description>&lt;p>本博客基于&lt;code>Hugo&lt;/code>和&lt;code>GitHub Page&lt;/code>开发部署。&lt;/p>
&lt;p>主要是积累具有一定价值的成体系文章，不想放随意的低价值文档。&lt;/p>
&lt;p>另外博客对这个&lt;code>Hugo Theme&lt;/code>主题的&lt;code>国际化&lt;/code>部分进行了修改，不是提供多语言版本，而是改造为多模块版。&lt;/p>
&lt;p>不过名称还没设置，只能先对应着字母：&lt;/p>
&lt;blockquote>
&lt;p>zh-cn：大多数中文随想文章。&lt;/p>
&lt;p>en：一些我喜欢的英文文章稿件，通常如果有翻译会在放在zh-cn里发表。可以在文章标题下看到对应原文和翻译文的链接。&lt;/p>
&lt;p>fr：这里对应的是法文，我放置和编程相关的文章。&lt;/p>
&lt;p>de：这里原本对应的是德文，我改为 哲学思考。放置马克思主义、毛泽东思想方面的文章。&lt;/p>
&lt;/blockquote>
&lt;p>这样，各自读者喜欢的领域也做了分开。想看编程的选择&lt;code>fr&lt;/code>即可，想看马克思主义类的选择&lt;code>de&lt;/code>即可。&lt;/p></description></item><item><title>About</title><link>/about/</link><pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate><guid>/about/</guid><description>&lt;p>我的个人小站。记录学习和一些感悟。&lt;/p>
&lt;p>希望你会喜欢这里。&lt;/p>
&lt;p>也欢迎到我的公众号跟我互动，可以多给我点点公众号上的广告。😆&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p></description></item><item><title>聊一个算法入门题</title><link>/post/%E8%81%8A%E4%B8%80%E4%B8%AA%E7%AE%97%E6%B3%95%E5%85%A5%E9%97%A8%E9%A2%98/</link><pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate><guid>/post/%E8%81%8A%E4%B8%80%E4%B8%AA%E7%AE%97%E6%B3%95%E5%85%A5%E9%97%A8%E9%A2%98/</guid><description>&lt;h2 id="题目描述">题目描述&lt;/h2>
&lt;p>在一个整数数组中，一个数字减去它左边的数字得到一个差值，求最大差值的数字。&lt;/p>
&lt;p>例如：&lt;/p>
&lt;p>&lt;code>[4,2,7,5,11,13,9,1]&lt;/code>，差值最大为11，是13-2的结果。&lt;/p>
&lt;p>注意：&lt;/p>
&lt;p>&lt;strong>只能用右边的数字减去左边的数字计算差值。&lt;/strong>&lt;/p>
&lt;h2 id="题目解析">题目解析&lt;/h2>
&lt;p>我特别喜欢这道题。因为解决它也不需要太高深的知识，用不到数据结构和高深算法，但是又需要对数据结构和算法有着较好的本质理解。甚至我觉得如果一个没学过的人看到这个题能有正确的解题思路，说明他对编程有着良好的直觉，可以入门学习了。&lt;/p>
&lt;p>下面来一步一步解析。&lt;/p>
&lt;p>如果看到这个问题一头雾水无从下手，不要急，说明你还没懂解算法题的套路。等套路掌握了就很容易了。&lt;/p>
&lt;p>首先，要排除极端情况。如果是面试也一定要问面试者各种极端情况是否需要考虑排除。比如这道题，如果数组只有一个值或者两个值怎么办？&lt;/p>
&lt;p>只有一个值那就返回null。两个值就返回两者差值。如果面试的时候问一下面试官，还是挺可以加分的。&lt;/p>
&lt;p>接下来进入正题。&lt;/p>
&lt;p>因为编程的时候，输入有很多，但是每次我们只能一个一个取。&lt;/p>
&lt;p>所以其实思路就是需要建立游标。如果有学过数据结构就知道里面需要各种游标做标记。&lt;/p>
&lt;p>游标就是用来逐个取值的。&lt;/p>
&lt;p>最初级的想法，我们需要一个变量记录遇到的最大值，一个变量记录遇到的最小值，而且要保证遇到的最大值要在最小值的右边，然后设立一个游标不断移动。然后还需要一个变量储存差值。如果出现更大的差值就取代之。最后输出这个差值即可，甚至还可以输出是哪两个位置的数之差。&lt;/p>
&lt;p>好了，思路在这里了。&lt;/p>
&lt;p>这里可以先转换一下题目，假设题目不要求只能右边减去左边。这个就很简单，两次遍历循环，第一次两两比较找到最大值，第二次两两比较找到最小值。实际上这个类似排序算法，优化方法也与排序算法类似。&lt;/p>
&lt;p>再回到原题，既然要求只能右边减去左边，说明换思路。&lt;/p>
&lt;p>最繁琐的就是两个变量在改变的时候，把它们两个值对应的索引也记录并一直保证较小值的索引在较大值索引的左边。&lt;/p>
&lt;p>上面的方法确实繁琐。有句话说得好，聪明的人是把复杂的事变简单，这个时候仔细想想，其实保证只能右边减去左边，可以有一个最好的办法就是，用2个变量记录最大值和最小值，然后游标逐个移动，碰到的值，如果比最大值大，就更新最大值，比最小值小，就更新最小值，这里注意需要一个顺序问题以避免最大值跑到了最小值的左边。也就是需要首先判断这个值比目前存有的最小值要大之后，再和现存的最大值比较。如果比最大值还大，那么就更新最大值。然后两者再相减。&lt;/p>
&lt;p>这里可以进一步再想想，实际上只需要判断游标碰到的值，如果比目前最大的值还大，那么就更新最大值，然后相减得到的差值和现存的最大差值比较，储存差值更大的那个；如果比目前最小的值还小，那么就把最小值、最大值更新，然后游标继续移动。&lt;/p>
&lt;p>那么解答就可以用python3写出来了：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">object&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">maxDiff&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">listlen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">listlen&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;NaN&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="n">minnum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">maxnum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">maxdiff&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">listlen&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">maxnum&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">maxnum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">maxdiff&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="n">maxnum&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">minnum&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">maxdiff&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">elif&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="n">minnum&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">minnum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">maxnum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">maxdiff&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">maxnum&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">minnum&lt;/span>
&lt;span class="c1"># print(&amp;#39;minnum:&amp;#39;,minnum)&lt;/span>
&lt;span class="c1"># print(&amp;#39;maxnum:&amp;#39;,maxnum)&lt;/span>
&lt;span class="c1"># print(&amp;#39;maxdiff:&amp;#39;,maxdiff)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">maxdiff&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">solution&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">arr1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">arr2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">40&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">solution&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">maxDiff&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10000&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">solution&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">maxDiff&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">elapsed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">10000&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;elapsed:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">elapsed&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>26行 &lt;code>if __name__ == '__main__':&lt;/code> 下面的是测试样例。第5、18、19、20行的print是测试输出用。&lt;/p>
&lt;p>6-8行就是考虑极端情况。&lt;/p>
&lt;p>9-11行是初始化，这个题目的数组最起码得有两个值，那么就可以开始初始化，把头两个的差值作为目前的最大差值，这二个值里最小的值作为记录的最小值，最大的值作为最大值，然后就开始用游标移动。&lt;/p>
&lt;p>如果一个值比最小的值还小，那么可以更新最小值，这个时候以后用来去减这个最小值的值必须在这个最小值的右侧，所以这里也需要同步跟新一下最大值。然后下一次碰到一个值，如果比目前存的最小值还大，而且比现在存的最大值也大，那么就可以更新最大值，然后两者相减。&lt;/p>
&lt;p>这样游标不断持续走到终点。&lt;/p>
&lt;p>由于数组自己的特点，所以游标就直接用的是数组的索引。&lt;/p>
&lt;p>解法很简单。&lt;/p>
&lt;p>下面再附上一个不设置maxnum的算法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>
&lt;span class="k">class&lt;/span> &lt;span class="nc">Solution&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">object&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">def&lt;/span> &lt;span class="nf">maxDiff&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="bp">self&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">listlen&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">listlen&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;NaN&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="bp">None&lt;/span>
&lt;span class="n">minnum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">min&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;span class="n">maxdiff&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">listlen&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">minnum&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">maxdiff&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">max&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">maxdiff&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">minnum&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">minnum&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">arr&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="c1"># print(&amp;#39;minnum:&amp;#39;,minnum)&lt;/span>
&lt;span class="c1"># print(&amp;#39;maxdiff:&amp;#39;,maxdiff)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">maxdiff&lt;/span>
&lt;span class="k">if&lt;/span> &lt;span class="vm">__name__&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span>
&lt;span class="n">solution&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Solution&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="n">arr1&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">arr2&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">40&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">11&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">60&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">9&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">]&lt;/span>
&lt;span class="n">solution&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">maxDiff&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">start&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span>
&lt;span class="k">for&lt;/span> &lt;span class="n">i&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="nb">range&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">10000&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">solution&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">maxDiff&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">arr2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="n">elapsed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">time&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">start&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mi">10000&lt;/span>
&lt;span class="k">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;elapsed:&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">elapsed&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>第二个算法的特点就是不管三七二十一，只更新最小值，只要现在的游标碰到的值比现在的最小值还大，那我就尝试用现在游标碰到的值减去最小值。&lt;/p>
&lt;p>所以我增加了time模块，测试跑一万次，两者时间效率上有无差异。&lt;/p>
&lt;p>测试的结果是还是第一种方法更搞笑一点点。（注释掉print是因为它也占用运行时间）&lt;/p>
&lt;p>有兴趣的朋友可以自己复制下来运行运行。&lt;/p>
&lt;p>我是真的很喜欢这道题。够简单又够有趣。其实大部分算法就是这种游标取值，变量更新的模式。在这个基础上玩一些花样。&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>转载 | 我有个梦，不想醒</title><link>/post/%E6%88%91%E6%9C%89%E4%B8%AA%E6%A2%A6%E4%B8%8D%E6%83%B3%E9%86%92/</link><pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate><guid>/post/%E6%88%91%E6%9C%89%E4%B8%AA%E6%A2%A6%E4%B8%8D%E6%83%B3%E9%86%92/</guid><description>&lt;p>&lt;strong>按语&lt;/strong>&lt;/p>
&lt;p>刷豆瓣的时候刷到一个小姐姐的这篇文字。讲述一个非计算机专业的女生最后如何一步一步走上程序员的岗位的历程。走过弯路、经历挫折，但是还是收获了自己最想得到的。经过原作者允许，特转载此篇与大家共享。&lt;/p>
&lt;hr>
&lt;h3 id="我有个梦不想醒">我有个梦，不想醒&lt;/h3>
&lt;p>&amp;mdash;&amp;mdash;-烟雨 2018-11-27 22:44:48&amp;mdash;&amp;mdash;&amp;ndash;&lt;/p>
&lt;p>很多人都想知道，我这个非计算机专业毕业的人是如何当上程序员的，那么我今天就来谈一谈。&lt;/p>
&lt;p>我在IT行业做了6年多了，算上大学4年，最美好的十年已经过去了。&lt;/p>
&lt;p>可是在这十年里，我整整花了7年多时间摸索，直到最后三年才算是真正的坐到了程序员的位子上。&lt;/p>
&lt;p>我也差不多是在三年前，月薪才勉强和211，985的大学刚毕业学生的工资差不多。&lt;/p>
&lt;p>几乎是用命换来的这份工作，每次回想起来都是一把辛酸泪。&lt;/p>
&lt;p>有很多人过得像用最好的牌打出最差的组合，我大概也算是这种人之一。&lt;/p>
&lt;p>我大学考了个不怎样的分数，如果你看过我关于校园霸凌那篇，应该就很能理解我能考上一本已经是血赚了。那一年刚好很多人都报考了北京和上海的学校，杭州没什么人报，我一本就妥了。&lt;/p>
&lt;p>填专业的时候，我妈死活不让我填计算机，她的思想很传统，觉得女的搞计算机不行，就给我报了会计和通信，还有门啥忘了，反正没有计算机。&lt;/p>
&lt;p>会计自然没录取，分数线每到，通信进去了，做什么的呢，听说毕业出来可以进三大运营商。&lt;/p>
&lt;p>结果上课基本全是和硬件打交道，模拟电路，电路分析，机械制图，机械制造……&lt;/p>
&lt;p>我对电路没什么兴趣，机械制图还好玩点，cad和proE，用软件画设计图，机械制造就傻逼了，被带到一个车间里加工零件，第一节课就是看一堂课的视频，视频里全是限制级镜头，什么头发长的女的被卷入机器结果脑袋没了，什么手指乱伸结果胳膊没了，什么脚穿了拖鞋结果被砸到脚，脚趾头没了……后来每节课去车间的时候都有种去鬼门关的感觉。&lt;/p>
&lt;p>除了这些课程，也有些好玩的，比如高数，统计学和概率学，数字电路，这些和计算机专业的学生念的差不多，教材也一样，所以我拿了高分，一度靠这些课的分数拿了奖学金，统计概率和高数好像都考了96，反正挺高的。&lt;/p>
&lt;p>其实大一时我就觉得我应该念计算机，大二的时候想转专业，被我妈死活洗了好几遍脑，被洗成功了，没转。&lt;/p>
&lt;p>我们专业要求大一不能带电脑，女生宿舍楼尤其严管。我就图书馆看了一学期的书，那时已开始自学C语言。&lt;/p>
&lt;p>结果大二仍然悲剧了，计算机专业学的C++，用的清华大学的教材，我们专业学的C余，用学校老师自编的教材，教材错漏百出，给我们上课那考试是个刚毕业留校的妹子，错的东西她也能一脸淡定的讲，我也是服气得很。&lt;/p>
&lt;p>后来上课我就事先把这次课要讲的内容准备一遍，上课前把bug和老师说一下，让她不要误人子弟，然后就默默自己看书了。老师人也不错，知错就改，上课随便我看书，有时遇到问题还会主动问我。&lt;/p>
&lt;p>其实我们专业C语言算是B类，反正就是要求不高的那种，考试题目十分简单，都是基础题。&lt;/p>
&lt;p>我的C语言就这样靠自己顽强地学完了，考试例行高分。于是很大胆地去旁听了ACM，用C语言刷了几百道题，当然，那个时候我还不知道有数据结构。&lt;/p>
&lt;p>后来终于有数据结构课了，我们老师是个写java的，用c语言实现数据结构这种事他当然是不会的，于是怎么办呢，书念一遍，讲个概念，然后就开始扯他做项目怎么怎么牛逼。于是我上课例行看书，然而边上有个人聒噪的情况下看书还是很累的。&lt;/p>
&lt;p>我们还有门神一样的课程叫数学物理啥啥的。学的是傅里叶变换和卷积啊啥的，学这个我没意见，其实做游戏的话还挺需要这些算法的，但是，你能想象笔算傅里叶变换和卷积吗！我们考试就六道题，一道20分，100分就算满分了，40分就算及格了！可想而知这课的考试有多么变态！&lt;/p>
&lt;p>我平时做题都是写个公式，用matlab算完然后交上去的，然后考试的时候……差点挂了……&lt;/p>
&lt;p>选修时当然很想选计算机的，java什么的我也很想学，然而……通信这个傻逼专业，必修课不是一般的多，选修课得选和必修课不冲突的……另外，选课得靠抢……最终选来选去，居然还真没选到java。&lt;/p>
&lt;p>无奈，业余就自学了python，顺便继续学C语言，python当时的版本还挺低的，很多语法还不成熟，没有现在这么热门，但当时已有很牛逼的同学利用python开发了客户端。我羡慕的要死，虽然没有学会图形。但python基本数据处理总算是会了。&lt;/p>
&lt;p>当时我天真的以为C#和C差不多，就去旁听了一堂课，认识了一位挺帅的学长，帮他签到（一张纸传过来勾个名字就行），还用C#帮他做了选修课的作业，拿了个96分，挺开心的。&lt;/p>
&lt;p>C语言继续学来干嘛呢，做单片机，参加了一次单片机比赛，发现硬件不是我的菜，不太喜欢，后来就没再研究单片机。&lt;/p>
&lt;p>大三那年有个数学建模比赛，被一个绿茶婊坑了，没拿到报名资格，ACM吧又觉得自己实力不够，没脸和计算机系的人一起拼，突然就开始迷茫了，不知道今后要做什么，没课就窝在寝室里没日没夜的打游戏，ACM也不刷了，ACM课也不去上了，后来买了几本黑客杂志玩了点黑客技术，玩了点linux，把系统格成linux后总算戒掉了游戏瘾。&lt;/p>
&lt;p>然后继续开始看书奋斗，数据结构算法，C语言（不搞单片机但总觉得对毕业找工作有用），python，web开发。&lt;/p>
&lt;p>那时的上网费很贵，网上也没像今天这样有这么多培训教程，手机也是非智能的。看个网页时如果来条短信，要是想去看短信就得把网页关掉，再重新原路打开。&lt;/p>
&lt;p>当时学的方向错误，很可惜，学了个AS脚本，web设计方向也没专心学js，图形化更是一窍不通。&lt;/p>
&lt;p>几乎是摸索着走完了大三的学习路。大三下就开始投offer实习了。&lt;/p>
&lt;p>我当时拿到了几份不错的offer。一份是支付宝，运维岗，随offer发来的是宾馆信息，支付宝居然帮忙预订了三天的宾馆住宿，只是为了方便我在公司附近租房。一份是诺基亚西门子，技术支持岗。&lt;/p>
&lt;p>我当时选了诺基亚西门子，因为想着外企出国方便些，另外当时支付宝名气不是很大，而且考虑到运维岗要通宵加班，就去诺西做技术支持了。&lt;/p>
&lt;p>然后发现……我他妈太天真了。&lt;/p>
&lt;p>所谓的技术支持，和修电脑的没啥两样。公司新到一批电脑，你要去负责搬运，组装，配网络，分发鼠标和键盘。其他分公司某个人上不了某个网络了，你要问他为啥上不去，帮他配网段，教她怎么怎么搞。新出了个网络架构，技术部开会，技术支持要跟着去开会，因为技术部需要你们技术支持部署好以后给他们用。运维部出了个升级包，你要down下来，然后等公司几乎全部走完了，大概晚上九点多的时候开始更新内部系统，然后确认有没有更新完毕，更新完毕后发邮件。对了，还有公司机房管理，你要装配服务器，要定点去服务器机房转一圈，戴个静电环去塞点线或换几个插口，或者操作一个满是德文或挪威文也不知道啥鸡巴文字的键盘，只为了配几个网口。&lt;/p>
&lt;p>而且当时有几个女的特八卦，我一度怀疑我是不是在IT公司工作。&lt;/p>
&lt;p>后来一个朋友和我说，他在诺西研发部门写python脚本，觉得挺好玩的。&lt;/p>
&lt;p>我真是羡慕的要死。&lt;/p>
&lt;p>后来中国联通开始正式招人，我觉得杭州房价贵，呆不住，做的工作也不痛快，就回了老家，一呆就是三年。现在想想挺后悔的，当时几位男同事人很不错，有一位也挺高挺帅的，也对我很好，我们下班后还一起撸过dota和星际争霸，如果当时我留在诺西，或许会和他结婚？哈哈哈应该是想多了。&lt;/p>
&lt;p>去联通真的差点就废了，先是做了好几个月的报表。就是每天坐车去各下属分公司，那些乡野疙瘩角落里找出机房，然后进机房统计设备是否还在正常运行。然后下班前赶回公司做报表或者留着明天做报表，反正一周少不了三四张报表。跑不完就继续跑，月底前必须完成。&lt;/p>
&lt;p>后来数据部缺人，他们终于想起来他们招了我这个高数96分的人了。我就到数据部做报表。用oracle写sql，存储过程，整理出表格给领导看。时间久了以后我发现领导要的就那点玩意，就python写了个脚本，每天上班一跑。只要领导不改需求，我可以尽情自由自在……&lt;/p>
&lt;p>不，一点也不自在，每个月要通宵一次到两次，陪着外包搞服务器升级维护。领导的破需求也实在是多，为了报表数据做的好看，不惜一切代价更改取数规则，甚至要求我给他搞出张数据好看的报表，然后告诉他怎么取的数据。大家也知道，中国联通年年走下坡路，巧妇难为无米之炊，为了一个好看的营收数据，经常加班到晚上十点多，周末也是经常加班。而且，月底最后一天，月初两天都是要加班的。长假还要值班。所以在中国联通的三年里，我从没有放过一个完整的长假。五一三天假期，经常是连续加班，从来没有放过假。&lt;/p>
&lt;p>这就是所谓的国企正式编制吗，我一度怀疑我会猝死在报表里。&lt;/p>
&lt;p>后来一个和我聊得来的外包朋友告诉我，他朋友的公司在招人，在杭州，有没有兴趣。&lt;/p>
&lt;p>我果断辞职回到了杭州。三年的颓废，除了python偶尔练手还知道点，数据结构算法。C语言。真的是全还给老师了。&lt;/p>
&lt;p>我当时面的pm。我在联通虽然苦逼，好歹也是甲方接项目的人之一，而且当时也看了不少产品设计的书，以为自己应该还是可以设计点产品的……结果我还是太天真了。我们当时的pm头子是个很牛逼的人，我这种渣渣根本不入眼。&lt;/p>
&lt;p>我很崇拜他，学习他之前的设计，每天早上八点起来，晚上十点下班。几乎每天都在改设计图，沟通设计……一次次被打回，最终老大说测试缺人，问我要不要转测试。&lt;/p>
&lt;p>那就测试吧，我几乎是拼命的要做IT这条路，于是我就从测试做起。页面点点，记录bug。设计测试方案，然后测试。&lt;/p>
&lt;p>由于是初创型小公司，项目不多，测试空下来的时候我学了python和selenium框架，于是开启接口自动化测试技能，bug定位快狠准。尽管如此，初创型公司还是挺累的，经常凌晨两三点下班，周末也加班，最强的一次，我们从早上九点干通宵。凌晨四点睡到八点，然后继续开干，干到下午三点半才回去。&lt;/p>
&lt;p>那家公司最大的好处就是在图书馆边上，我在这家公司一年多的时间里，把所有需要重新捡起来的计算机知识都捡起来了，该看的书全看了一遍。每天晚上只要是十点以前下班，我都会看书到凌晨一两点。python。算法，程序设计，当前一些流行的框架。比如django等，软件工程，网上的一些程序员的学习思路也看了很多。&lt;/p>
&lt;p>值得一提的是黑客技术，虽然自学的不够精通，但我无聊的时候玩了几次，居然也在乌云上挣了点小钱，还交了两个黑客兄弟，挺好的。&lt;/p>
&lt;p>后来我就觉得，测试开发也是开发，我凭什么不能做python开发？我也有抽象化思维，也学过半吊子算法，我凭什么不能做程序员。&lt;/p>
&lt;p>恰好我现在这家单位在找运维开发，于是我就去了。刚好我以前有管理维护服务器的经验。&lt;/p>
&lt;p>然后，在现在这家名为有特定产品线实际上就是外包的公司里，我根据项目需要自学了openstack等各种开源云技术，docker，shell脚本也玩更顺溜了，但我不满足，我的目标是全栈。&lt;/p>
&lt;p>于是加深django的学习，又学h5，css，响应式设计……现在js还不是很精通，不过做web问题不大了，虽然和计算机正式毕业的人相差很多，但我总算是赶上来了吧。&lt;/p>
&lt;p>整整有近三年的时间，我每天都在凌晨一两点以后睡觉，看书，自己做项目，不懂就上网搜索，总觉得自己可能今后很短命，但又害怕如果不挣扎，可能这辈子就再也没有机会了。&lt;/p>
&lt;p>我唯一的特长就是看书速度快，理解能力比较强，整页整页的代码，眼睛看一遍，脑子里撸一遍，很快就可以拿来使用了，读代码也是一样，这几年我在github上搬了不少砖。&lt;/p>
&lt;p>工作的话，我现在的技术应该够了，但我并不满足。&lt;/p>
&lt;p>我每天都在梦想自己能做一个游戏，做一个出色的网站，做一个能完成我的梦想的东西，可是我踏出的每一步努力，都会令我觉得自己还有很多的不足之处，于是每次刚有了计划，朝计划跑着跑着就又返回去打基础了。&lt;/p>
&lt;p>我喜欢linux内核，喜欢算法，但是我目前在这两块的水平不足以支撑我找到这方面的相关工作。&lt;/p>
&lt;p>我喜欢游戏，想做游戏，可是游戏行业的加班真心可怕，我也没有这方面的相关经验，再花个几年从头做起吗？不太现实，只能靠自己摸索着做独立游戏了。&lt;/p>
&lt;p>很多人都是觉得IT有趣，其他行业枯燥才转的IT，也有些人是觉得IT有钱才想转IT，但我一路走来，是真的只是不想朝其他行业多看一眼。&lt;/p>
&lt;p>哪怕这辈子已经耽误了十年，甚至耽误了二十年，我觉得我依然会回头做这行。&lt;/p>
&lt;p>我知道这行很艰辛，但我很喜欢这行业，哪怕我妈至今每天都在骂我做这行，我熬过来了。&lt;/p>
&lt;p>虽然现在运维开发仍然只是边缘类的开发，但我总算是摸到了IT行业的边缘了，而且一帮傻逼同事给予了我极大的自信心，我发现我虽然年过三十，还生了孩子，脑子还是挺好使的。&lt;/p>
&lt;p>自信心有点膨胀，所以最近又在开始刷算法，琢磨游戏该怎么做了。&lt;/p>
&lt;p>做游戏算是我人生的终极梦想了吧。&lt;/p>
&lt;p>我后悔过迷茫过颓废过，无数次的想为过去的错误决定去死。&lt;/p>
&lt;p>我不是211985.，不是科班出身，错过了太多机会，也机缘巧合地结识了很多大佬。&lt;/p>
&lt;p>可大佬终究只是我前行道路两旁的灯而已，他们再亮，光辉终究是属于他们的。我的路终究只能靠我一人去走。&lt;/p>
&lt;p>总觉得我的人生就好像一个漫长的绚烂的梦，什么元素都有，什么元素都一个个破碎了，可哪怕真的只是个梦，我也不愿醒来。&lt;/p>
&lt;p>谨以此文，与所有想做IT的人共勉。&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="C:/Users/time/Documents/MEGA/%E4%B8%AA%E4%BA%BA%E6%96%87%E7%AB%A0/myBlog/myhugo_blog/blog/content/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>《马恩全集》第一卷第二篇《评普鲁士最近的书报检查令》的原文</title><link>/post/%E9%A9%AC%E6%81%A9%E5%85%A8%E9%9B%86%E7%AC%AC%E4%B8%80%E5%8D%B7%E7%AC%AC%E4%BA%8C%E7%AF%87%E8%AF%84%E6%99%AE%E9%B2%81%E5%A3%AB%E6%9C%80%E8%BF%91%E7%9A%84%E4%B9%A6%E6%8A%A5%E6%A3%80%E6%9F%A5%E4%BB%A4%E5%8E%9F%E6%96%87/</link><pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate><guid>/post/%E9%A9%AC%E6%81%A9%E5%85%A8%E9%9B%86%E7%AC%AC%E4%B8%80%E5%8D%B7%E7%AC%AC%E4%BA%8C%E7%AF%87%E8%AF%84%E6%99%AE%E9%B2%81%E5%A3%AB%E6%9C%80%E8%BF%91%E7%9A%84%E4%B9%A6%E6%8A%A5%E6%A3%80%E6%9F%A5%E4%BB%A4%E5%8E%9F%E6%96%87/</guid><description>&lt;p>马恩全集第一卷第一篇是马克思的博士论文，《德谟克利特的自然哲学和伊壁鸠鲁的自然哲学的差别》。别怕。我也没看，因为我也知道我看不懂。不过第二篇这篇就很好看了。&lt;/p>
&lt;p>著名的那句：&lt;/p>
&lt;blockquote>
&lt;p>你们赞美大自然令人赏心悦目的千姿百态和无穷无尽的丰富宝藏，你们并不要求玫瑰花散发出和紫罗兰一样的芳香，但你们为什么却要求世界上最丰富的东西 —— 精神只能有一种存在形式呢？我是一个幽默的人，可是法律却命令我用严肃的笔调。我是一个豪放不羁的人，可是法律却指定我用谦逊的风格。一片灰色就是这种自由所许可的唯一色彩。每一滴露水在太阳的照耀下都闪现着无穷无尽的色彩。但是精神的太阳，无论它照耀着多少个体，无论它照耀什么事物，却只准产生一种色彩，就是官方的色彩！&lt;/p>
&lt;/blockquote>
&lt;p>即出自这里。&lt;/p>
&lt;p>文章特别长，典型的马克思雄辩色彩。但是非常值得一读。送给所有追求自由以及网络删帖员。&lt;/p>
&lt;hr>
&lt;!-- TOC -->
&lt;!-- \TOC -->
&lt;p>我们不是那种心怀不满的人，不会在普鲁士新的书报检查法令 &lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> 公布之前就声明说：即使丹纳士人带来礼物，我还是怕他们［注：维吉尔《亚尼雅士之歌》第 2 部第 49 行。丹纳士人在这里指希腊人。—— 编者注］。相反，因为新的检查令允许对已经颁布的法律进行讨论，哪怕这种讨论和政府的观点不一致，所以，我们现在就从这一检查令本身谈起。书报检查就是官方的批评。书报检查的标准就是批评的标准，因此，就很难把这种标准同批评分割开来，因为它们是建立在同一个基础上的。&lt;/p>
&lt;p>当然，对于检查令序言中所表述的一般倾向，每个人都只能表示赞同：&lt;/p>
&lt;blockquote>
&lt;p>“为了使新闻出版现在就能摆脱那些未经许可的、违背陛下旨意的限制，国王陛下曾于本月 10 日下诏王室内阁，明确反对使写作活动受到各种无理的约束。国王陛下承认公正的、合乎礼貌的公众言论是重要的而且必需的，并授权我们再度责成书报检查官切实遵守 1819 年 10 月 18 日书报检查法令 &lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> 第 2 条的规定。”&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>&lt;/p>
&lt;/blockquote>
&lt;p>当然！既然书报检查是必要的，那么公正的、自由的书报检查就更加必要了。　　&lt;/p>
&lt;p>可是，这里有一点马上就会使人们感到有点诧异，那就是上述法律的日期。该法律颁布的日期是 1819 年 10 月 18 日。怎么？难道这是一项由于时势所迫而废除了的法律吗？看来不是，因为现在不过是 “再度” 责成书报检查官必须遵守这一法律。由此可见，这一法律 1842 年以前一直存在，不过没有实施罢了。正因为如此，现在才又提起它，“为了” 使新闻出版 “现在就” 能摆脱那些未经许可的、违背陛下旨意的限制。　　&lt;/p>
&lt;p>尽管有了法律，但是新闻出版物到目前为止仍然受到种种未经许可的限制，这就是从上述书报检查令的序言中得出的直接结论。　　&lt;/p>
&lt;p>上面的话是针对法律，还是针对书报检查官呢？　　&lt;/p>
&lt;p>我们未必有理由能肯定说是后一种情况。在 22 年当中，保护公民的最高利益即他们的精神的主管机关，一直在进行非法的活动，这一机关的权力简直比罗马的书报检查官还要大，因为它不仅管理个别公民的行为，而且甚至管理公众精神的行为。在组织完善的、以自己的行政机关自豪的普鲁士国家里，政府高级官员的这种不负责任的行为，这种一贯的不忠诚的行为，难道可能发生吗？还是国家总是盲目地挑选最无能的人去担任最艰巨的职务呢？最后，也许是普鲁士国家的臣民已根本不可能起来抗议这种违法的行为吧？难道普鲁士的所有作者都如此愚昧无知，连与自己生存有关的法律也不知道吗？还是他们的胆子太小，竟不敢要求实施这种法律呢？　　&lt;/p>
&lt;p>假如我们把过错推在书报检查官身上，那么这不仅会败坏他们本身的名誉，而且会败坏普鲁士国家和普鲁士作者的名誉。　　&lt;/p>
&lt;p>况且，如果书报检查官二十多年来一直进行无视法律的非法活动，那就会提供令人信服的证据，说明新闻出版需要的是别的保证，而不是给如此不负责任的人物发出的这种一般性的指令。那就会证明书报检查制度骨子里隐藏着一种用任何法律都无法消除的根本缺陷。　　&lt;/p>
&lt;p>可是，如果说书报检查官很中用，不中用的是法律，那么，为什么还要再度求助于法律去反对正是它本身所造成的祸害呢？　　&lt;/p>
&lt;p>或者，也许为了造成一种改善的假象而不从本质上去改善事物，才需要把制度本身的客观缺点归咎于个人吧？虚伪自由主义的手法通常总是这样的：在被迫让步时，它就牺牲人这个工具，而保全事物本身，即制度。这样就会转移从表面看问题的公众的注意力。　　&lt;/p>
&lt;p>对事物本身的愤恨就会变成对某些人的愤恨。有些人以为人一变换，事物本身也就会起变化。人们的注意力就从书报检查制度转移到了个别书报检查官身上，而那一伙专看官方眼色行事的卑劣作者，便放心大胆地反对那些不受宠幸的人，对政府却称颂备至。　　&lt;/p>
&lt;p>在我们面前还有一个困难。　　&lt;/p>
&lt;p>某些报纸的记者认为，书报检查令就是新的书报检查法令。他们错了，不过他们的这种错误是情有可原的。1819 年 10 月 18 日的书报检查法令只应当暂时有效，即到 1824 年为止有效，如果不是现在的书报检查令告诉我们上述法令从来没有被实施过，那么直到今天它仍然是一项临时性的法律。　　&lt;/p>
&lt;p>1819 年的法令也是一项过渡性措施，不过，当时规定了一定的期限 —— 五年，可以期望颁布永久性法律，而新的检查令却没有规定任何期限；其次，当时期望颁布的是关于新闻出版自由的法律，而现在期望颁布的则是关于书报检查的法律。　　&lt;/p>
&lt;p>另一些报纸的记者则认为，这个书报检查令是旧的书报检查法令的翻新。检查令本身将驳倒他们这种错误的看法。　　&lt;/p>
&lt;p>我们认为，书报检查令是可能要颁布的书报检查法的精神的预示。在这一点上，我们是严格遵循 1819 年书报检查法令的精神的，根据这一法令，邦的法律和命令对新闻出版具有同样的作用 (参看上述法令第 16 条第 2 款 &lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>)。　　&lt;/p>
&lt;p>现在我们再回过头来看看检查令。&lt;/p>
&lt;blockquote>
&lt;p>“根据这一法律〈即根据第 2 条规定〉书报检查不得阻挠人们对真理作严肃和谦逊的探讨，不得使作者受到无理的约束，不得妨碍书籍在书市上自由流通。”&lt;/p>
&lt;/blockquote>
&lt;p>书报检查不得阻挠的对真理的探讨，在这里有了更具体的规定：这就是严肃和谦逊的探讨。这两个规定要求探讨注意的不是内容，而无宁说是内容以外的某种东西。这些规定一开始就使探讨脱离了真理，并硬要它把注意力转移到某个莫名其妙的第三者身上。可是，如果探讨老是去注意这个由法律赋予挑剔权的第三者，难道它不是会忽视真理吗？难道真理探讨者的首要义务不就是直奔真理，而不要东张西望吗？假如我必须记住用指定的形式来谈论事物，难道我不是会忘记谈论事物本身吗？&lt;/p>
&lt;p>真理像光一样，它很难谦逊；而且要它对谁谦逊呢？对它本身吗？真理是检验它自身和谬误的试金石［注：斯宾诺莎《伦理学》第 2 部分第 43 命题。—— 编者注］。那么是对谬误吗？&lt;/p>
&lt;p>如果谦逊是探讨的特征，那么，这与其说是害怕谬误的标志，不如说是害怕真理的标志。谦逊是使我寸步难行的绊脚石。它就是规定在探讨时要对得出结论感到恐惧，它是一种对付真理的预防剂。&lt;/p>
&lt;p>其次，真理是普遍的，它不属于我一个人，而为大家所有；真理占有我，而不是我占有真理。我只有构成我的精神个性的形式。“风格如其人。”&lt;sup id="fnref:5">&lt;a href="#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup> 可是实际情形怎样呢！法律允许我写作，但是不允许我用自己的风格去写，我只能用另一种风格去写！我有权利表露自己的精神面貌，但是首先必须使这种面貌具有一种指定的表情！哪一个正直的人不为这种无理的要求脸红，而宁愿把自己的脑袋藏到罗马式长袍里去呢？至少可以预料在那长袍下面有一个丘必特的脑袋。指定的表情只不过意味着 “强颜欢笑” 而已。&lt;/p>
&lt;p>你们赞美大自然令人赏心悦目的千姿百态和无穷无尽的丰富宝藏，你们并不要求玫瑰花散发出和紫罗兰一样的芳香，但你们为什么却要求世界上最丰富的东西 —— 精神只能有一种存在形式呢？我是一个幽默的人，可是法律却命令我用严肃的笔调。我是一个豪放不羁的人，可是法律却指定我用谦逊的风格。一片灰色就是这种自由所许可的唯一色彩。每一滴露水在太阳的照耀下都闪现着无穷无尽的色彩。但是精神的太阳，无论它照耀着多少个体，无论它照耀什么事物，却只准产生一种色彩，就是官方的色彩！精神的最主要形式是欢乐、光明，但你们却要使阴暗成为精神的唯一合适的表现；精神只准穿着黑色的衣服，可是花丛中却没有一枝黑色的花朵。精神的实质始终就是真理本身，而你们要把什么东西变成精神的实质呢？谦逊。歌德说过，只有怯懦者才是谦逊的［注：歌德《总结》。—— 编者注］，你们想把精神变成这样的怯懦者吗？也许，这种谦逊应该是席勒所说的那种天才的谦逊［注：席勒《论素朴的和伤感的诗》。—— 编者注］？如果是这样的话，那你们就先要把自己的全体公民、特别是你们所有的书报检查官都变成天才。况且，天才的谦逊当然不像文雅的语言那样。避免使用乡音和土语，相反，天才的谦逊恰恰在于用事物本身的乡音和表达事物本质的土语来说话。天才的谦逊是要忘掉谦逊和不谦逊，使事物本身突现出来。精神的谦逊总的说来就是理性，就是按照事物的本质特征去对待各种事物的那种普遍的思想自由。&lt;/p>
&lt;p>其次，根据特利斯屈兰・善第所下的定义：严肃是肉体为掩盖灵魂缺陷而做出的一种虚伪姿态［注：劳・斯特恩《特利斯屈兰・善第先生的生平和见解》第 1 卷第 11 章。—— 编者注］。如果严肃不应当适合这个定义，如果严肃的意思应当是注重实际的严肃态度，那么这整个规定就会失去意义。因为我把可笑的事物看成是可笑的，这就是对它采取严肃的态度；对不谦逊仍然采取谦逊的态度，这也就是精神的最大的不谦逊。&lt;/p>
&lt;p>严肃和谦逊！这是多么不固定的、相对的概念啊！严肃在哪里结束，诙谐又从哪里开始呢？谦逊在哪里结束，不谦逊又从哪里开始呢？我们的命运不得不由书报检查官的脾气来决定。给书报检查官指定一种脾气和给作者指定一种风格一样，都是错误的。要是你们想在自己的美学批评中表现得彻底，你们就得禁止过分严肃和过分谦逊地去探讨真理，因为过分的严肃就是最大的滑稽，过分的谦逊就是最辛辣的讽刺。&lt;/p>
&lt;p>最后，这是以对真理本身的完全歪曲的和抽象的观点为出发点的。作者的一切活动对象都被归结为 “真理” 这个一般观念。可是，同一个对象在不同的个人身上会获得不同的反映，并使自己的各个不同方面变成同样多的不同的精神性质；如果我们撇开一切主观的东西即上述情况不谈，难道对象的性质不应当对探讨发生一些哪怕是最微小的影响吗？不仅探讨的结果应当是合乎真理的，而且得出结果的途径也应当是合乎真理的。对真理的探讨本身应当是真实的，真实的探讨就是扩展了的真理，这种真理的各个分散环节在结果中是相互结合的。难道探讨的方式不应当随着对象而改变吗？当对象欢笑的时候，探讨却应当摆出严肃的样子；当对象令人讨厌的时候，探讨却应当是谦逊的。这样一来，你们就既损害了主体的权利，也损害了客体的权利。你们抽象地理解真理，把精神变成了枯燥地记录真理的裁判官。&lt;/p>
&lt;p>也许不必去为这些玄妙的玩意儿伤脑筋？对真理是否干脆就应该这样去理解，即凡是政府的命令都是真理，而探讨只不过是一种既多余又麻烦的、可是由于礼节关系又不能完全取消的第三者？看来情况差不多就是如此。因为探讨一开始就被认为是一种同真理对立的东西，因此，它就要在可疑的官方侍从 —— 严肃和谦逊 (当然俗人对牧师应该采取这种态度) 的伴随下出现。政府的理智是国家的唯一理性；诚然，在一定的时势下，这种理智也必须向另一种理智及其空谈作某些让步，但是到那时，后一种理智就应当意识到：别人已向它让了步，而它本来是无权的，因此，它应当表现得谦逊而又恭顺，严肃而又乏味。伏尔泰说过：除了乏味的体裁之外，其余的一切体裁都是好的。&lt;sup id="fnref:6">&lt;a href="#fn:6" class="footnote-ref" role="doc-noteref">6&lt;/a>&lt;/sup> 但在这里，乏味的体裁却是独一无二的体裁，只要指出《莱茵省等级会议辩论情况》就足以证明这一点。既然如此，为什么不干脆恢复那美好的旧式的德国公文体裁呢？请随意写吧，可是写出来的每一个字都必须同时是对自由的书报检查机关的阿谀奉承之词，而书报检查机关也就会让你们那既严肃又谦逊的言论顺利通过。可千万不要失去虔敬的意识啊！&lt;/p>
&lt;p>法律强调的并不是真理，而是谦逊和严肃。因此，一切 —— 严肃，谦逊，首先是真理，都会引起怀疑，因为在这种真理的不确定的范围背后，看来还隐藏着一种非常确定、非常可疑的真理。检查令接着指出：&lt;/p>
&lt;blockquote>
&lt;p>“因此，无论如何不应该按照某种心胸狭窄的、超出这一法律界限的意旨来实行书报检查。”&lt;/p>
&lt;/blockquote>
&lt;p>这一法律首先指的就是 1819 年法令的第 2 条，可是检查令接着又援引了这个书报检查法令的总的 “精神”。要把上面的两种规定结合起来是很容易的，因为书报检查法令的第 2 条就是该法令的精神的集中体现，而它的其余各条则是这种精神的更具体的划分和更详尽的规定。我们认为，对上述精神的以下几种表述最能说明这种精神的特征：&lt;/p>
&lt;blockquote>
&lt;p>第 7 条：“科学院与各大学到目前为止所享有的免受书报检查的自由，在今后五年内将被取消。”
第 10 款：本临时决议自即日起生效，有效期五年，期满之前，联邦议会 &lt;sup id="fnref:7">&lt;a href="#fn:7" class="footnote-ref" role="doc-noteref">7&lt;/a>&lt;/sup> 应切实研究通过何种办法才能够实施联邦条例 &lt;sup id="fnref:8">&lt;a href="#fn:8" class="footnote-ref" role="doc-noteref">8&lt;/a>&lt;/sup> 第 18 条中提出的有关新闻出版自由的各项统一规定。随后就应该对德国境内新闻出版自由的合法界限作出最后决定。”&lt;/p>
&lt;/blockquote>
&lt;p>有这样一种法律，哪里还存在新闻出版自由，它就取消这种自由，哪里应当实行新闻出版自由，它就通过书报检查使这种自由变成多余的东西 —— 这样的法律不能认为是有利于新闻出版的。上述的第 10 款也干脆承认，暂时用书报检查法来代替联邦条例第 18 条中提出的、可能有一天要实行的新闻出版自由。这种移花接木的做法至少表明，时势要求对新闻出版加以限制，法令就是由于不信任新闻出版界而产生的。为了替这种不得人心的做法辩解，甚至硬说这是一项有效期限只有五年的临时措施，可是，遗憾得很，它的有效期限竟达 22 年之久。&lt;/p>
&lt;p>从检查令的下面一句话中我们就可以看出，检查令是如何陷于自相矛盾的，它一方面不允许按照超出法令界限的意旨来实行书报检查，但另一方面又规定书报检查应当超出这种界限：“当然，书报检查官也可以允许人们坦率地讨论国内事务。” 书报检查官可以这样做，但不一定要这样做，因为这不是非做不可的。仅仅这种慎重的自由主义就已经非常肯定地不仅超出了书报检查法令的精神，而且也超出了它的特定要求。旧的书报检查法令，即在检查令中引用的第 2 条，不仅不准坦率地讨论普鲁士的事务，甚至也不准坦率地讨论中国的事务。检查令这样解释：“凡对任何国家中存在的图谋推翻国家制度的政党作赞许的叙述的一切企图，均属于这一范围”，即属于破坏普鲁士邦和德意志联邦 &lt;sup id="fnref:9">&lt;a href="#fn:9" class="footnote-ref" role="doc-noteref">9&lt;/a>&lt;/sup> 其他各邦的安全的范围。在这种情况下，难道还允许对中国或土耳其的国内事务进行坦率的讨论吗？既然如此遥远的情况都威胁着德意志联邦的脆弱的安全，那么每一句对内部事务表示不满的话又怎能不威胁它的安全呢？&lt;/p>
&lt;p>这样一来，检查令在自由主义方面就超出了书报检查法令第 2 条的精神 (超出的内容以后就会清楚，不过，既然这种超出被说成是法令第 2 条的结论，那它在形式上就是值得怀疑的，其实检查令只明智地引用了法令第 2 条的前一半，但又责成书报检查官按照第 2 条条文本身办事)，而在非自由主义方面，检查令也同样超出了书报检查法令的范围，它在对报刊的旧有的限制之外又加上了新的限制。&lt;/p>
&lt;p>上述书报检查法令的第 2 条指出：&lt;/p>
&lt;blockquote>
&lt;p>“它的〈书报检查的〉目的是：与宗教的一般原则相违背的一切均应杜绝，不管个别宗教党派和国内允许存在的教派的见解和教义如何。”&lt;/p>
&lt;/blockquote>
&lt;p>1819 年，理性主义还占统治地位，这种理论把一般的宗教理解为所谓理性的宗教。这种理性主义的观点也就是书报检查法令的观点，可是这个法令太不彻底，它的目的是要保护宗教，但它的观点却是反宗教的。这种把宗教的一般原则同它的实际内容和规定性分割开来的做法，正是同宗教的一般原则相抵触的。因为每种宗教都认为，它同其他各种特殊的、虚构的宗教的区别，正在于它的特殊本质，正是由于它有这种规定性，它才是真正的宗教。新的书报检查令在它引用的第 2 条中省略了附加的限制条文，根据这一条文的规定，个别宗教党派和教派都不享有神圣不可侵犯的权利。不仅如此，检查令还作了如下的解释：&lt;/p>
&lt;blockquote>
&lt;p>“凡以轻佻的、敌对的方式反对一般的基督教或某一教理的行为，均不应容忍。”&lt;/p>
&lt;/blockquote>
&lt;p>旧的书报检查法令绝口不谈基督教，相反，它把宗教同所有个别的宗教党派和教派区别开来。新的书报检查令则不仅把宗教改成了基督教，而且还加上了某一教理几个字。这就是我们那种已经基督教化的科学的滑稽产物！新的书报检查令又给新闻出版造好了新的枷锁，谁还能否认这一点呢？据说，既不能一般地反对宗教，也不能特殊地反对宗教。或者，你们也许以为，“轻佻的、敌对的” 这几个字眼已使新的锁链变成了玫瑰花环吧？轻佻、敌对，说得多么巧妙啊！“轻佻的” 这个形容词是要求公民行为端庄正派，这是一个对众人公开的字眼，“敌对的” 这个形容词则是对书报检查官偷偷地说的，它是 “轻佻” 在法律上的解释。在检查令中我们还能找到许多玩弄这种巧妙手法的例子：对公众用的是一套主观的、使人面红耳赤的字眼，对书报检查官用的则是另一套客观的、使作者不禁脸色发白的字眼。盖有封印的上谕 &lt;sup id="fnref:10">&lt;a href="#fn:10" class="footnote-ref" role="doc-noteref">10&lt;/a>&lt;/sup> 简直也可以用这种手法谱成乐曲了。&lt;/p>
&lt;p>书报检查令陷入了多么令人惊奇的矛盾！只有那种不彻底的攻击才是轻佻的，这种攻击只针对现象的个别方面，由于它本身不够深刻和严肃，因而不能涉及事物的本质；正是仅仅对特殊事物本身的攻击，才是轻佻的。因此，如果禁止对一般基督教的攻击，那么，只有对它的轻佻的攻击才是许可的了。相反，对宗教的一般原则，对宗教的本质，以及对特殊事物 (就它是本质的表现而言) 的攻击，都是敌对的。攻击宗教只能采取轻佻的或者敌对的方式，第三种方式是不存在的。当然，检查令的这种不彻底性只是一种假象，因为这种不彻底性的立足点就是这样一种假象：似乎对宗教进行某些攻击也是许可的。但只要不带偏见，一眼就可看出这种假象只是一种假象而已。对于宗教，既不能用敌对的方式去攻击，也不能用轻佻的方式去攻击，既不能一般地去攻击，也不能特殊地去攻击，这就是说，根本不许攻击。&lt;/p>
&lt;p>可是，如果同 1819 年的书报检查法令有明显矛盾的检查令要给哲学方面的书刊带上新的枷锁，那它至少应当表现得很彻底，能使宗教方面的书刊摆脱以前理性主义的法令加在它身上的旧枷锁。因为该法令曾宣布书报检查的目的也是 “反对把宗教信条狂热地搬到政治中去，防止由此引起的概念混乱”。新的检查令虽然非常慎重，在自己的解释中对这一规定只字未提，但在引用法令第 2 条时仍然采纳了这一规定。什么叫作把宗教信条狂热地搬到政治中去呢？这就是说，要让宗教信条按其独特的本性去决定国家，也就是说，要使宗教的特殊本质成为国家的准则。旧的书报检查法令有权反对这种概念混乱，因为它允许批评特殊的宗教，允许批评这种宗教的特定内容。但旧法令依据的是你们自己所蔑视的、平凡而肤浅的理性主义。而你们这些甚至把国家的个别细小方面都建立在信仰和基督教上的人，你们这些希望建立基督教国家的人，怎么还能够提出要书报检查避免这种概念混乱呢？&lt;/p>
&lt;p>政治原则和基督教宗教原则的混淆已成了官方的信条。现在让我们来简单地解释一下这种混淆。如果只谈作为公认的宗教的基督教，那么在你们国家里就有天主教徒和新教徒。他们都会向国家提出同样的要求，就像他们对国家都负有同样的义务一样。他们会撇开自己的宗教分歧而一致要求：国家应该是政治理性和法的理性的实现。可是，你们却想建立一个基督教国家。如果你们的国家成了一个路德派的基督教国家，那么对天主教徒来说，这个国家就会成为一个并非他们所属、必然会被他们当作异端教会加以屏弃的教会，成为一个内在本质同他们正相抵触的教会。反过来也是一样。如果你们把基督教的一般精神说成是你们国家的特殊精神，那么你们就是从你们所受的新教的教育出发来决定什么是基督教的一般精神。虽然最近的事态已向你们表明，政府的个别官员划不清宗教和世俗、国家和教会之间的界限，但是你们还在决定什么是基督教国家。关于这种概念混乱，不应当由书报检查官作出决定，而应当由外交家去谈判 &lt;sup id="fnref:11">&lt;a href="#fn:11" class="footnote-ref" role="doc-noteref">11&lt;/a>&lt;/sup>。最后，如果你们把某一种教义当作无关紧要的教义而加以屏弃，那你们所持的就是异端的观点。假如你们把自己的国家称为一般的基督教国家，那你们就是以委婉的方式承认它是非基督教国家。因此，要么你们根本禁止把宗教搬到政治中去 (但是你们不愿意这样做，因为你们想使之成为国家支柱的并不是自由的理性，而是信仰，对你们来说，宗教就是对现存事物的普遍肯定)；要么你们就允许把宗教狂热地搬到政治中去，二者必居其一。让宗教按照自己的方式去从事政治吧，可是你们又不愿意这样做，因为在你们看来，宗教应当支持世俗的事物，但是，世俗的事物可不要受宗教支配。你们既然把宗教搬到政治中去，那么，企图按照世俗的方式规定宗教在政治中应当以什么姿态出现，这是不折不扣的、甚至是反宗教的狂妄要求。谁由于宗教的冲动而想和宗教结合在一起，谁就得让宗教在一切问题上都有决定权。或者，也许你们把宗教理解为对你们自己的无限权力和英明统治的崇拜吧？&lt;/p>
&lt;p>新的书报检查令的正统精神还以其他方式同旧的书报检查法令的理性主义发生冲突。旧的法令把制止 “损害道德和良好习俗的行为” 也列为书报检查的一项任务。检查令则把这一处当作法令第 2 条的引文加以引用。但是，如果说检查令的解释在宗教方面作了某些补充，那么在道德方面这个解释却漏掉了某些东西。对道德和良好习俗的损害变成了对 “礼仪、习俗和外表礼貌” 的破坏。我们可以看到，作为道德的道德，作为这个世界 (它受自己的规律支配) 的原则的道德正在消失，而代替本质的却是外表的现象、警察的尊严和传统的礼仪。谁该得到荣誉，就把荣誉给谁，在这里，我们看到了真正的彻底性。道地的基督教立法者不可能承认道德是一种本身神圣的独立领域，因为他们把道德的内在的普遍本质说成是宗教的附属物。独立的道德要损害宗教的普遍原则，宗教的特殊概念是同道德相抵触的。道德只承认自己普遍的和合乎理性的宗教，宗教则只承认自己特殊的现实的道德。因此，根据这一检查令，书报检查应该排斥像康德、费希特和斯宾诺莎这样一些道德领域内的思想巨人，因为他们不信仰宗教，并且要损害礼仪、习俗和外表礼貌。所有这些道德家都是从道德和宗教之间的根本矛盾出发的，因为道德的基础是人类精神的自律，而宗教的基础则是人类精神的他律。书报检查制度所进行的令人讨厌的革新，一方面表现为它的道德良心的减弱，另一方面则表现为它的宗教良心的大大强化；现在我们撇开这种讨厌的革新不谈，再来看看比较令人高兴的东西 —— 让步。&lt;/p>
&lt;blockquote>
&lt;p>“由此特别可以得出结论说，凡对整个国家管理机关或个别部门作出评价的作品，凡根据业已颁布或尚待颁布的法律的内在价值对这些法律进行讨论、揭露错误和缺点、指出或提出改进办法的作品，只要措辞合乎礼貌，倾向善良，就不能仅仅因为它们不符合政府的精神而拒绝发表。”&lt;/p>
&lt;/blockquote>
&lt;p>探讨要谦逊和严肃，这是新检查令和旧的书报检查法令的共同要求，可是，新检查令认为，措辞合乎礼貌和内容真实同样都是不够的。对于检查令来说，倾向才是它的主要标准，而且是它的贯穿始终的思想，但是在法令中甚至连 “倾向” 这个字眼也找不到。这种倾向究竟是什么，这一点新的检查令只字未提。可是，从下面一段引文中可以看出，对检查令来说，倾向是多么重要：&lt;/p>
&lt;blockquote>
&lt;p>“这方面必要的前提是，对政府措施发表的见解，其倾向不是敌对的和恶意的，而是善意的。这就要求书报检查官具有良好的愿望和鉴别的能力，善于区别这两种不同的情况。与此相适应，书报检查官也必须特别注意准备出版的作品的形式和语调，一旦发现作品因感情冲动、激烈和狂妄而带有有害的倾向，应不准其印行。”&lt;/p>
&lt;/blockquote>
&lt;p>这样一来，作者就成了最可怕的恐怖主义的牺牲品，遭到了涉嫌的制裁。追究倾向的法律，即没有规定客观标准的法律，是恐怖主义的法律；在罗伯斯比尔执政时期，国家在危急情况下所制定的就是这样的法律，在罗马皇帝们在位时期，国家在腐败不堪的情况下所制定的也是这样的法律。凡是不以当事人的行为本身而以他的思想作为主要标准的法律，无非是对非法行为的实际认可。与其把我要留胡子的想法当作剪胡子的标准，倒不如像那位俄国沙皇［注：彼得一世。—— 编者注］所做的那样，干脆让御用的哥萨克人把所有人的胡子统统剪掉。&lt;/p>
&lt;p>只是由于我表现自己，只是由于我踏入现实的领域，我才进入受立法者支配的范围。对于法律来说，除了我的行为以外，我是根本不存在的，我根本不是法律的对象。我的行为就是法律在处置我时所应依据的唯一的东西，因为我的行为就是我为之要求生存权利、要求现实权利的唯一东西，而且因此我才受到现行法的支配。可是，追究倾向的法律不仅要惩罚我所做的，而且要惩罚我在行动以外所想的。所以，这种法律是对公民名誉的一种侮辱，是一种危害我的生存的法律。&lt;/p>
&lt;p>我可以随便挣扎，设法摆脱困境，但是事态决不会因此而有丝毫改变。我的生存遭到了怀疑，我的最隐秘的本质，即我的个性被看成是一种坏的个性，而且由于这种意见我要受到惩罚。法律之所以惩罚我，并不是因为我做了坏事，而是因为我没有做坏事。其实，我之所以受到惩罚，是因为我的行为并不违法，只是由于这一点，我就迫使好心肠的、善意的法官去追究我那非常慎重、并未见诸行动的坏的思想。&lt;/p>
&lt;p>追究思想的法律不是国家为它的公民颁布的法律，而是一个党派用来对付另一个党派的法律。追究倾向的法律取消了公民在法律面前的平等。这是制造分裂的法律，不是促进统一的法律，而一切制造分裂的法律都是反动的；这不是法律，而是特权。一些人有权干另一些人无权干的事情，这并不是因为后者缺乏什么客观品质 (像小孩子不会缔结条约那样)，不，不是这样，而是因为他们的善良意图，他们的思想遭到了怀疑。即使公民起来反对国家机构，反对政府，道德的国家还是认为他们具有国家的思想。可是，在某个机关自诩为国家理性和国家道德的举世无双的独占者的社会中，在同人民根本对立因而认为自己那一套反国家的思想就是普遍而标准的思想的政府中，当政集团的龌龊的良心却臆造了一套追究倾向的法律，报复的法律，来惩罚思想，其实它不过是政府官员的思想。追究思想的法律是以无思想和不道德而追求实利的国家观为基础的。这些法律就是龌龊的良心的不自觉叫喊。那么怎样才能使这种法律付诸实施呢？这要通过一种比法律本身更令人气愤的手段 —— 侦探，或者通过认为所有写作流派都是值得怀疑的这样一种事先协定，由此，当然又要追究某人是属于哪一种流派的。在追究倾向的法律中，立法的形式是同内容相矛盾的，颁布这一法律的政府疯狂地反对它本身所体现的东西，即反对那种反国家的思想，同样，在每一种特殊的场合下，政府对自己的法律来说就好像是一个颠倒过来的世界，因为它用双重的尺度来衡量事物。对一方是合法的东西，对另一方却是违法的东西。政府所颁布的法律本身就是被这些法律奉为准则的那种东西的直接对立面。&lt;/p>
&lt;p>新的书报检查令也陷入了这种自身固有的对立之中。它在指摘新闻出版界时痛斥为反国家行为的一切事情，它自己全都照干不误，并且以此作为书报检查官应尽的职责，这样，它就陷入了矛盾。&lt;/p>
&lt;p>譬如，检查令禁止作者怀疑个别人或整个阶级的思想，但是同时它又允许书报检查官把全体公民分成可疑的和不可疑的两种，分成善意的和恶意的两种。新闻出版被剥夺了批评的权利，可是批评却成了政府批评家的日常责任。但事情并不限于这种本末倒置。在报刊内部，反国家的因素在内容方面表现为某种特殊的东西，在形式方面则是某种普遍的东西，即要交给公众评判的东西。&lt;/p>
&lt;p>可是，现在事情颠倒过来了：现在，特殊的东西在内容方面表现为合法的东西，而反国家的东西却表现为国家的意见，即国家法；就形式而论，反国家的因素现在表现为一种普遍光芒照不到的、远离公开自由的发表场所而被赶进政府批评家的办公厅里去的特殊东西。又如，检查令想要保护宗教，同时又破坏了所有宗教的最普通的基本原则 —— 主观思想的神圣性和不可侵犯性。检查令宣布，心灵的法官是书报检查官，而不是上帝。又如，检查令禁止使用侮辱个别人的词句和作出败坏其名誉的判断，可是它又使你们每天都忍受检查官作出的侮辱性的、败坏你们名誉的判断。又如，检查令想要消灭居心叵测或不明真相的人散布的流言蜚语，可是，由于它把判断从客观内容的范围硬搬到主观意见或任性的范围中去，它就迫使书报检查官相信并转而散布这种流言蜚语，相信并转而从事不明真相和居心叵测的人所进行的那种侦探活动。又如，国家的意图不应当受到怀疑，但检查令却正好从怀疑国家出发。又如，好的外表不应当用来掩饰任何坏的思想，但检查令本身就是建立在骗人的假象之上的。又如，检查令指望增强民族感情，但它本身却是建立在玷辱民族的观点之上的。有人要求我们的行为合乎法律，要求我们尊重法律，同时我们又必须尊重那些把我们置于法律之外而以任性取代法的制度。我们必须绝对承认人格原则，尽管书报检查制度有缺陷，我们还要信任书报检查官；你们却肆意践踏人格原则，你们竟不根据行为来判断人，而根据对人的行为动机的看法来判断人。你们要求谦逊，但你们的出发点却是极大的不谦逊，你们竟把个别官员说成是能窥见别人心灵和无所不知的人，说成是哲学家、神学家、政治家，并把他们同德尔斐城的阿波罗相提并论。你们一方面要我们把尊重不谦逊作为义务，但另一方面又禁止我们不谦逊。把类的完美硬归之于特殊的个体，这才是真正的不谦逊。书报检查官是特殊的个体，而新闻出版界却构成了类。你们命令我们信任，同时又使不信任具有法律效力。你们把自己的国家制度估计得如此之高，竟认为这些制度能使软弱无能的、平凡的人 —— 官员成为神圣的人，能替他们把不可能的事情变为可能。可是，你们又非常不信任自己的国家机构，竟害怕私人的孤立的意见，因为你们把新闻出版界看成是私人。在你们看来，官员们在处理问题时完全没有个人纠葛，没有怨恨，不会感情用事，不会心胸狭窄，也没有人类的弱点。而没有个人纠葛的东西，思想，你们却加以怀疑，认为其中充满了个人的阴谋和主观的卑鄙意图。检查令要求对官员阶层无限信任，而它的出发点却是对非官员阶层的无限不信任。可是，为什么我们就不应当以德报德、以怨报怨呢？为什么我们就不应当认为这一官员阶层才是值得怀疑的呢？品格也是一样。同秘密行事的批评家的品格相比，公开说话的批评家的品格从一开始就应该受到不抱偏见的人们的更大尊敬。&lt;/p>
&lt;p>凡总的说来是坏的东西就始终是坏的，不论体现它的是谁，是私人的批评家还是政府任命的批评家；不过，在后一种场合下，这种坏的东西会得到批准，并被上面认为是为在下面实现好事情所必需的东西。&lt;/p>
&lt;p>追究倾向的书报检查和书报检查的倾向，这就是新的自由的检查令送来的礼物。要是我们对检查令的以下几点规定采取某种不信任的态度，那么谁也不会因此而指摘我们。&lt;/p>
&lt;p>“凡使用侮辱个别人的词句和作出败坏其名誉的判断的作品，均不得发表。” 好一个不得发表！对侮辱性的、败坏名誉的判断作出客观的规定，倒要比这种宽大为怀好得多。&lt;/p>
&lt;p>“凡怀疑个别人的或者〈意味多深长的 “或者” 啊！〉整个阶级的思想的作品，使用党派名称和进行类似人身攻击的作品，也同样不得发表。” 可见，划分等级、攻击整个阶级和使用党派名称的做法都是不能容忍的。可是，人为了要使一切东西对他来说都是存在的，他就必须像亚当那样给它们都起个名称；党派名称对政治性报刊来说则是一种必要的范畴，因为：&lt;/p>
&lt;blockquote>
&lt;p>　　“正如扎萨弗拉斯医生所说的，
　　为了能医好每一种疾病，
　　我们首先就得给它起一个名称。”
　　［注：维兰德《新阿马迪斯》第 2 部分第 17 首歌第 36 节。—— 编者注］&lt;/p>
&lt;/blockquote>
&lt;p>以上这一切都属于人身攻击。究竟应该怎么办呢？攻击个别人是不许可的；同样，攻击阶级、一般的东西和法人也都是不许可的。国家不愿意容忍 (这是正确的) 任何侮辱和任何人身攻击；可是，通过 “或者” 这个不显眼的词，一般的东西也归入人身攻击之列。通过 “或者” 加进了一般的东西，而通过一个小小的 “和” 字，我们又终于看到，原来这里所谈的只是人身攻击。但这就极其轻易地造成了如下的结果：既不准报刊对官员进行任何监督，也不准报刊对作为个别人组成的某一阶级而存在的机构进行任何监督。&lt;/p>
&lt;blockquote>
&lt;p>“如果书报检查能按照这些根据 1819 年 10 月 18 日书报检查法令的精神制定的指令来实行，这将为合乎礼貌的、公正的公众言论提供足够的活动场所；并能期望，这将引起人们对祖国利益的更大关注，从而增强他们的民族感情。”&lt;/p>
&lt;/blockquote>
&lt;p>根据这些指令办事，就能为合乎礼貌的，即书报检查认为是合乎礼貌的公众言论提供非常足够的活动场所，这一点我们是承认的；“活动场所”［注：德文 “spielraum” 既有 “活动场所” 的意思，又有 “游戏场所” 的意思。—— 编者注］这个词选得十分恰当，因为这种场所是为以玩把戏为乐事的报刊预备的。但公正的公众言论是否能得到这种活动场所，公正是否能找到容身之地，那就只有让有洞察力的读者去判断了。至于检查令所表示的期望，那么民族感情自然能够得到增强，就像送来的绳索会增强土耳其人的民族感情一样。可是，既谦逊又严肃的报刊究竟能不能引起人们对祖国利益的关注，这个问题我们交给报刊本身去解决。服用奎宁养不胖消瘦的报刊。不过，也许我们已把上述引文的意义看得太严重了。如果我们只把它看成是玫瑰花环上的一个钓钩，也许会更确切地猜中它的意义。可能在这个自由主义的钓钩上挂着一颗价格极其含糊的珠宝。让我们更仔细地来看一下。一切都要看上下文来决定。增强人们的民族感情并引起人们对祖国利益的关注，这是前面援引的重要条文所表达的期望，现在却悄悄地变成了一种隐藏着对我们那些可怜而虚弱的报纸施加新压迫的命令。&lt;/p>
&lt;blockquote>
&lt;p>“如果这样办，那就能指望：政治性著作和报刊也将更清楚地了解自己的使命，它们在获得更丰富的材料的同时也将学会使用比较适当的语调，今后将不屑于转载居心叵测或不明真相的记者在外国报纸上发表的那些内容贫乏的新闻，或去登载各种流言蜚语和人身攻击的议论，以投合读者的好奇心，—— 这是书报检查无疑应当采取措施加以制止的趋向。”&lt;/p>
&lt;/blockquote>
&lt;p>检查令指望，如果这样办，政治性著作和报刊将更清楚地了解自己的使命，如此等等。可是，更清楚的了解并不是通过发号施令就能做到的；这不过是一种期待中的成果，而希望只不过是希望而已。但检查令是非常讲求实际的，它不会满足于希望和善良的愿望。善意的检查令赋于报刊一种在今后改善自己状况的希望作为新的优待，但同时它却剥夺了报刊目前享有的权利。由于希望改善自身状况，报刊失去了在目前还享有的东西。它遭到了可怜的桑乔・潘萨的命运：侍医剥夺了他的全部食物，使他不致因消化不良而不能很好地去完成公爵交办的任务。　　&lt;/p>
&lt;p>同时，我们不应当放过机会，要号召普鲁士的作者学会使用这种合乎礼貌的笔法。上述引文的开头一句就这样指出：“如果这样办，那就能指望：……” 一系列的规定都取决于这一冒号，譬如说：政治性著作和报刊将更清楚地了解自己的使命，它们将学会使用比较适当的语调，如此等等，它们将不屑于转载外国报纸上发表的那些内容贫乏的通讯等等。所有这些规定都还是属于希望的范围以内的，“这是书报检查无疑应当采取措施加以制止的趋向”，可是，借破折号同上文连接起来的这一结束语，却免除了书报检查官去等待报刊得到预期改善的那种无聊任务，同时这一结束语还授权书报检查官毫不踌躇地删去不合他的口味的东西。截肢手术代替了内科治疗。&lt;/p>
&lt;blockquote>
&lt;p>“然而，为了接近这一目的，在批准新的报刊和新的编辑时务必谨慎行事，把报刊托付给完全正派可靠的人去主持，这些人的学术才能、地位与品格是他们的意图严正、思想方式忠诚的保证。”&lt;/p>
&lt;/blockquote>
&lt;p>在开始详细分析之前，我们先来谈谈总的看法。对新编辑即以后所有的编辑的批准，务必 “谨慎行事”，当然，这种批准是听凭国家当局即书报检查机关来决定的；而旧的书报检查法令至少在取得一定保证的情况下却把编辑的遴选交由出版者按自己的意愿处理：&lt;/p>
&lt;blockquote>
&lt;p>“第 9 条。书报检查总局有权向报纸出版者声明，如出版者提名的编辑不堪信任，应即另聘；或者，如出版者愿意留用原编辑，应为原编辑交纳由我们内阁的上述各部根据书报检查总局建议而规定的保证金。”&lt;/p>
&lt;/blockquote>
&lt;p>在新的书报检查令中则出现了一种完全不同的深奥，可以说出现了一种精神的浪漫主义。旧的书报检查法令要求外在的、实际的、因而也是由法律规定的保证金，只要有了这种保证金做保，就是不受欢迎的编辑也能得到任用；检查令则剥夺了报刊出版者本人的全部意志。根据检查令的规定，政府的先见之明、当局的异常谨慎和洞察能力，都应当同内在的、主观的、不由外界决定的品质有关。可是，如果浪漫主义的不确定性、敏感的内心世界和主观的激昂情绪都变成了下面这种纯外在的现象，即外在的偶然性已不再表现为它那种实际的确定性和局限性，而表现为某种奇妙的灵光、表现为某种虚构的深奥和壮观，那么，检查令也未必能逃脱这种浪漫主义的命运。　　&lt;/p>
&lt;p>报刊 (整个新闻业都属于这一范围) 的编辑应当由完全正派可靠的人担任。检查令首先指出 “学术才能” 是这种完全正派可靠的品格的保证。至于书报检查官究竟能不能具有对各种各样学术才能作出判断的学术才能，检查令对这一点没有提出丝毫怀疑。既然在普鲁士有这么一批政府所熟悉的万能天才 (每个城市里至少有一个书报检查官)，那么，这批博学多才的人物为什么不以作者的身分出现呢？要是这些因人数众多、更因博学多才而显得声势浩大的官员们一旦崛起，用自己的声势去压倒那些仅仅用某一种体裁写作、而且连用这种体裁写作的才能也未经官方验证的可怜作者们，那么，这就会比用书报检查更快地消灭报刊中的一切混乱现象。这些老谋深算的、像罗马的鹅一样只要嘎嘎叫几声就可以挽救卡皮托利诺山 [49] 的人们，为什么一声也不响呢？这些人实在太克制了。他们在学术界无声无臭，但是政府了解他们。　　&lt;/p>
&lt;p>可是，假如这些人真正是一些哪一个国家也找不出来的人才 (因为任何国家都没有见过完全由万能的天才和博学的才子组成的整个阶级)，那么，挑选这些人才的人所具有的天才又该比他们高出多少啊！为了证明在学术界无声无臭的官员们的确有万能的学术才能，这些挑选者又该具有多么神秘的法术啊！我们在这种博学多才的官僚的阶梯上登得越高，接触到的人物也就越令人惊奇。一个拥有一批完善的报刊作为支柱的国家，是不是值得把这些人才变成一批有缺点的报刊的看守人呢？使一种完善的东西沦为对付不完善的东西的工具，这样做是不是适当呢？　　&lt;/p>
&lt;p>你们所任命的这种书报检查官的人数越多，新闻出版界改进的机会就越少。你们把自己军队中身强力壮的汉子抽调出来，使他们成为不健康者的医生。　　&lt;/p>
&lt;p>只要你们像庞培那样跺一下脚，从政府的每一幢大厦中就会跳出一个全副武装的帕拉斯・雅典娜来。孱弱无力的报刊在官方报刊面前就会化为乌有。只要光明出现，黑暗就会消失。让你们的光放射出来吧，不要隐藏。我们不要有弊病的书报检查制度，因为甚至你们自己也不相信它是十全十美的，请给我们一种完善的报刊吧，这只要你们下一道命令就行了；几个世纪以来中国一直在提供这种报刊的范本。　　&lt;/p>
&lt;p>然而，使学术才能成为报刊作者唯一的和必要的条件，这正是精神的使命，而不是保护特权，又不是要求遵守惯例，难道不是这样吗？难道这种条件不正是事物本身的条件，而不是特定人物的条件吗？　　&lt;/p>
&lt;p>遗憾的是，书报检查令竟打断了我们对它的称颂。除了学术才能这种保证之外，它还提出了地位和品格方面的保证。地位和品格！　　&lt;/p>
&lt;p>品格这样紧跟着地位，就好像是从地位中派生出来的一样。因此，我们首先就从地位谈起。地位被紧紧地夹在学术才能和品格之间，使人几乎要怀疑这种做法的居心是否纯正。　　&lt;/p>
&lt;p>学术才能是一般要求，这是多么明显的自由主义啊！地位是特殊的要求，这是多么明显的非自由主义啊！把学术才能同地位扯在一起，这又是多么虚伪的自由主义啊！既然学术才能和品格都是极其不确定的东西，相反，地位却是一种极其确定的东西；那么，我们为什么不可以得出结论说，根据必然的逻辑规律，不确定的东西要依赖确定的东西，并从它那里得到支持和内容呢？由此可见，如果书报检查官在解释检查令时说，地位是学术才能和品格借以在社会中表现出来的外在形式，尤其因为书报检查官本身的职位就保证他们的这种观点就是国家的观点，难道这样一来他们就算是犯了一个严重的错误吗？而不这样解释，至少下面的一些问题就根本无法理解：为什么学术才能和品格还不能作为作者的充分的保证呢？为什么地位是第三个必要的保证呢？可是，如果书报检查官陷入了自相矛盾的境地，如果这些保证之间很少有联系，或者甚至从来互不相干，那他们又应该怎样进行选择呢？可是，选择是少不了的，因为总得有人来担任报纸和杂志的编辑工作啊！书报检查官可能认为，没有地位保障的学术才能和品格都是成问题的，因为它们都是不确定的。而且，学术才能和品格离开地位而单独存在，这当然会使他们感到奇怪。相反，要是有了地位，书报检查官是不是还可以对品格和学问表示怀疑呢？在这种场合，书报检查官更多的是相信他们自己，而不是国家的判断；在相反的场合，他们更多的也是相信作者，而不是国家。难道书报检查官会这样不识事体、居心不良吗？当然，不能这样设想，而且，肯定谁也没有这样设想。因为遇到疑难时，地位是决定性的标准，所以总的说来，它也就是绝对地起决定作用的东西。　　&lt;/p>
&lt;p>因此，如果说过去检查令是由于自己的正统信仰而同书报检查法令发生冲突，那么现在它则是由于自己的浪漫主义而同书报检查法令发生冲突，因为浪漫主义同时始终是带有倾向的诗歌。保证金这种实际的真正保证变成了一种观念上的保证，而这种观念上的保证又变成了一种具有神奇的虚构的意义的、完全现实的个人的地位。保证的意义也起了同样的变化。现在已不是由出版者来选择那种需要他向当局担保的编辑，而是由当局替他选择向当局本身担保的编辑了。旧法令关心的是由出版者的保证金作保的编辑的工作；新检查令则不谈编辑的工作，而只谈编辑的身分；它要求的是体现为身分的特定的个性，而出版者的保证金就应当使它获得这种个性。新的检查令像旧的法令一样，也具有外在的性质。不过，旧的法令按照自己的本性宣布了某种实际上确定的东西并对它加以限制，而检查令则赋予纯粹的偶然性以空想的精神，并以普遍性的激情宣布了某种纯粹个人的东西。　　&lt;/p>
&lt;p>但是，如果说浪漫主义的检查令在编辑问题上使最外在的确定性具有最亲切的不确定性的语调，那么，它在书报检查官问题上就使最暧昧的不确定性具有法律上的确定性的语调。&lt;/p>
&lt;blockquote>
&lt;p>“在任命书报检查官时也应采取同样谨慎的态度，务使书报检查官一职确由那些经证明思想可靠和能力合格的人去担任，即由完全无愧于该职务所要求的那种光荣的信任的人去担任；这种人既慎重，又有洞察力，他们善于区别事物的形式与本质，当作品的内容与倾向本身已证实没有必要加以怀疑时，他们又善于十分得体地抛开怀疑。”&lt;/p>
&lt;/blockquote>
&lt;p>在这里，不再谈向作者要求的那种地位和品格，而是提出经证明思想可靠，因为地位本来就有了。然而，更值得注意的是：向作者要求的是学术才能，而向书报检查官要求的则是不附加任何规定的能力。除了政治问题以外，全部贯串着理性主义精神的旧法令，在第 3 条中要求的是 “有学术修养的”、甚至是 “开明的” 书报检查官。在检查令中，这两个附加语都不见了，同时，它向书报检查官要求的并不是如人们所理解的那种特定的、已发展并变成了实际能力的作者的才能，而是才能的萌芽即一般的能力。由此可见，才能的萌芽对现实的才能应起书报检查官的作用，虽然按照事物的本性来说，它们之间的关系分明应该是颠倒过来的。最后，我们在这里顺便提一下，对书报检查官能力的实际内容并没有更详细的规定，因而这种能力的性质当然是模棱两可的。&lt;/p>
&lt;p>其次，书报检查官一职应由 “完全无愧于该职务所要求的那种光荣的信任” 的人去担任。这种规定强调必须选择受人信任的人去担任书报检查官的职务，即认为这种人要完全无愧于 (将会无愧于？) 别人寄予的那种光荣的信任 (而且是完全的信任)；关于这种累赘而虚伪的规定，就用不着详细分析了。&lt;/p>
&lt;p>最后，书报检查官应当是这样的人：“这种人既慎重，又有洞察力，他们善于区别事物的形式与本质，当作品的内容与倾向本身已证实没有必要加以怀疑时，他们又善于十分得体地抛开怀疑。”&lt;/p>
&lt;p>可是恰恰相反，检查令在前面却是这样规定的：&lt;/p>
&lt;blockquote>
&lt;p>“与此相适应〈即与追究倾向相适应〉，书报检查官也必须特别注意准备出版的作品的形式和语调，一旦发现作品因感情冲动、激烈和狂妄而带有有害的倾向，应不准其印行。”&lt;/p>
&lt;/blockquote>
&lt;p>这样一来，书报检查官就必须时而根据形式去判断倾向，时而又根据倾向去判断形式。如果说作为检查书报标准的内容以前就已经完全消失，那么现在形式也正在消失中。只要倾向是好的，形式的缺陷就无关紧要了。即使作品并不十分严肃和谦逊，即使它们看起来感情冲动、激烈和狂妄，也没有关系，—— 谁会害怕这种粗糙的外表呢？必须善于把形式和本质区别开来。因此，规定的任何外表必然都被抛弃，而检查令最终必然是完全陷入自相矛盾的境地，因为用以辨别倾向的一切东西，反倒要由倾向来确定，而且反倒要用倾向来辨别。爱国者的激烈就是一种神圣的热情，他们的感情冲动就是一种恋人的激情，他们的狂妄就是一种自我牺牲的忠诚，这种忠诚是无限的，因而不可能是温和的。　　&lt;/p>
&lt;p>所有的客观标准都已消失了，人身关系成了关键，能称之为保证的只有书报检查官的得体的处事方式。那么书报检查官能违反什么呢？能违反得体的处事方式。而处事不得体并不是犯罪。作者的什么东西遭到了威胁呢？他们的生存。哪一个国家曾经让个别官员的得体的处事方式来决定整个阶级的生存呢？　　&lt;/p>
&lt;p>我再说一遍：所有的客观标准都已消失了。从作者方面来说，倾向是向他们要求的和给他们规定的最后内容。倾向作为一种无定形的意见，在这里表现为客体；倾向作为一种主体，作为关于意见的意见，则被归结为书报检查官的得体的处事方式，而且是他们的唯一规定。　　&lt;/p>
&lt;p>可是，如果书报检查官的专横 (承认独断意见的权利就是承认专横的权利) 是被巧妙地伪装成客观规定的逻辑结论，那么检查令则完全有意识地表现了无条件享有信任的总督府的专横，而这种对总督的信任就是报刊的最后保证。由此可见，书报检查的一般本质是建立在警察国家对它的官员抱有的那种虚幻而高傲的观念之上的。公众的智慧和良好愿望被认为甚至连最简单的事情也办不成，而官员们则被认为是无所不能的。　　&lt;/p>
&lt;p>这一根本缺陷贯穿在我们的一切制度之中。譬如在刑事诉讼中，法官、原告和辩护人都集中在一个人身上。这种集中是同心理学的全部规律相矛盾的。可是，官员是超乎心理学规律之上的，而公众则是处于这种规律之下的。不过，有缺陷的国家原则还是情有可原的，但当它不够正直因而表现得不彻底时，那就是不可原谅的了。官员的责任想必比公众的责任大得无可比拟，正如官员的地位比公众高得无可比拟一样。正是在唯有彻底性才能证明原则的正确并使它在自己的范围内具有法的原则的地方，原则被抛弃了，也正是在这里，采用了截然相反的原则。　　&lt;/p>
&lt;p>书报检查官也就是原告、辩护人和法官三位一体的人。书报检查官被委任去管理精神，然而他是不负责任的。　　&lt;/p>
&lt;p>假如书报检查受普通法庭的支配 (诚然，这在还没有客观的书报检查法以前是不可能的)，那么它就只可能有暂时忠诚的性质。可是，最恶劣的手段却莫过于把书报检查又交给书报检查机关去评判，例如，把它又交给某一个总督或最高书报检查委员会去评判。　　&lt;/p>
&lt;p>我们在报刊和书报检查的关系方面所谈的一切，同时也就说明了书报检查同最高书报检查机关的关系，说明了作者同最高书报检查官的关系，虽然在这里也插入了一个中间环节。但这是同样的一种关系，只是处在较高阶段上而已。要使事物保持原状，同时又企图用更换人员的办法使它具有另一种本质，这真是荒谬绝伦的做法。如果一个实行高压的国家想成为忠诚的国家，那它就会自己取消自己；那样一来，每一级都要求实行同样的压制和同样的反压制。最高书报检查机关也必定会受到检查。为了不致陷入这种恶性循环，人们就决定采取不忠诚的态度，于是，在第三级或第九十九级就会发生不法行为。由于官僚国家没有清楚地认识到这一点，所以它力图要把不法行为的范围至少抬到人们看不见的高度，这样就以为不法行为已经消失了。　　&lt;/p>
&lt;p>整治书报检查制度的真正而根本的办法，就是废除书报检查制度，因为这种制度本身是恶劣的，可是各种制度却比人更有力量。我们的意见可能是正确的，也可能是不正确的，不过无论如何，新的检查令终究会使普鲁士的作者要么获得更多的现实的自由，要么获得更多的观念的自由，也就是获得更多的意识。　　&lt;/p>
&lt;p>当你能够想你愿意想的东西，并且能够把你所想的东西说出来的时候，这是非常幸福的时候。&lt;/p>
&lt;p>卡・马克思写于 1842 年 2 月初 —2 月 10 日
第一次用德文发表于《德国现代哲学和政论界轶文集》1843 年版第 1 卷
署名：莱茵省一居民
原文是德文
中文根据《马克思恩格斯全集》1975 年历史考证版第 1 部分　第 1 卷翻译&lt;/p>
&lt;hr>
&lt;p>&lt;strong>注释：&lt;/strong>&lt;/p>
&lt;p>马克思可能于 1842 年 1 月底或 2 月初着手写这篇文章。1842 年 2 月 10 日马克思把它寄给阿・卢格，请他尽快登在《德国年鉴》上。卢格考虑到这篇文章根本不可能送交检查机关，建议把它送到瑞士去出版，经马克思同意后，该文于 1843 年 2 月在瑞士出版的《德国现代哲学和政论界轶文集》第 1 卷上发表。由卢格出版的这一文集 (两卷集) 除了马克思这篇文章外，还收进了路・费尔巴哈、阿・卢格、弗・科本、布・鲍威尔等人的文章。1843 年 3 月 26 日和 28 日《曼海姆晚报》第 71、72 号以《追究倾向的书报检查》为题转载了这篇文章的部分内容。1851 年，这篇文章作为首篇收入海・贝克尔在科隆出版的《卡尔・马克思文集》第 1 分册。该书出版后很快就遭到普鲁士政府的查禁。——107。&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>新的书报检查法令是 1841 年 12 月 10 日由普鲁士国王弗里德里希 - 威廉四世下令起草、12 月 24 日颁布的，由负责书报检查的内务与警务大臣，宗教事务、教育与卫生大臣以及外交大臣三人联名签署，于 1841 年 12 月 27 日首次在政府通报上公布。1842 年 1 月上半月，普鲁士各家报纸相继登载了这一法令。——107、139、949。 &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>1819 年 10 月 18 日书报检查法令即《关于应如何根据德意志联邦今年 9 月 20 日决议实行印刷品的书报检查的决定。自 1819 年 10 月 18 日起为期五年》，见《普鲁士王国法令汇编》1819 年柏林版第 20 号第 224—232 页。——107、379。 &lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3" role="doc-endnote">
&lt;p>马克思引用的这段文字可能出自《就实行书报检查一事给王国各总督府的通令。1841 年 12 月 24 日》，见 1841 年 12 月 27 日《普鲁士王国内务管理内阁通报》(柏林) 内务部办公厅编，第 2 年卷第 15 期第 332—333 页。——107、380。 &lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4" role="doc-endnote">
&lt;p>1819 年书报检查法令第十六条第二款规定：“如果某一作品的内容本身是违法的，那么除此以外还要由法庭作出合乎法律的惩罚。在此，我们申明，如果在国内对邦的法律和命令进行放肆而无礼的指责和嘲讽，那就不仅仅是引起不快和不满的问题，而且由于发表这种违法的言论本身应判处六个月至两年监狱监禁或要塞监禁。”(《普鲁士王国法令汇编》1819 年柏林版第 20 号第 232 页)。——110。 &lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5" role="doc-endnote">
&lt;p>“风格如其人” 是法国自然科学家乔・路・勒・布丰在 1753 年 8 月 25 日向法国科学院发表就职演说时说的一句名言。见布丰的《风格论》。——111。 &lt;a href="#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:6" role="doc-endnote">
&lt;p>“除了乏味的体裁之外，其余的一切体裁都是好的。” 这句话出自伏尔泰《浪子》一书的前言。体裁一词的法文是 “genre”，既有 “类型” 的意思，又有 “体裁” 的意思。伏尔泰本来是在前一种意思上使用这个词的。——113。 &lt;a href="#fnref:6" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:7" role="doc-endnote">
&lt;p>联邦议会是根据 1815 年维也纳会议决议成立的德意志联邦的中央机关。联邦议会由德意志各邦的代表组成，会址设在美因河畔法兰克福，由奥地利代表担任主席。这一机关并不是履行中央政府职能的，它是德意志各邦政府实行反动政策的工具。在 1866 年普奥战争时期，联邦议会和德意志联邦一起不复存在了。——114。 &lt;a href="#fnref:7" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:8" role="doc-endnote">
&lt;p>联邦条例即《德意志联邦条例。1815 年 6 月 8 日》。根据这一条例，34 个德意志邦在形式上组成了德意志联邦，但是并没有消除德意志的分裂状态，各邦的独立性及德意志诸侯的政治权力仍然得到承认。联邦条例第 18 条曾许诺联邦议会在举行首届会议时研究 “制定有关新闻出版自由的统一规定”，但是这一许诺只是一纸空文。——114。 &lt;a href="#fnref:8" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:9" role="doc-endnote">
&lt;p>德意志联邦是 1815 年 6 月 8 日在维也纳会议上成立的德意志各邦的联盟，最初包括 34 个邦和 4 个自由市。联邦既没有统一的军队，也没有财政经费，保存了封建割据的一切基本特点；德意志联邦在 1848—1849 年革命时期瓦解，1850 年又重新恢复。在 1866 年普奥战争期间彻底解体，后来由北德意志联邦代替。——115、428。 &lt;a href="#fnref:9" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:10" role="doc-endnote">
&lt;p>盖有封印的上谕 (1ettres　de　cachet) 是指以法国国王名义或受法国国王委托拟定并盖有封印的公文，凭此上谕可以不经判决就把人投入巴士底狱或其他国家监狱，甚至驱逐出境。自路易十四以来这种上谕主要被用来逮捕或放逐政敌。1789 年 6 月 23 日，法国国民议会通过法令废除了这种盖有封印的上谕。——116。 &lt;a href="#fnref:10" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:11" role="doc-endnote">
&lt;p>指普鲁士官员受国王弗里德里希 - 威廉四世的委托同罗马教皇进行的谈判，其目的在于调解普鲁士政府和天主教教会之间的冲突。这一通常被称作 “教会纠纷” 或 “科隆纠纷” 的冲突是由天主教徒和新教教徒通婚所生子女的宗教信仰问题而引起的。1837 年 11 月科隆大主教因拒不服从弗里德里希 - 威廉三世的要求，违背普鲁士国家法律，许诺这类子女信奉天主教而以叛国罪被捕，冲突就此开始。此后，天主教教会与普鲁士新教国家之间的这场争执持续了数年之久，直到 1842 年 5 月弗里德里希 - 威廉四世统治时期，经过谈判才以普鲁士政府向天主教教会投降而宣告结束。马克思在 1842 年 7 月 9 日致卢格的信中将这一结局称为 “普鲁士在全世界面前亲吻教皇的鞋子”。——118、240。 &lt;a href="#fnref:11" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>转载 | 共产主义者对家庭和两性关系应该持什么态度</title><link>/post/%E8%BD%AC%E8%BD%BD-%E5%85%B1%E4%BA%A7%E4%B8%BB%E4%B9%89%E8%80%85%E5%AF%B9%E5%AE%B6%E5%BA%AD%E5%92%8C%E4%B8%A4%E6%80%A7%E5%85%B3%E7%B3%BB%E5%BA%94%E8%AF%A5%E6%8C%81%E4%BB%80%E4%B9%88%E6%80%81%E5%BA%A6.de/</link><pubDate>Mon, 31 Dec 2018 00:00:00 +0000</pubDate><guid>/post/%E8%BD%AC%E8%BD%BD-%E5%85%B1%E4%BA%A7%E4%B8%BB%E4%B9%89%E8%80%85%E5%AF%B9%E5%AE%B6%E5%BA%AD%E5%92%8C%E4%B8%A4%E6%80%A7%E5%85%B3%E7%B3%BB%E5%BA%94%E8%AF%A5%E6%8C%81%E4%BB%80%E4%B9%88%E6%80%81%E5%BA%A6.de/</guid><description>&lt;p>早在 1847 年，恩格斯在《共产主义原理》中就专门驳斥过共产主义 “公妻制” 的无聊谎言：&lt;/p>
&lt;blockquote>
&lt;p>共产主义社会制度将使两性关系成为仅仅和当事人有关而社会无须干预的纯粹私人关系。共产主义社会制度之所以能实现这一点，是由于这种社会制度将废除私有制并将由社会教育儿童，从而将消灭现代婚姻的两种基础，即私有制所产生的妻子依赖丈夫、孩子依赖父母。这也是对道貌岸然的市侩关于共产主义公妻制的号叫的回答。公妻制完全是资产阶级社会的现象，现在的卖淫就是公妻制的充分表现。卖淫是以私有制为基础的，它将随著私有制的消失而消失。因此，共产主义组织并不实行公妻制，正好相反，它要消灭公妻制。&lt;/p>
&lt;/blockquote>
&lt;p>在《共产党宣言》中，马克思和恩格斯也同样揭露了资产阶级 “共产共妻” 叫嚣的虚伪面目：&lt;/p>
&lt;blockquote>
&lt;p>但是，你们共产党人是要实行公妻制的啊，—— 整个资产阶级异口同声地向我们这样叫喊。&lt;/p>
&lt;p>资产者是把自己的妻子看作单纯的生产工具的。他们听说生产工具将要公共使用，自然就不能不想到妇女也会遭到同样的命运。&lt;/p>
&lt;p>他们想也没有想到，问题正在于使妇女不再处于单纯生产工具的地位。&lt;/p>
&lt;p>其实，我们的资产者装得道貌岸然，对所谓的共产党人的正式公妻制表示惊讶，那是再可笑不过了。公妻制无需共产党人来实行，它差不多是一向就有的。&lt;/p>
&lt;p>我们的资产者不以他们的无产者的妻子和女儿受他们支配为满足，正式的卖淫更不必说了，他们还以互相诱奸妻子为最大的享乐。&lt;/p>
&lt;p>资产阶级的婚姻实际上是公妻制。人们至多只能责备共产党人，说他们想用正式的、公开的公妻制来代替伪善地掩蔽着的公妻制。其实，不言而喻，随着现在的生产关系的消灭，从这种关系中产生的公妻制，即正式的和非正式的卖淫，也就消失了。&lt;/p>
&lt;/blockquote>
&lt;p>随着对人类早期历史认识的深入，恩格斯在写于 1884 年的《家庭、私有制和国家的起源》一书中，最终完成了历史唯物主义的家庭观。&lt;/p>
&lt;p>恩格斯指出，家庭的形式在人类历史上是不断变化和发展的。两性之间的关系，从相对固定的不同群体（氏族）之间的男女交换关系，逐渐向相对固定的个体配偶形式发展。恩格斯写道：&lt;/p>
&lt;blockquote>
&lt;p>要使对偶制家庭进一步发展为牢固的专偶制，需要有别的原因，这种原因与我们已经看到的一直起着作用的那些原因不同。在成对配偶制中，群已经减缩到它的最后单位，仅由两个原子组成的分子，即一男和一女。自然选择已经通过日益缩小婚姻共同体的范围而完成了自己的使命；在这一方面，它再也没有事可做了。因此，如果没有新的、社会的动力发生作用，那么，从成对配偶制中就没有任何根据产生新的家庭形式了。但是，这种动力开始发生作用了。&lt;/p>
&lt;/blockquote>
&lt;p>这种动力就是私有制。男女间的分工使男性成为私有财产的主要拥有者，私有财产的继承促使父权制的确立，使女性从属于男性，&amp;ldquo;被贬低，被奴役，变成丈夫淫欲的奴隶，变成生孩子的简单工具&amp;rdquo;(恩格斯）。马克思说：&lt;/p>
&lt;blockquote>
&lt;p>现代家庭在萌芽时，不仅包含着奴隶制（servitus），而且也包含着农奴制，因为它从一开始就是同田间耕作的劳役有关的。它以&lt;strong>缩影的形式&lt;/strong>包含了一切后来在社会及其国家中广泛发展起来的对立。&lt;/p>
&lt;/blockquote>
&lt;p>恩格斯对此做了更加详细的阐述：&lt;/p>
&lt;blockquote>
&lt;p>一夫一妻制是不以自然条件为基础，而以经济条件为基础，即以私有制对原始的自然长成的公有制的胜利为基础的第一个家庭形式。丈夫在家庭中居于统治地位，以及生育只是他自己的并且应继承他的财产的子女，—— 这就是希腊人坦率宣布的个体婚制的唯一目的。在其他方面，个体婚制对希腊人说来就是一种负担，是一种必须履行的对神、对国家和对自己祖先的义务。在雅典，法律不仅规定必须结婚，而且规定丈夫必须履行一定的最低限度的所谓夫妇义务。&lt;/p>
&lt;p>在历史上出现的最初的阶级对立，是同个体婚制下的夫妻间的对抗的发展同时发生的，而最初的阶级压迫是同男性对女性的奴役同时发生的。个体婚制是一个伟大的历史的进步，但同时它同奴隶制和私有财富一起，却开辟了一个一直继续到今天的时代，在这个时代中，任何进步同时也是相对的退步，一些人的幸福和发展是通过另一些人的痛苦和受压抑而实现的。&lt;/p>
&lt;/blockquote>
&lt;p>可见，马克思主义对家庭所持的批判态度，扎根于对私有制的批判态度之上。马克思主义认为，私有制下的 “一夫一妻制” 家庭，从而这种家庭体现出来的男性对女性的支配，是人类社会从公有制发展到私有制的必然结果，而不是人的自然属性造成的。因此，对家庭的批判，不是对家庭这个概念的抽象的批判，不是对历史上各种形式的家庭的无区别的批判，而是对建立在私有制基础上的、两性不平等的家庭形式的批判。而两性间的不平等，不是根源于自然选择，而是人类社会的产物。&lt;/p>
&lt;p>因此，批判的对象不是 “一夫一妻”，也不是两性中的任何一性（两性之外的其他性别忽略不计），而是这种以缩影的形式包含了社会对立的家庭形式。这种家庭形式建立在私有制的基础上，也必将随着私有制的灭亡而灭亡。因此，对于共产主义者来说，对家庭的批判只意味着一件事：消灭私有制。&lt;/p>
&lt;p>这正是共产主义者与其他形形色色的左派以及女权的根本区别。是反对私有制，还是反对男性；是消灭私有制，还是瓦解一夫一妻制；是改造家庭，还是消灭家庭，—— 这是共产主义者与不主张消灭私有制的所谓左派的原则性的区别。&lt;/p>
&lt;p>恩格斯指出：&lt;/p>
&lt;blockquote>
&lt;p>我们现在正在走向一种社会变革，那时，一夫一妻制的迄今存在的经济基础，以及它的补充物即卖淫的基础，不可避免地都要消失。一夫一妻制的产生是由于，大量财富集中于一人之手，并且是男子之手，而且这种财富必须传给这一男子的子女，而不是传给其他任何人的子女。为此，就需要妻子方面的一夫一妻制，而不是丈夫方面的一夫一妻制，所以这种妻子方面的一夫一妻制根本没有妨碍丈夫的公开的或秘密的多偶制。但是，行将到来的社会变革至少将把绝大部分耐久的、可继承的财富 —— 生产资料 —— 变为社会所有，从而把这一切传授遗产的关切减少到最低限度。可是，既然一夫一妻制是由于经济的原因而产生的，那末当这种原因消失的时候，它是不是也要消失呢？&lt;/p>
&lt;p>可以不无理由地回答：它不仅不会消失，而且相反地，只有那时它才能十足地实现。因为随着生产资料转归社会所有，雇佣劳动、无产阶级、从而一定数量的 —— 用统计方法可以计算出来的 —— 妇女为金钱而献身的必要性，也要消失了。卖淫将要消失，而一夫一妻制不仅不会终止其存在，而且最后对于男子也将成为现实。&lt;/p>
&lt;/blockquote>
&lt;p>正是在这个问题上，女权运动暴露出了反社会的一面。很多女权分子把资本的统治与男性的统治直接划等号，进一步把反对资本等同于反对男性（男权），把反对资本主义等同于反对家庭，把消灭资本主义等同于消灭家庭。这种荒诞的观念，建立在小资产阶级狂热而鼠目寸光的阶级本性基础上。&lt;/p>
&lt;p>而且，正是在资本主义制度下，才第一次为男女平等创造了条件。从人类社会进入文明时代以来，女性从来没有获得过在资本主义制度下获得的那么多权利，而且男女平等，在形式上、在意识形态上，第一次为社会普遍接受。这是资本主义的重大历史功绩。&lt;/p>
&lt;p>在共产主义社会，一夫一妻制仍然存在，而且真正成为男女两性平等的家庭关系。这是因为，消灭私有制后，感情因素取代财产因素，成为两性关系的唯一纽带。而在感情基础之上的两性关系，是牢固的而不是松散的，是长久的而不是临时的。在这一点上，马克思主义的创始人与现代主张身体政治的女权运动是完全格格不入的。看了下边的恩格斯的话，人们就会理解，为什么列宁痛斥 “杯水主义” 了。&lt;/p>
&lt;blockquote>
&lt;p>现代的性爱，同单纯的性欲，同古代的爱，是根本不同的。第一，它是以所爱者的互爱为前提的；在这方面，妇女处于同男子平等的地位，而在古代爱的时代，决不是一向都征求妇女同意的。第二，性爱常常达到这样强烈和持久的程度，如果不能结合和彼此分离，对双方来说即使不是一个最大的不幸，也是一个大不幸；仅仅为了能彼此结合，双方甘冒很大的危险，直至拿生命作孤注，而这种事情在古代充其量只是在通奸的场合才会发生。最后，对于性交关系的评价，产生了一种新的道德标准，不仅要问：它是结婚的还是私通的，而且要问：是不是由于爱情，由于相互的爱而发生的？&lt;/p>
&lt;p>既然彼此相爱是夫妇的义务，难道相爱者彼此结婚而不是同任何别人结婚不同样也是他们的义务吗？&lt;/p>
&lt;p>结婚的充分自由，只有在消灭了资本主义生产和它所造成的财产关系，从而把今日对选择配偶还有巨大影响的一切派生的经济考虑消除以后，才能普遍实现。到那时候，除了相互的爱慕以外，就再也不会有别的动机了。&lt;/p>
&lt;p>既然性爱按其本性来说就是排他的，—— 虽然这种排他性在今日只是对妇女才完全有效，—— 那末，以性爱为基础的婚姻，按其本性来说就是个体婚姻。&lt;/p>
&lt;p>这样，我们现在关于资本主义生产行将消灭以后的两性关系的秩序所能推想的，主要是否定性质的，大都限于将要消失的东西。但是，取而代之的将是什么呢？这要在新的一代成长起来的时候才能确定：这一代男子一生中将永远不会用金钱或其他社会权力手段去买得妇女的献身；而妇女除了真正的爱情以外，也永远不会再出于其他某种考虑而委身于男子，或者由于担心经济后果而拒绝委身于她所爱的男子。这样的人们一经出现，对于今日人们认为他们应该做的一切，他们都将不去理会，他们自己将知道他们应该怎样行动，他们自己将造成他们的与此相适应的关于各人行为的社会舆论 —— 如此而已。&lt;/p>
&lt;/blockquote>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>如何用hugo+GitHub建立自己的博客</title><link>/post/%E5%A6%82%E4%BD%95%E7%94%A8hugo+github%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</link><pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate><guid>/post/%E5%A6%82%E4%BD%95%E7%94%A8hugo+github%E5%BB%BA%E7%AB%8B%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</guid><description>&lt;p>这篇讲讲如何用&lt;code>hugo+GitHub&lt;/code>建立自己的博客。&lt;/p>
&lt;p>本人的博客就是用&lt;code>hugo+GitHub&lt;/code>搭建。&lt;/p>
&lt;p>因为经过各种测试，&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p></description></item><item><title>正常人学编程 前言</title><link>/post/section000-%E6%AD%A3%E5%B8%B8%E4%BA%BA%E5%AD%A6%E7%BC%96%E7%A8%8B-%E5%89%8D%E8%A8%80/</link><pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate><guid>/post/section000-%E6%AD%A3%E5%B8%B8%E4%BA%BA%E5%AD%A6%E7%BC%96%E7%A8%8B-%E5%89%8D%E8%A8%80/</guid><description>&lt;p>现有的编程课程，书本，教程，对非计算机专业、转行的初学者而言，都非常糟糕。&lt;/p>
&lt;ol>
&lt;li>抽象得太抽象浓缩，看完无法迁移。伪代码无法实现转化为实际代码。&lt;/li>
&lt;li>具体的手册太具体，一大堆功能、函数、方法交给你。为了教会你，用的都是彼此分离不同属没有关联的例子。只是为了讲这个方法的用法而用，实际使用的时候依然用不好。只有正确的用法，不指出常见的错误方法。典型的就是 Python 著名的库 Pandas 的作者写的《Python数据分析》、《鸟叔的Linux私房菜》。很多编程入门书，真的就只是入门书。对于有计算机编程基础的人员，入了门，很快就可以开始做项目。但是对于从零开始的人员，则需要经过痛苦的摸索阶段。&lt;/li>
&lt;li>另外一些书则是介绍一些奇淫巧技，对于初学者毫无帮助。&lt;/li>
&lt;li>还有的书因为出版的缘故，写得极其精简简略，生怕多重复强调一点。实际上，就像复习是最好的学习，而不断的重复也是让初学者更好入门的招数。不要怕啰嗦，只要能把道理讲清楚，特别是对于网络发布的情况。反而应该反对过度的凝练。传统的教育方法是书本凝练，课堂详细展开。但是对于自学、转行的人员，无法达到这样的条件。&lt;/li>
&lt;li>还有就是对于零基础的人员，缺乏足够的知识组合。其实学习本身应该是融会贯通的，就像在学校，不会一学期就学这一门，学完这门才学另一门，都是同步进行。而如果课程设置合理，完全可以刚在这门课学到的知识，就用在了下一门的基础上。形成良好的闭环和循环增强，巩固了旧知识，学会了新知识。&lt;/li>
&lt;li>刷LeetCode怎么刷？这块其实也是一个痛点。我最开始刷LeetCode的时候，想得最多的就是，我写的这个解法，它是怎么在后台被测试的？如何更好的构建类？而一直没有一个合格的人告诉我是如何运作的，似乎所有的人都默认为大家都知道了。QTMD。&lt;/li>
&lt;li>也就是说，目前存在一个 huge 的 gap 横亘在初入门和熟练资深者之间，导致初学者长期卡在初学者阶段，无法良好的进入下一阶层。这个问题需要改变。这也是我们目前现代化教育的弊端：
&lt;ol>
&lt;li>学生学不会。&lt;/li>
&lt;li>学生学会了不会用。&lt;/li>
&lt;li>学生用了但是不是应该的用法。&lt;/li>
&lt;/ol>
&lt;/li>
&lt;/ol>
&lt;p>我们的教育也是出大问题了。&lt;/p>
&lt;p>现在市面上有不少号称针对初学者的教程，比如：《一百天学会python》《零基础入门Linux》，但实际上一点都不实用。要么是太简略，该教的必备知识没教，要么是太简陋，只不过是把官方文档堆了出来，要么就是太庞杂，一坨东西呼人脸上，无所适从。&lt;/p>
&lt;p>所以我想，自己试着一点点，把基础知识和引用知识，捣碎了，结合具体事例，反复灌输，传授出来。&lt;/p>
&lt;p>太基础的我也不讲，因为网上已经有很多很好的。&lt;/p>
&lt;p>我的大纲设计是：&lt;/p>
&lt;ol>
&lt;li>这个知识点，到底是什么，是来解决什么问题的。&lt;/li>
&lt;li>这个知识点，在python下是怎么做，在Perl、Java、kotlin、Go、C/C++ 下又分别是怎么做。&lt;/li>
&lt;li>配合实例，怎么把这个知识用起来。&lt;/li>
&lt;/ol>
&lt;p>希望能够成功。&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>转载 | Linux 系统和 Shell 编程问题集</title><link>/post/%E8%BD%AC%E8%BD%BD-linux-%E7%B3%BB%E7%BB%9F%E5%92%8C-shell-%E7%BC%96%E7%A8%8B%E9%97%AE%E9%A2%98%E9%9B%86/</link><pubDate>Sun, 30 Dec 2018 00:00:00 +0000</pubDate><guid>/post/%E8%BD%AC%E8%BD%BD-linux-%E7%B3%BB%E7%BB%9F%E5%92%8C-shell-%E7%BC%96%E7%A8%8B%E9%97%AE%E9%A2%98%E9%9B%86/</guid><description>&lt;p>本文来源：&lt;a href="https://zhuanlan.zhihu.com/p/62543626">知乎专栏&lt;/a>&lt;/p>
&lt;h2 id="简答题">简答题&lt;/h2>
&lt;h3 id="1-计算机硬件和软件的关系是什么">1. 计算机硬件和软件的关系是什么？&lt;/h3>
&lt;p>硬件是计算机系统的物理组成部分，即计算机系统中的各种物理装置，包括控制器、运算器、内存储器、I/O设备（如硬盘、键盘）以及外存储器等。它是计算机系统的物质基础。&lt;/p>
&lt;p>软件系统就是所有程序、数据和相关文件的集合。从狭义的角度上讲，软件是指计算机运行所需的各种程序。没有硬件，谈不上应用计算机。但是，光有硬件而没有软件，计算机也不能工作。（1）硬件和软件互相依存；（2）硬件和软件无严格界线；（3）硬件和软件协同发展。&lt;/p>
&lt;p>计算机软件和硬件密不可分，协调工作。软件的运行通过硬件呈现给用户，用户通过硬件进行开发及修改软件，二者相互依存，缺一不可。离开了硬件的软件什么也做不了，离开软件的硬件也只是摆设。对于计算机而言，软件像是灵魂，硬件像是肉体。二者相互依存。同时二者也相互制约。在计算机的早期，硬件很薄弱，限制了计算机的发展；如今，硬件配置很多都很高了，软件的优化对提高计算机的性能十分关键。以手机为例，早期的智能机内存通常只有512MB，提高手机内存是解决手机卡顿的关键因素，而如今，很多手机的内存已达10GB甚至12GB，超过了很多电脑的内存，但是很多时候仍然卡顿，一个重要的原因是软件优化不够好（很多程序设计者在面对大内存时，以不将内存优化作为程序设计的重点，于是出现了你有多少硬件资源，我软件就要占用多少硬件资源），占用了大量的硬件资源。&lt;/p>
&lt;p>综上，硬件和软件是计算机重要组成部分，缺一不可。计算机性能的提升即依赖于硬件配置的提高，也依赖于软件水平的优化。&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.sophia.org/tutorials/the-relationship-between-hardware-and-software">https://www.sophia.org/tutorials/the-relationship-between-hardware-and-software&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.quora.com/What-is-the-relation-between-hardware-and-software-2">https://www.quora.com/What-is-the-relation-between-hardware-and-software-2&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="2-常见的-linux-发行版本有哪些它们的主要差别在什么地方">2. 常见的 Linux 发行版本有哪些？它们的主要差别在什么地方？&lt;/h3>
&lt;p>Linux 发行版本是基于&lt;code>Linux内核&lt;/code>和&lt;code>软件包管理系统&lt;/code>创建的操作系统。通常一个 Linux 发行版包括 Linux 内核、GNU 工具和库、其他一些软件以及窗口系统、窗口管理器和桌面环境。 迄今为止，已经有超过 600 多个 Linux 发行版本，其中将近 500 个仍处于活跃开发状态。其中最常用的一些商业支持发行版有：Fedora(Red Hat), openSUSE(SUSE) 和 Ubuntu，社区驱动的发行版有：Debian, Slackware, Gentoo和 Arch Linux。 值得一提的是 Android 系统，我们知道 Android 也是基于 Linux 的，但是它算不算一个 Linux 发行版本呢？很多大佬有不同的意见，有人认为 Android 也是一种发行版，有人指出 Android 缺少包括 glibc 在内的很多 GUN 工具，因而不能算是一种 Linux 发行版。&lt;/p>
&lt;p>Linux 发行版 = Linux 内核 + 商业软件&lt;/p>
&lt;p>常见的 Linux 发行版：&lt;/p>
&lt;ul>
&lt;li>国外：RedHat、Fedora、Centos、SUSE、Debian、Ubuntu、Mint、Arch、Manjaro&lt;/li>
&lt;li>国内：&lt;a href="https://link.zhihu.com/?target=http%3A//www.redflag-linux.com/">红旗&lt;/a>、&lt;a href="https://link.zhihu.com/?target=https%3A//www.deepin.org/">Deepin&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>是不是一千个用户就有一千个 Linux 系统推荐理由？&lt;/p>
&lt;p>&lt;strong>用户一：&lt;/strong>&lt;/p>
&lt;p>Ubuntu 对计算机硬件的支持好于 Centos 和 Debian，兼容性强，适合新手（例如本人）；CentOS 去除很多与服务器功能无关的应用，系统简单但非常稳定，命令行操作可以方便管理系统和应用,常见于公司系统；Debian 整个系统基础核心非常小，不仅稳定，而且占用硬盘空间小，占用内存小，对于小内存，首选 Debian，对于非常熟悉 Linux 系统的 vps 高手，首选 Debian。&lt;/p>
&lt;p>&lt;strong>用户二：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Centos 系统有非常多的商业公司部署在生产环境上的服务器都是使用 CentOS 系统，Centos 是从 Redhat 源代码编译重新发布版，Centos 去除很多与服务器功能无关的应用，系统简单但非常稳定，命令行操作可以方便管理系统和应用，并且有帮助文档和社区的支持。&lt;/li>
&lt;li>Ubuntu系统有着靓丽的用户界面，完善的包管理系统，强大的软件源支持，丰富的技术社区，并且 Ubuntu 对计算机硬件的支持优于 Centos 和 Debian，兼容性强，Ubuntu 应用非常多，但是对于服务器操作系统来说，并不需要太多的应用程序，需要的是稳定，操作方便，维护简单的系统。如果你需要在服务器端使用图形界面，Ubuntu 是一个不错的选择，你需要注意的是，图形界面占用的内存非常大，而内存越大的 vps 价格也越高；&lt;/li>
&lt;li>Debian 系统也非常适合做服务器操作系统，与 Ubuntu 比较，它没有太多的花哨，稳定压倒一切，对于服务器操作系统来说是一条不变的真理，Debian 这 个Linux 系统，底层非常稳定，内核和内存的占用都非常小，在小内存的 vps 就可以顺畅运行 Debian,比如 128M 的内存，但 Debian 的帮助文档和技术资料比较少，对于小内存，首选 Debian，对于非常熟悉 Linux 系统的 vps 高手，首选 Debian。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>用户三：&lt;/strong>&lt;/p>
&lt;p>常见的发行版本如下：&lt;/p>
&lt;ul>
&lt;li>基于RPM：主要是Red Hat和SUSE使用.rpm文件格式作为包文件，包括Red Hat Linux, CentOS, Fedora, openSUSE等。&lt;/li>
&lt;li>基于Debian：使用.deb文件格式作为包文件，包括Kali Linux, Ubuntu&lt;/li>
&lt;li>基于Pacman：能够有效解决各个软件包之间的依赖关系，自动下载安装相关的包，包括Arch Linux，Manjaro Linux等。&lt;/li>
&lt;li>基于Gentoo：如Chrome OS等。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//upload.wikimedia.org/wikipedia/commons/1/1b/Linux_Distribution_Timeline.svg">https://upload.wikimedia.org/wikipedia/commons/1/1b/Linux_Distribution_Timeline.svg&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Linux_distribution">https://en.wikipedia.org/wiki/Linux_distribution&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.techradar.com/news/best-linux-distro">https://www.techradar.com/news/best-linux-distro&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.lifewire.com/top-linux-distributions-of-all-time-4084559">https://www.lifewire.com/top-linux-distributions-of-all-time-4084559&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//itsfoss.com/best-linux-beginners/">https://itsfoss.com/best-linux-beginners/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.howtogeek.com/191207/10-of-the-most-popular-linux-distributions-compared/">https://www.howtogeek.com/191207/10-of-the-most-popular-linux-distributions-compared/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="3-如何在一台全新的计算机上安装-linux-操作系统">3. 如何在一台全新的计算机上安装 Linux 操作系统？&lt;/h3>
&lt;p>Windows 是最受欢迎的桌面操作系统之一，因为到现在为止，大多数办公和娱乐软件应用（如游戏）对 Linux 系统的支持很不够。尽管国内的 Deeplin 团队已经移植了很多 Windows 下的常用工具（如搜狗输入法，QQ、网易云音乐等），对于 Linux 新手来说，想完全不使用 Windows 系统仍然有相当大的难度。特别当某些软件只能在 Windows 上运行，而又需要多人协作时。所以，一般我们会推荐绝大多数普通 Windows 用户通过安装 Linux 虚拟机或者双系统来入门 Linux，如果是依赖 Linux 环境的日常开发，也可以使用 Windows 子系统（Windows Subsystem，WSL）进行。&lt;/p>
&lt;p>安装 Linux 系统有不同的方法，但通常最常用的是下载并刻录 Live CD 的方式。首先需要下载安装文件，待 &lt;code>.iso&lt;/code> 文件下载完成后，放入空白 CD，把 ISO 文件刻录上去。CD 刻录完成后，重新启动计算机，等待屏幕显示“按任意键从CD启动”（“press any key to boot from CD”）的提示，通过光盘引导，进入 Linux 安装程序；与 Live CD 相比，Live USB 需要一些额外设置。插上制作好的 Live USB，重启计算机并进入 BIOS 设置（通常是启动时，按 Delete 键进入，启动画面上会提示）。进入 BIOS 引导单元（Boot），然后找到更改系统引导顺序的选项，把 USB 驱动器调整到列表顶部，最后保存设置并退出 BIOS。再次重启计算机，系统就会自动进入 Unetbootin 菜单，这时你就可以进行 Linux 的安装了。&lt;/p>
&lt;p>以上简单概括就是和安装 Windows 系统相似，下载系统镜像文件 - 刻录系统盘 - BIOS刻录盘启动安装即可。&lt;/p>
&lt;p>需要注意的是，在尝试安装 Linux系统之前，你可能需要先了解 Linux 的文件系统，以及挂载相关的概念。另外，不同发布版本的 Linux 系统安装难易是有差别，建议尝试不同发布版本 Linux 并选择最适合你的一款。&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//blog.csdn.net/tototuzuoquan/article/details/41368607">https://blog.csdn.net/tototuzuoquan/article/details/41368607&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/pom-xQzlGy8enX9Io1FLaQ">https://mp.weixin.qq.com/s/pom-xQzlGy8enX9Io1FLaQ&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.cnet.com/how-to/how-to-install-linux/">https://www.cnet.com/how-to/how-to-install-linux/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.zdnet.com/article/how-to-install-linux-mint-on-your-windows-pc/">https://www.zdnet.com/article/how-to-install-linux-mint-on-your-windows-pc/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.zdnet.com/article/installing-linux-on-your-pc-is-super-easy-heres-how-to-do-it/">https://www.zdnet.com/article/installing-linux-on-your-pc-is-super-easy-heres-how-to-do-it/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="4-在-win10-自带的子系统下运行-ubuntu和独立使用-ubuntu-系统前者的优缺点如何">4. 在 Win10 自带的子系统下运行 Ubuntu，和独立使用 Ubuntu 系统，前者的优缺点如何？&lt;/h3>
&lt;p>&lt;strong>优点：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>不必单独安装 Ubuntu 操作系统，大部分情况下使用 Windows 系统，可视化好，处理数据时使用 Ubuntu。&lt;/li>
&lt;li>可以在 Windows 上使用 Linux。 命令，这对于广大习惯于Linux系统的程序员来说带来了极大的方便。在一定程度上避免了使用虚拟机和双系统的麻烦。&lt;/li>
&lt;li>安装简便。在Windows上你只需要点几次鼠标，激活WSL功能，然后去微软商店免费下载即可。同时也是免费的。&lt;/li>
&lt;li>可以针对Windows系统操作。可以访问、检索、编辑、处理Windows系统的文件。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>缺点：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>功能有限，WSL 无法运行所有Linux软件（如32位二进制文件）或需要在WSL中未实现的特定Linux内核服务的软件。如果你需要完整的Linux服务，或者有某些特别的需求，WSL并不一定能够满足你，这个时候虚拟机或者是一个更好的选择。&lt;/li>
&lt;li>图形化界面主要依靠本地 X server 或者远程桌面实现，可能无法使用部分基于 Linux 的图形界面程序。&lt;/li>
&lt;li>由于WSL中没有“真正的”Linux内核，因此对于一些设备驱动程序支持还很不好，如 Nvida 显卡。&lt;/li>
&lt;li>尽管 WSL 的 CPU 和内存使用性能与正常安装的 Linux 系统接近，但是由于 Windows 文件系统的拖累以及 Windows 安全扫描工具的存在，WSL 系统的硬盘读写速度较原生的 Linux 系统仍有较大差距。&lt;/li>
&lt;/ul>
&lt;p>微软似乎正在变成开源的拥簇，不光在 Windows 上开放了 WSL，还收购了 GitHub。虽然说 WSL 还存在一定的局限性，但是它的逐渐变好，越来越完善。&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//virtualizationreview.com/articles/2018/07/17/reasons-to-not-use-wsl.aspx">https://virtualizationreview.com/articles/2018/07/17/reasons-to-not-use-wsl.aspx&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.quora.com/Why-has-Microsoft-created-WSL-What-are-its-advantages-over-earlier-methods-of-using-Linux-in-Windows">https://www.quora.com/Why-has-Microsoft-created-WSL-What-are-its-advantages-over-earlier-methods-of-using-Linux-in-Windows&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//devblogs.microsoft.com/premier-developer/why-developers-should-install-wsl-today/">https://devblogs.microsoft.com/premier-developer/why-developers-should-install-wsl-today/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.reddit.com/r/elementaryos/comments/67orea/advantages_disadvantages_over_windows_10/">https://www.reddit.com/r/elementaryos/comments/67orea/advantages_disadvantages_over_windows_10/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//www.akitaonrails.com/2017/09/20/windows-subsystem-for-linux-is-good-but-not-enough-yet">http://www.akitaonrails.com/2017/09/20/windows-subsystem-for-linux-is-good-but-not-enough-yet&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="5-linux-系统常见的文件系统有哪几种windows系统上看到的c盘d盘在linux-系统下是以什么样的形式存在">5. Linux 系统常见的文件系统有哪几种？Windows系统上看到的C盘、D盘，在Linux 系统下是以什么样的形式存在？&lt;/h3>
&lt;p>在计算机中，文件系统（file system）是命名文件及放置文件的逻辑存储和恢复的系统。文件系统指定命名文件的规则。这些规则包括文件名的字符数最大量，哪种字符可以使用，以及某些系统中文件名后缀可以有多长。文件系统还包括通过目录结构找到文件的指定路径的格式。&lt;/p>
&lt;p>Linux 下没有 C、D 盘等硬盘分区的概念。Linux 下是采用目录形式来代替 Windows 中硬盘分区的概念，即我们常说的 Linux 系统中，“一切皆是文件”。即便是传统意义上的文件夹，在 Linux 系统中也是文件。程序、服务、文本、图片等等也都是文件，一些外接设备也是文件。主要支持的文件系统包括 ext2、ext3、vfat、ntfs、iso9660、jffs、romfs，nfs 以及其他更新的文件系统，比如华为的 erofs 文件系统等。&lt;/p>
&lt;p>（1）ext 专门为 Linux 设计的，为 Linux 核心所做的第一个文件系统。单个文件最大限制：未知；该文件系统最大支持 2 GB的容量。&lt;/p>
&lt;p>（2）ext2 由 Rémy Card 设计，用以代替 ext，是LINUX内核所用的文件系统。单个文件最大限制 2 TB；该文件系统最大支持 32 TB 的容量。&lt;/p>
&lt;p>（3）ext3一个日志文件系统。单个文件最大限制 16 TB，该文件系统最大支持 32 TB的容量。&lt;/p>
&lt;p>（4）ext4Theodore Tso 领导的开发团队实现,Linux 系统下的日志文件系统。单个文件最大限制 16 TB，该文件系统最大支持 1EB 的容量。&lt;/p>
&lt;p>（5）JFS2 一种字节级日志文件系统,该文件系统主要是为满足服务器的高吞吐量和可靠性需求而设计、开发的。单个文件最大限制 16 TB，该文件系统最大支持 1 PB的容量。&lt;/p>
&lt;p>目前绝大多数 Linux 发行版都是默认 &lt;code>ext4&lt;/code> 作为默认文件系统，在这之前还有 &lt;code>ext3&lt;/code>、&lt;code>ext2&lt;/code>、&lt;code>ext&lt;/code>等。 在 ext 文件系统使用之前，Unix 主要使用 MINIX 文件系统，但是它不是开源免费的。当 Linus Torvalds 开发 Linux 内核时，也是使用的 MINIX 文件系统。不过该系统只能最大支持 14 个字节的文件名和 64 MB 大小的存储空间。 1992 年，Remy Card 发布了第一个 ext 系统，并应用于 Linux。ext 系统可以支持 255 字节文件名和 2 GB 的存储空间。不过 ext 的缺点是一个文件只能有一个时间戳，而不是像今天这样可以有 3 个时间戳（创建时间、访问时间和修改时间）。于是很快 Remy 又发布了 ext2 文件系统，ext2 可以处理数 GB 大小的文件和数 TB 大小的存储空间。但是它的问题是如果系统出现问题或者向硬盘写入数据时断电，会造成整个灾难性的崩溃，其他很多文件也会受到牵连。而且文件的碎片化问题严重拖慢了系统速度。在 1993 年，Stephen Tweedie 发布了 ext3 文件系统，它和微软的 NTFS 文件系统相似，采用了日志化 &lt;code>journal&lt;/code> 的方法来处理断电问题，日志是磁盘上的一块专门的分区，来记录磁盘读写情况。一次写入完成之后，会记录在日志中，如果在写的过程中出现来断电等情况而中断，那么重新启动系统后，通过日志能够识别出之前不完整的写入，并将该写入删除。这就意味着采用 ext3 系统可以很好的保护其他文件不受断电等因素影响。ext3 采用 32 位地址，这就意味着它能处理的文件最大 2 TB，文件系统最大到 16 TB。在 2006 年，出现了 ext4 文件系统，与 ext3 文件系统相比，ext4 的优势在于：&lt;/p>
&lt;ul>
&lt;li>向后兼容，能够兼容ext3文件系统。&lt;/li>
&lt;li>更大的文件系统，ext4采用48位地址，可以最大支持16TB文件和1EB（1000000TB）大小的文件系统。&lt;/li>
&lt;li>更快的读写速度。&lt;/li>
&lt;li>减少磁盘碎片的产生。&lt;/li>
&lt;li>ext3最大支持32000个子目录，而ext4则没有任何限制。&lt;/li>
&lt;li>对文件日志的检查，确保稳定性。&lt;/li>
&lt;li>更精细的时间戳。ext3可以精确到秒，而ext4可以精确到纳秒级，同时ext4扩展了可以记录的时间尺度到AD2446年。&lt;/li>
&lt;/ul>
&lt;p>补充知识点：&lt;/p>
&lt;p>Windows 中的 C 盘、D 盘是以 “&amp;quot; 为路径，而 Linux 以 “/”为路径。&lt;/p>
&lt;p>Windows 常见的文件系统：NTFS：全名 New Technology File System 即新技术文件系统，被普遍用于 Windows XP 以上版本的 Windows 中，取代原来 FAT32。（1）应用范围：NTFS 多用于台式机电脑、笔记本及平板电脑、移动硬盘等大中型空间容量的磁盘。而 FAT32 多用于 U 盘、内存卡等小型空间容量的磁盘。它们采用 FAT32 的原因是，NTFS 主要是针对传统机械硬盘而设计的，对于U盘或内存卡这种闪存材料不适用。NTFS 分区采用“日志式”的文件系统，这种格式会对 U 盘这种闪存储介质会造成较大的负担，会直接造成U盘容易损坏；（2）最大分区容量限制：FAT32 在 WIN2000 和 XP 系统中最大分区容量限制为 2 TB的容量。NTFS 没有容量限制，硬盘空间的容量有多大，NTFS 就可以分到多大；（3）单个文件容量限制：FAT32 在实际运行中不支持单个文件大于 4 GB 的文件，一旦超过容量限制那么系统就会提示磁盘空间不足。NTFS 已经突破了单个文件 4 GB 的容量限制，已经差不多完全替代 FAT32 分区格式了，已在 Win7/Win8/Win10 系统中广泛运用。（4）安全：NTFS分区格式，用户可以对该格式分区下所有的文件夹或文件进行加密、修改、写入等权限的安全设置，而 FAT32 没有这种功能。&lt;/p>
&lt;p>系统分区：在 Windows 我们经常看到 C 盘或 D 盘等的系统分区。在 Linux 也存在分区，但是和 Windows 上的分区完全不一样。分区的目的主要是为了保护数据和系统的稳定，当一个分区出现问题时，不会影响和破坏其他分区。在Linux系统上有两种主要的分区：&lt;/p>
&lt;ul>
&lt;li>数据分区&lt;code>data partition&lt;/code>：存放正常 Linux 系统的数据，包括系统的启动和运行等等。&lt;/li>
&lt;li>交换分区&lt;code>swap partition&lt;/code>：用来使用一定的硬盘空间来扩展计算机的内存。交换分区只能系统自己有访问权限，通常情况下，你是看不到的。它的存在主要是为了保证系统的稳定。在 Linux 系统中，你很少看到“系统内存不足”的提示，这主要是因为交换分区的存在。虽然访问交换分区比访问物理内存慢，但能够很大程度上解决系统内存的问题。在安装 Linux 系统时，我们通常会把交换分区的大小设为实际物理内存的两倍，即如果你有 512MB 的 RAM，那么交换分区则设为 1GB 大小。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//opensource.com/article/18/4/ext4-filesystem">https://opensource.com/article/18/4/ext4-filesystem&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/File_system">https://en.wikipedia.org/wiki/File_system&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.tecmint.com/linux-file-system-explained/">https://www.tecmint.com/linux-file-system-explained/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.tldp.org/LDP/intro-linux/html/sect_03_01.html">https://www.tldp.org/LDP/intro-linux/html/sect_03_01.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.pks.mpg.de/~mueller/docs/suse10.2/html/opensuse-manual_en/manual/sec.new.fs.html">https://www.pks.mpg.de/~mueller/docs/suse10.2/html/opensuse-manual_en/manual/sec.new.fs.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.howtogeek.com/howto/33552/htg-explains-which-linux-file-system-should-you-choose/">https://www.howtogeek.com/howto/33552/htg-explains-which-linux-file-system-should-you-choose/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="6-什么是根目录家目录">6. 什么是“根目录“、“家目录”？&lt;/h3>
&lt;p>根目录（&lt;code>/&lt;/code>）只有一个，是设备的最顶层目录，几乎所有与 Linux 有关的东西都在根目录 &lt;code>/&lt;/code>下，它是系统结构的最高层级，其他一切目录都在根目录下。。&lt;/p>
&lt;p>家（HOME）目录是是每个用户登录系统后所在的目录，是为了多用户使用系统和方便管理而为设置的一个目录，通常在 &lt;code>/home&lt;/code> 下，用于存储用户私密文件的子目录。每个用户通常只能访问自己的家目录。一般以用户名作为目录，可以用 &lt;code>cd ~&lt;/code> 快速进入当前用户的家目录。&lt;/p>
&lt;h3 id="7-简述文件的绝对路径和相对路径">7. 简述文件的绝对路径和相对路径&lt;/h3>
&lt;p>文件路径是文件在整个系统中的位置。绝对路径是从系统根目录 &lt;code>/&lt;/code> 到该文件的路由过程，即从根目录开始的路径。&lt;/p>
&lt;p>相对路径的概念是相对于自己的目标文件位置。如以当前目录（&lt;code>.&lt;/code>）为参照物，其他文件的相对路径就是从当前命令行程序所在的工作路径 &lt;code>pwd&lt;/code> 到达目标文件的路由过程。&lt;code>..&lt;/code> 表示父目录。&lt;/p>
&lt;h3 id="8-linux-系统在根目录下一般会有哪些目录它们分别有什么作用">8. Linux 系统在根目录（/）下一般会有哪些目录，它们分别有什么作用？&lt;/h3>
&lt;p>&lt;strong>ans1:&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>/bin，包含二进制可执行文件的目录，存放常用可执行命令的目录。如常用的单用户模式下所需要的 Linux 命令，其他多用户需要的命令，比如 &lt;code>ps&lt;/code>,&lt;code>ls&lt;/code>,&lt;code>grep&lt;/code> 等。&lt;/li>
&lt;li>/sbin，管理类的命令，通常是系统管理员使用的，比如&lt;code>iptables&lt;/code>,&lt;code>reboot&lt;/code>,&lt;code>fdisk&lt;/code>,&lt;code>ifconfi&lt;/code>等。&lt;/li>
&lt;li>/lib，存放系统库文件，为/bin或/sbin文件夹中的二进制程序提供必需的库文件，如ld&lt;em>或者lib&lt;/em>.so.*&lt;/li>
&lt;li>/etc，配置文件的存放位置，该目录下的配置文件是针对系统层级的，如果是个人配置，则在其家目录中。&lt;/li>
&lt;li>/usr，用户使用的应用和文件（非系统必需的），类似于 Windows 的 Program File，存放默认安装文件存放的目录。一些非系统必需的用户应用存放在该目录中的&lt;code>/usr/bin&lt;/code>中，非系统必需的系统应用存放在&lt;code>/usr/sbin&lt;/code>中，它们所需要的库存在在&lt;code>/usr/lib&lt;/code>中。&lt;/li>
&lt;li>/boot，引导文件，如 bootloader(grub)，与系统启动相关；Linux 内核文件（kernel）也在该目录下。一般情况不要修改该目录下的文件，否则可能会导致系统无法启动。&lt;/li>
&lt;li>/dev，设备文件所在目录，包含有代表硬件设备的特殊文件。比如&lt;code>/dev/sda&lt;/code>表示系统中第一个SATA盘。该目录也会包含一些虚拟设备，比如&lt;code>/dev/null&lt;/code>表示一个虚拟的设备，你把输出内容存到该设备中，就意味着你丢弃了你的输出内容。&lt;/li>
&lt;li>/root，存放root用户相关文件的目录&lt;/li>
&lt;li>/home，/root，用户主目录，存放普通用户相关文件的目录&lt;/li>
&lt;li>/misc，杂项&lt;/li>
&lt;li>/opt，option，有些第三方软件，把此目录当作默认安装位置&lt;/li>
&lt;li>/proc，内存中的内核相关信息的映射，包含系统进程的信息，比如可以通过pid在此目录下查看相关进程信息，&lt;code>/proc/{pid}&lt;/code>&lt;/li>
&lt;li>/sys，像磁盘这样的存储设备或某些总线设备的驱动程序相关属性信息；&lt;/li>
&lt;li>/srv，service，服务运行中中间的存放位置；&lt;/li>
&lt;li>/tmp，存放临时文件的目录&lt;/li>
&lt;li>/var： 存放一些经常变化的数据，一些文件随时变化的，比如系统日志&lt;code>/var/log&lt;/code>等，可以在此目录下查看。还有包和数据库文件&lt;code>/var/lib&lt;/code>，网页服务数据 &lt;code>/var/www&lt;/code>，电子邮件&lt;code>/var/email&lt;/code>，打印队列&lt;code>/var/spool&lt;/code>等。&lt;/li>
&lt;li>/mnt，临时挂载点目录，如默认挂载软驱、光驱的目录。在 WSL 中，在此目录下可以找到 Windows 的盘符，进入 Windows 系统文件。&lt;/li>
&lt;li>/media，可移除媒体挂载目录，比如你将一个 CD 插入 Linux 系统中，在此目录下会自动生成一个可以访问该 CD 内容的子目录。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.linux.com/blog/learn/intro-to-linux/2018/4/linux-filesystem-explained">https://www.linux.com/blog/learn/intro-to-linux/2018/4/linux-filesystem-explained&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.tecmint.com/linux-directory-structure-and-important-files-paths-explained/">https://www.tecmint.com/linux-directory-structure-and-important-files-paths-explained/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="9-什么是-linux-系统的内核如何查看内核版本号">9. 什么是 Linux 系统的内核，如何查看内核版本号？&lt;/h3>
&lt;p>Linux 内核是底层系统，负责应用和硬件的接口调用，如果没有内核，应用将无法调用物理硬件。Linux内核属于monolithic型的内核，包括了CPU、内存、IPC、设备驱动、文件系统等。内核是整个操作系统的心脏，也是运行程序和管理像磁盘和打印机等硬件设备的核心程序，它提供了一个在裸设备与应用程序间的抽象层。&lt;/p>
&lt;p>Linux内核版本有两种：稳定版（次版本为偶数）和开发版（次版本为奇数）&lt;/p>
&lt;p>版本号：主版本.次版本.释出版本-修改版本&lt;/p>
&lt;p>查看内核版本：&lt;/p>
&lt;ul>
&lt;li>&lt;code>uname -a&lt;/code>；&lt;code>uname -r&lt;/code>&lt;/li>
&lt;li>&lt;code>cat /proc/version&lt;/code>&lt;/li>
&lt;li>使用&lt;code>ls /boot&lt;/code>可以看到&lt;code>vmlinuz-2.6.32-754.10.1.el6.x86_64&lt;/code>类似的文件，这实际上就是Linux的内核&lt;/li>
&lt;li>查看distribution版本：&lt;code>cat /etc/issue&lt;/code>或&lt;code>者cat /etc/redhat-release&lt;/code>（&lt;code>cat /etc/centos-release&lt;/code>）&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Linux_kernel">https://en.wikipedia.org/wiki/Linux_kernel&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/zh-hans/Linux%E5%86%85%E6%A0%B8">https://zh.wikipedia.org/zh-hans/Linux%E5%86%85%E6%A0%B8&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//itsfoss.com/find-which-kernel-version-is-running-in-ubuntu/">https://itsfoss.com/find-which-kernel-version-is-running-in-ubuntu/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.howtogeek.com/howto/31632/what-is-the-linux-kernel-and-what-does-it-do/">https://www.howtogeek.com/howto/31632/what-is-the-linux-kernel-and-what-does-it-do/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.kernel.org/">https://www.kernel.org/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.cyberciti.biz/tips/compiling-linux-kernel-26.html">https://www.cyberciti.biz/tips/compiling-linux-kernel-26.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="10-在-linux-下如何查看电脑的硬件信息如内存cpu硬盘显卡等">10. 在 Linux 下如何查看电脑的硬件信息（如内存、CPU、硬盘、显卡等）&lt;/h3>
&lt;ul>
&lt;li>CPU，&lt;code>lscpu&lt;/code>；&lt;code>cat /proc/cpuinfo |grep &amp;quot;model name&amp;quot; &amp;amp;&amp;amp; cat /proc/cpuinfo |grep &amp;quot;physical id&amp;quot;&lt;/code>&lt;/li>
&lt;li>内存，&lt;code>free -m&lt;/code>；&lt;code>cat /proc/meminfo |grep MemTotal&lt;/code>&lt;/li>
&lt;li>硬盘，&lt;code>lsblk&lt;/code>；&lt;code>df -h&lt;/code>&lt;/li>
&lt;li>显卡，&lt;code>lspci | grep -i vga&lt;/code>&lt;/li>
&lt;li>USB，&lt;code>lsusb&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>lspci&lt;/code> 可以用于查看 PCI 设备，包括 USB、显卡、网卡、声卡等硬件&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//vitux.com/get-linux-system-and-hardware-details-on-the-command-line/">https://vitux.com/get-linux-system-and-hardware-details-on-the-command-line/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.tecmint.com/commands-to-collect-system-and-hardware-information-in-linux/">https://www.tecmint.com/commands-to-collect-system-and-hardware-information-in-linux/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.binarytides.com/linux-commands-hardware-info/">https://www.binarytides.com/linux-commands-hardware-info/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.maketecheasier.com/check-hardware-information-linux/">https://www.maketecheasier.com/check-hardware-information-linux/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//askubuntu.com/questions/31618/how-can-i-find-my-hardware-details">https://askubuntu.com/questions/31618/how-can-i-find-my-hardware-details&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="11-在linux-需要使用哪些命令来挂载一个移动硬盘如果挂载时报错一般会有哪几种情况分别怎么解决">11. 在Linux 需要使用哪些命令来挂载一个移动硬盘？如果挂载时报错，一般会有哪几种情况？分别怎么解决？&lt;/h3>
&lt;p>Linux下，mount挂载的作用，就是将一个设备（通常是存储设备）挂接到一个已存在的目录上。访问这个目录就是访问该存储设备。&lt;/p>
&lt;p>手动挂载移动硬盘的步骤：&lt;/p>
&lt;ul>
&lt;li>首先切换至 root 权限&lt;/li>
&lt;li>输入 &lt;code>fdisk-l&lt;/code>，查询当前外部设备（移动硬盘）的标识符，如 &lt;code>/dev/sdb&lt;/code>&lt;/li>
&lt;li>新建挂载点 &lt;code>mkdir /mnt/hddisk1&lt;/code>&lt;/li>
&lt;li>挂载，如 &lt;code>mount /dev/sdb1 /mnt/hddisk1&lt;/code>；NTFS 格式硬盘，&lt;code>mount -t ntfs-3g /dev/sdd1 /mnt/bbj&lt;/code>&lt;/li>
&lt;li>数据传输和修改，&lt;code>rsync&lt;/code>、&lt;code>cp&lt;/code>、&lt;code>mv&lt;/code>等一系列操作&lt;/li>
&lt;li>&lt;code>df -hl&lt;/code>；查看硬盘容量&lt;/li>
&lt;li>卸载移动硬盘，&lt;code>umount /mnt/bbj&lt;/code>； &lt;code>umount -lf /mnt/bbj&lt;/code> 进行强制卸载（当有程序占用时谨慎使用）&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>可能出现的错误：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>非管理员权限进行 mount 操作&lt;/li>
&lt;li>当使用umount命令卸载挂载点时，会遇到“device is busy”提示，可以进行如下操作：&lt;/li>
&lt;li>&lt;code>sync；echo 3 &amp;gt; /proc/sys/vm/drop_caches&lt;/code>；同步传输数据；&lt;/li>
&lt;li>&lt;code>fuser&lt;/code> 可以显示出当前哪个程序在使用磁盘上的某个文件、挂载点、甚至网络端口，并给出程序进程的详细信息.&lt;/li>
&lt;li>&lt;code>fuser -m -v /dev/sdd&lt;/code>：查看一下哪个用户哪个进程占用着此设备 ；&lt;/li>
&lt;li>&lt;code>fuser -m -v -k /dev/sdd&lt;/code> ：杀掉占用此设备的进程 ；&lt;/li>
&lt;li>&lt;code>umount /mnt/bbj&lt;/code>；卸载移动硬盘；&lt;/li>
&lt;li>mount: /dev/sdb1 is write-protected, mounting read-only，该移动硬盘已经被挂载，可以使用 &lt;code>mount --bind /mnt/m1 /mnt/3&lt;/code> 进行多重挂载&lt;/li>
&lt;li>如果目录没有被挂载过，使用 &lt;code>umount&lt;/code> 会出现 umount: /dev/sdb: not mounted 错误提示&lt;/li>
&lt;li>挂载后没有在目录找到原本想要的文件，可能是该移动硬盘有多个分区，可以尝试依次挂载&lt;code>/dev/sdb1&lt;/code>，&lt;code>/dev/sdb2&lt;/code>等等&lt;/li>
&lt;li>如果移动硬盘在 Windows 系统下没有被正常卸载，挂载时会出现提示符，Linux 系统会自动修复后进行正常挂载操作&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/oReH2JDb4sc8rftesoEOlw">https://mp.weixin.qq.com/s/oReH2JDb4sc8rftesoEOlw&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.codero.com/knowledge-base/content/30/111/en/how-do-i-add-a-new-hard-drive-in-linux.html">https://www.codero.com/knowledge-base/content/30/111/en/how-do-i-add-a-new-hard-drive-in-linux.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//unix.stackexchange.com/questions/18925/how-to-mount-a-device-in-linux">https://unix.stackexchange.com/questions/18925/how-to-mount-a-device-in-linux&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.makeuseof.com/tag/mounting-hard-disks-partitions-using-linux-command-line/">https://www.makeuseof.com/tag/mounting-hard-disks-partitions-using-linux-command-line/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//linuxconfig.org/how-to-move-var-directory-to-another-partition">https://linuxconfig.org/how-to-move-var-directory-to-another-partition&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//linuxize.com/post/how-to-mount-and-unmount-file-systems-in-linux/">https://linuxize.com/post/how-to-mount-and-unmount-file-systems-in-linux/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//serverfault.com/questions/67038/how-do-i-mount-sub-directory-to-a-hard-drive-in-linux">https://serverfault.com/questions/67038/how-do-i-mount-sub-directory-to-a-hard-drive-in-linux&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//askubuntu.com/questions/125257/how-do-i-add-an-additional-hard-drive">https://askubuntu.com/questions/125257/how-do-i-add-an-additional-hard-drive&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="12-linux-系统中的-644755777-文件权限分别表示什么意思他们的数字是怎么计算得来的修改文件权限的命令是什么怎么设置用户文件的默认权限">12. Linux 系统中的 644、755、777 文件权限分别表示什么意思？他们的数字是怎么计算得来的？修改文件权限的命令是什么？怎么设置用户文件的默认权限？&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">444 r--r--r--
600 rw-------
644 rw-r--r--
666 rw-rw-rw-
700 rwx------
744 rwxr--r--
755 rwxr-xr-x
777 rwxrwxrwx
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;code>644&lt;/code>：拥有者可读可写，其他人仅可读；&lt;/li>
&lt;li>&lt;code>755&lt;/code>：拥有者可读可写可执行，其他人仅可读可执行，不可写；&lt;/li>
&lt;li>&lt;code>777&lt;/code>：所有人均可读可写可执行。&lt;/li>
&lt;/ul>
&lt;p>从左至右，1-3 位数字代表文件所有者的权限，4-6 位数字代表同组用户的权限，7-9 数字代表其他用户的权限。而具体的权限是由数字来表示的，读取的权限等于 4，用 r 表示；写入的权限等于 2，用 w 表示；执行的权限等于 1，用 x 表示；&lt;/p>
&lt;p>通过4、2、1的组合，得到以下几种权限：0（没有权限）；4（读取权限）；5（4+1 | 读取+执行）；6（4+2 | 读取+写入）；7（4+2+1 | 读取+写入+执行）&lt;/p>
&lt;p>通过4、2、1的组合，得到以下几种权限：&lt;/p>
&lt;p>0 (没有权限 )；4 (读取权限)；5( 4+1 | 读取+执行)；6(4+2 | 读取+写入)；7(4+2+1 | 读取+写入+执行)&lt;/p>
&lt;p>每一个文件或者文件夹都有8个数字来控制权限。“100”（4）表示可读，“010”（2）表示可写，“001”（1）表示可执行。故多种权限组合时，有：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">0 - 没有权限
1 - 可执行
2 - 可写
3 - 可写可执行
4 - 可读
5 - 可读可执行
6 - 可读可写
7 - 可读可写可执行
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>以755为例： 1-3位7等于4+2+1，rwx，所有者具有读取、写入、执行权限； 4-6位5等于4+1+0，r-x，同组用户具有读取、执行权限但没有写入权限； 7-9位5，同上，也是r-x，其他用户具有读取、执行权限但没有写入权限。 使用sudo chmod -（代表类型）×××（所有者）×××（组用户）×××（其他用户修改权限&lt;/p>
&lt;p>想要改文件的权限，只有管理员 root 和所有者才能修改：&lt;/p>
&lt;p>用户权限可以使用&lt;code>chmod&lt;/code>命令来修改（可以更改文件 9 个属性）。除了 0-8 的数字来表示控制权限外，还通常使用 &lt;code>u,g,o,a&lt;/code> 来控制，分别表示“拥有者”，“组内其他成员”，“组外其他成员”，“全部用户”；使用“+”添加权限，使用“-”去除权限。如对一个文件设置所有人可读可写可执行。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">chmod 777 tt.txt
# 或者
chmod a+rwx tt.txt
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果你想设置新创建文件的默认权限，可以使用 &lt;code>umask&lt;/code> 来设置限制新建目录或文件的权限掩码，用于指定在新目录或文件的默认权限中删除哪些权限。当创建新目录或文件时，默认的初始权限由权限掩码决定。&lt;/p>
&lt;p>&lt;code>bash&lt;/code> 用户可以在&lt;code>~/.bashrc&lt;/code>文件中配置 &lt;code>umask&lt;/code>，&lt;code>zsh&lt;/code> 用户可以在 &lt;code>~/.zshrc&lt;/code> 中配置。如设置为：&lt;code>umask 033&lt;/code>，则新建的文件与目录去掉了本用户组和其他用户组人员的写权限和可执行权限。&lt;/p>
&lt;p>配置完成后，用户每次登陆系统时都会自动执行 &lt;code>umask&lt;/code> 命令，并自动设置权限掩码来限制新文件的权限。也可以手动执行 &lt;code>umask&lt;/code> 命令来改变默认值。&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.cyberciti.biz/faq/linux-list-all-members-of-a-group/">https://www.cyberciti.biz/faq/linux-list-all-members-of-a-group/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.howtogeek.com/howto/ubuntu/see-which-groups-your-linux-user-belongs-to/">https://www.howtogeek.com/howto/ubuntu/see-which-groups-your-linux-user-belongs-to/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.guru99.com/file-permissions.html">https://www.guru99.com/file-permissions.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.linode.com/docs/tools-reference/linux-users-and-groups/">https://www.linode.com/docs/tools-reference/linux-users-and-groups/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/4/html/Step_by_Step_Guide/s1-navigating-ownership.html">https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/4/html/Step_by_Step_Guide/s1-navigating-ownership.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.digitalocean.com/community/tutorials/an-introduction-to-linux-permissions">https://www.digitalocean.com/community/tutorials/an-introduction-to-linux-permissions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.pluralsight.com/blog/it-ops/linux-file-permissions">https://www.pluralsight.com/blog/it-ops/linux-file-permissions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.geeksforgeeks.org/permissions-in-linux/">https://www.geeksforgeeks.org/permissions-in-linux/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="13-rsyncscp-都可以用来在服务器之间传输文件它们的主要区别是什么">13. rsync，scp 都可以用来在服务器之间传输文件，它们的主要区别是什么？&lt;/h3>
&lt;ul>
&lt;li>scp 就是 secure copy，是用来进行远程文件拷贝的。数据传输使用 ssh，并且和 ssh 使用相同的认证方式，提供相同的安全保证。&lt;/li>
&lt;li>rsync 是类 unix 系统下的数据镜像备份工具，从软件的命名上就可以看出来了，remote sync。它的操作方式和 scp 和相似，但是比 scp 强大很多。使用双冒号分割主机名和文件路径时，是使用 rsync 服务器，这里不做介绍。&lt;/li>
&lt;li>scp 简单方便，安全可靠；支持限速参数，不支持排除目录。&lt;/li>
&lt;li>scp 只能做全量备份。简单说就是 rsync 只传修改了的部分，如果改动较小就不需要全部重传，所以 rsync 备份速度较快。&lt;/li>
&lt;li>rsync 有更多的参数可以选择，功能更加丰富，操作类似 scp，支持排除目录，支持限速参数；还支持本地复制。&lt;/li>
&lt;li>rsync 只对差异文件做更新，可以做增量或全量备份，传输中断后，&lt;code>scp&lt;/code>不能从断点续传，&lt;code>rsync&lt;/code>可以断点续传，并检查文件是否正确传输；所以如果文件很大，或者网络很不稳定，最好使用&lt;code>rsync&lt;/code>来传输。&lt;/li>
&lt;li>默认情况下，rsync 通过比较文件的最后修改时间（mtime）和文件的大小（size）来确认哪些文件需要被同步过去。&lt;/li>
&lt;li>rsync 是分块校验+传输，scp 是整个文件传输。rsync 比 scp 有优势的地方在于单个大文件的一小部分存在改动时，只需传输改动部分，无需重新传输整个文件。如果传输一个新的文件，理论上rsync没有优势。&lt;/li>
&lt;li>rsync 不是加密传输，而 scp 是加密传输，使用时可以按需选择。&lt;/li>
&lt;li>scp 命令格式：scp [参数] &amp;lt;源地址（&lt;a href="mailto:%E7%94%A8%E6%88%B7%E5%90%8D@IP%E5%9C%B0%E5%9D%80%E6%88%96%E4%B8%BB%E6%9C%BA%E5%90%8D">用户名@IP地址或主机名&lt;/a>）&amp;gt;:&amp;lt;文件路径&amp;gt; &amp;lt;目的地址（用户名 @IP 地址或主机名）&amp;gt;:&amp;lt;文件路径&amp;gt;&lt;/li>
&lt;li>rsync 命令格式：rsync [参数] &amp;lt;源地址（&lt;a href="mailto:%E7%94%A8%E6%88%B7%E5%90%8D@IP%E5%9C%B0%E5%9D%80%E6%88%96%E4%B8%BB%E6%9C%BA%E5%90%8D">用户名@IP地址或主机名&lt;/a>）&amp;gt;:&amp;lt;文件路径&amp;gt; &amp;lt;目的地址（用户名 @IP 地址或主机名）&amp;gt;:&amp;lt;文件路径&amp;gt;&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//stackoverflow.com/questions/20244585/how-does-scp-differ-from-rsync">https://stackoverflow.com/questions/20244585/how-does-scp-differ-from-rsync&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.quora.com/What-is-the-difference-between-scp-and-rsync">https://www.quora.com/What-is-the-difference-between-scp-and-rsync&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//superuser.com/questions/393608/difference-between-scp-and-rsync">https://superuser.com/questions/393608/difference-between-scp-and-rsync&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//unix.stackexchange.com/questions/39718/is-there-ever-a-reason-to-use-scp-instead-of-rsync">https://unix.stackexchange.com/questions/39718/is-there-ever-a-reason-to-use-scp-instead-of-rsync&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//serverfault.com/questions/194514/rsync-and-scp-differences">https://serverfault.com/questions/194514/rsync-and-scp-differences&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//medium.com/%40elngovind/understanding-rsync-and-scp-46bcb20791d0">https://medium.com/@elngovind/understanding-rsync-and-scp-46bcb20791d0&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="14-在命令行界面如何用-vim-编辑器打开一个文本文件创建一个文件对文件进行修改和保存">14. 在命令行界面，如何用 Vim 编辑器打开一个文本文件、创建一个文件、对文件进行修改和保存？&lt;/h3>
&lt;p>&lt;strong>ans1:&lt;/strong>&lt;/p>
&lt;p>使用&lt;code>vim 文件名&lt;/code>即可。&lt;/p>
&lt;p>如果该文件存在，那么在打开该文件，如果该文件不存在，那么将新建一个文件打开。退出 vim 有以下几种情况：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">:q - 退出vim
:q! - 不保存退出
:wq - 保存并退出
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>创建文件：vim test.txt，只要按下 i, o, a 等字符就可以进入输入模式，输入 :wq 即可保存离开&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//medium.com/actualize-network/how-to-learn-vim-a-four-week-plan-cd8b376a9b85/">https://medium.com/actualize-network/how-to-learn-vim-a-four-week-plan-cd8b376a9b85/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.openvim.com/">https://www.openvim.com/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.labnol.org/internet/learning-vim-for-beginners/28820/">https://www.labnol.org/internet/learning-vim-for-beginners/28820/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//vim-adventures.com/">https://vim-adventures.com/&lt;/a>：玩游戏学vim&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//github.com/damassi/learn-vim">https://github.com/damassi/learn-vim&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//github.com/dofy/learn-vim">https://github.com/dofy/learn-vim&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.quora.com/What-is-the-best-way-to-learn-Vim-What-sites-and-resources-would-you-recommend-to-learn-efficiently">https://www.quora.com/What-is-the-best-way-to-learn-Vim-What-sites-and-resources-would-you-recommend-to-learn-efficiently&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//hackernoon.com/learning-vim-what-i-wish-i-knew-b5dca186bef7%3Fgi%3Db90263ad2c36">https://hackernoon.com/learning-vim-what-i-wish-i-knew-b5dca186bef7?gi=b90263ad2c36&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="15-什么是-stderr-和-stdout">15. 什么是 stderr 和 stdout？&lt;/h3>
&lt;p>stdout 是标准输出流，它显示来自命令的输出。它的文件描述符为 1。 stderr 是标准错误流，它显示来自命令的错误输出。它的文件描述符为 2&lt;/p>
&lt;h3 id="16-管道在-shell-中是一个什么样的角色">16. 管道在 Shell 中是一个什么样的角色？&lt;/h3>
&lt;p>管道使命令的语法紧凑并且使用简单；将多个命令串联，可以完成复杂的任务。&lt;/p>
&lt;p>Shell 中管道（pipe）是将某个程序的标准输出作为另一个程序的标准输入。管道符号可以多个连用，它们之间相互独立，不会相互干扰。&lt;/p>
&lt;p>示例如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">program1 | program2 | program3 |...| programN
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//swcarpentry.github.io/shell-novice/04-pipefilter/index.html">https://swcarpentry.github.io/shell-novice/04-pipefilter/index.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Pipeline_(Unix)">https://en.wikipedia.org/wiki/Pipeline_(Unix)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//ryanstutorials.net/linuxtutorial/piping.php">https://ryanstutorials.net/linuxtutorial/piping.php&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//bash.cyberciti.biz/guide/Pipes">https://bash.cyberciti.biz/guide/Pipes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//stackoverflow.com/questions/13417278/piping-in-a-basic-shell-implementation">https://stackoverflow.com/questions/13417278/piping-in-a-basic-shell-implementation&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="17-如何使用管道将上游的数据传入-vim-编辑器">17. 如何使用管道将上游的数据传入 Vim 编辑器？&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">grep -v &amp;#34;localhost&amp;#34; /etc/hosts | vim –`
cat aa.txt | vim -
# 或者
vim &amp;lt;(cat aa.txt)
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="18-如何将程序的-stdout-和-stderr-通过管道输出到两个文件">18. 如何将程序的 stdout 和 stderr 通过管道输出到两个文件？&lt;/h3>
&lt;p>这涉及到输出的重导向，分别用1和2将标准输出和标准错误输出到两个文件中&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text"># 把标准错误输出到stderr.txt
cat example.txt 2&amp;gt;stderr.txt
# 把标准输出输出到stdout.txt
cat example.txt 1&amp;gt;stdout.txt
# 把标准错误以标准输出形式输出
cat example.txt 2&amp;gt;&amp;amp;1
# 把标准输出以标准错误形式输出
cat example.txt 1&amp;gt;&amp;amp;2
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/_MLfjwcXrVo3H9V6iwbGew">https://mp.weixin.qq.com/s/_MLfjwcXrVo3H9V6iwbGew&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.jstorimer.com/blogs/workingwithcode/7766119-when-to-use-stderr-instead-of-stdout">https://www.jstorimer.com/blogs/workingwithcode/7766119-when-to-use-stderr-instead-of-stdout&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//my.oschina.net/qihh/blog/55308">https://my.oschina.net/qihh/blog/55308&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.zhihu.com/question/24030687">https://www.zhihu.com/question/24030687&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//stackoverflow.com/questions/16497317/piping-both-stdout-and-stderr-in-bash">https://stackoverflow.com/questions/16497317/piping-both-stdout-and-stderr-in-bash&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//note.qidong.name/2017/07/bash_stdout_stderr/">http://note.qidong.name/2017/07/bash_stdout_stderr/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//blog.csdn.net/wangyeqiang/article/details/38726433">https://blog.csdn.net/wangyeqiang/article/details/38726433&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//www.01happy.com/linux-stdin-stdout-stderr/">http://www.01happy.com/linux-stdin-stdout-stderr/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/zh/%E6%A8%99%E6%BA%96%E4%B8%B2%E6%B5%81">https://zh.wikipedia.org/zh/%E6%A8%99%E6%BA%96%E4%B8%B2%E6%B5%81&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="19-如何查看隐藏文件">19. 如何查看隐藏文件&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">l.
ls -d .*
ls -a
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="20-如何使用-root-权限如何切换不同的身份">20. 如何使用 ROOT 权限？如何切换不同的身份&lt;/h3>
&lt;p>&lt;code>sudo&lt;/code> 可以使非管理员执行需要root权限的操作；使用&lt;code>su&lt;/code>可以进行不同身份的切换。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">sudo mount /dev/sdb1 /mnt/m1
su root；su username`
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>$&lt;/code>变成了&lt;code>#&lt;/code>，说明现在是使用 root 用户&lt;/p>
&lt;h3 id="21-如果输入的shell脚本过长快速删除有哪些快捷键呢如何快速调整光标位置">21. 如果输入的shell脚本过长，快速删除有哪些快捷键呢？如何快速调整光标位置&lt;/h3>
&lt;ul>
&lt;li>Ctrl + l 清屏&lt;/li>
&lt;li>Ctrl + a：移到行首（a是首字母）&lt;/li>
&lt;li>Ctrl + e：移到行尾（结束）&lt;/li>
&lt;li>Ctrl + xx：行首到当前光标替换&lt;/li>
&lt;li>Ctrl + u: 从光标所在位置一直删除到开头&lt;/li>
&lt;li>Ctrl + k: 从光标所在位置一直删除到尾&lt;/li>
&lt;li>Ctrl + a 移动光标到行首&lt;/li>
&lt;li>Ctrl + e 移动光标到行尾&lt;/li>
&lt;li>Ctrl + b 往后移动一个字符&lt;/li>
&lt;li>Ctrl + f 往前移动一个字符&lt;/li>
&lt;li>Ctrl + A：光标跳到命令行起始位置&lt;/li>
&lt;li>Ctrl + E：光标跳到命令行末尾位置&lt;/li>
&lt;li>Ctrl + B：向后移动一个字符&lt;/li>
&lt;li>Ctrl + F：向前移动一个字符&lt;/li>
&lt;li>Alt + 左箭头：向前移动一个单词&lt;/li>
&lt;li>Alt + 右箭头：向后移动一个单词&lt;/li>
&lt;/ul>
&lt;h3 id="22-linux-文件操作时比较-awkgrepsed-三剑客的用法">22. Linux 文件操作时，比较 awk/grep/sed 三剑客的用法&lt;/h3>
&lt;p>grep 更适合单纯的查找或匹配文本，sed 更适合编辑匹配到的文本，awk 更适合格式化文本，对文本进行较复杂格式处理。&lt;/p>
&lt;p>三个命令的运用形式：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">grep &amp;#39;字符&amp;#39; 文件
sed &amp;#39;命令&amp;#39; 文件
awk &amp;#39;条件{命令}&amp;#39; 文件
awk ‘{}’ file
grep this file
sed ‘2a hello’ file
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/b3574d31f579">https://www.jianshu.com/p/b3574d31f579&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/879e22bedfb8">https://www.jianshu.com/p/879e22bedfb8&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/9fcda404d9e1">https://www.jianshu.com/p/9fcda404d9e1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www-users.york.ac.uk/~mijp1/teaching/2nd_year_Comp_Lab/guides/grep_awk_sed.pdf">https://www-users.york.ac.uk/~mijp1/teaching/2nd_year_Comp_Lab/guides/grep_awk_sed.pdf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//thief.one/2017/08/12/1/">https://thief.one/2017/08/12/1/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//segmentfault.com/a/1190000015885994">https://segmentfault.com/a/1190000015885994&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//unix.stackexchange.com/questions/2434/is-there-a-basic-tutorial-for-grep-awk-and-sed">https://unix.stackexchange.com/questions/2434/is-there-a-basic-tutorial-for-grep-awk-and-sed&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//stackoverflow.com/questions/7727640/what-are-the-differences-among-grep-awk-sed">https://stackoverflow.com/questions/7727640/what-are-the-differences-among-grep-awk-sed&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//blog.cee.moe/a-brief-introduction-to-grep-awk-and-sed.html">http://blog.cee.moe/a-brief-introduction-to-grep-awk-and-sed.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.jianshu.com/p/3af864e9cb5a">https://www.jianshu.com/p/3af864e9cb5a&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="23-linux-系统中哪个文件是黑洞可以吃掉-shell-管道中流动的信息">23. Linux 系统中哪个文件是黑洞，可以吃掉 Shell 管道中流动的信息&lt;/h3>
&lt;p>&lt;code>/dev/null&lt;/code> 通常用来处理进程中那些不想要的输出流，或者作为一个方便的空文件给输入流。这个通过用来做重定向。&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//askubuntu.com/questions/12098/what-does-outputting-to-dev-null-accomplish-in-bash-scripts">https://askubuntu.com/questions/12098/what-does-outputting-to-dev-null-accomplish-in-bash-scripts&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki//dev/null">https://zh.wikipedia.org/wiki//dev/null&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//blog.jobbole.com/109355/">http://blog.jobbole.com/109355/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="24-linux-系统如何设置开机自动挂载mount你的移动介质如u盘移动硬盘">24. Linux 系统如何设置开机自动挂载（mount）你的移动介质（如U盘、移动硬盘）&lt;/h3>
&lt;p>将分区信息写到 &lt;code>/etc/fstab&lt;/code> 文件中即可实现系统启动的自动挂载&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">fdisk -l # 查看可挂载的磁盘
df -h # 查看已经挂载的磁盘
mkfs.ext4 /dev/vdb # 初始化磁盘
mount /dev/vdb /u01 # mount 磁盘到/u01，保证/u01为空
blkid # 获取磁盘的uuid和属性，用uuid来进行开机mount
vim /etc/fstab # 开机mount，模板是UUID=********** /u01 ext4 defaults 1 1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//blog.csdn.net/qq_41116956/article/details/82767764">https://blog.csdn.net/qq_41116956/article/details/82767764&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//qiita.com/chinaperfirect/items/a525e4db0fae036b94f5">https://qiita.com/chinaperfirect/items/a525e4db0fae036b94f5&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//wiki.archlinux.org/index.php/Fstab_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">https://wiki.archlinux.org/index.php/Fstab_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Fstab">https://en.wikipedia.org/wiki/Fstab&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//blog.51cto.com/zkxfoo/1758529">https://blog.51cto.com/zkxfoo/1758529&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//help.ubuntu.com/community/Fstab">https://help.ubuntu.com/community/Fstab&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//man7.org/linux/man-pages/man5/fstab.5.html">http://man7.org/linux/man-pages/man5/fstab.5.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.howtogeek.com/howto/38125/htg-explains-what-is-the-linux-fstab-and-how-does-it-work/">https://www.howtogeek.com/howto/38125/htg-explains-what-is-the-linux-fstab-and-how-does-it-work/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="25-如何组装服务器和安装-linux-系统">25. 如何组装服务器和安装 Linux 系统&lt;/h3>
&lt;p>对于大型服务器的配置，新手用户建议通过服务器代理公司进行（通常会提供各类技术服务）。很多商业公司会通过租公有云服务器搭建动态集群来应对业务量的变化。&lt;/p>
&lt;p>小型实体服务器则需要分别采购机箱、电源、CPU、内存、硬盘（SSD、机械硬盘等）、网卡、网络交换机。有可能还需要组装硬盘阵列。自己组装服务器，硬盘文件系统和网络系统是最容易出问题的部分。&lt;/p>
&lt;p>Linux 系统安装见问题 3。&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//www.elecfans.com/emb/danpianji/20180814728842.html">http://www.elecfans.com/emb/danpianji/20180814728842.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//jingyan.baidu.com/article/ed2a5d1f8e608209f6be1798.html">https://jingyan.baidu.com/article/ed2a5d1f8e608209f6be1798.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="26-linux有哪些常见系统以及它们的区别是什么">26. Linux有哪些常见系统，以及它们的区别是什么&lt;/h3>
&lt;p>见题 2 。&lt;/p>
&lt;h3 id="27-linux三剑客是哪三个常用命令有哪些">27. Linux三剑客是哪三个，常用命令有哪些&lt;/h3>
&lt;p>见题 22 。&lt;/p>
&lt;h3 id="28-windows-子系统wsl的安装目录如何从迁移">28. Windows 子系统（WSL）的安装目录如何从迁移？&lt;/h3>
&lt;p>所有从商店安装的发行版都存在于以下目录中，&lt;code>C:\Users\&amp;lt;username&amp;gt;\AppData\Local\Packages&lt;/code>。手动安装参考：&lt;a href="https://link.zhihu.com/?target=https%3A//damsteen.nl/blog/2018/08/29/installing-wsl-manually-on-non-system-drive">https://damsteen.nl/blog/2018/08/29/installing-wsl-manually-on-non-system-drive&lt;/a>&lt;/p>
&lt;p>迁移 WSL 安装目录的方法：&lt;/p>
&lt;ul>
&lt;li>查看当前用户名；在迁移目标磁盘创建一个文件夹 ，并设置权限；&lt;/li>
&lt;li>下载 LxRunOffline；lxrunoffline list&lt;/li>
&lt;li>查看已安装的Linux发行版本；&lt;/li>
&lt;li>lxrunoffline move 迁移Linux文件；&lt;/li>
&lt;li>lxrunoffline get-dir -n Ubuntu 查看新的安装目录&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//superuser.com/questions/1113906/can-i-move-the-linux-subsystem-to-a-different-drive">https://superuser.com/questions/1113906/can-i-move-the-linux-subsystem-to-a-different-drive&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//stackoverflow.com/questions/38779801/move-wsl-bash-on-windows-root-filesystem-to-another-hard-drive">https://stackoverflow.com/questions/38779801/move-wsl-bash-on-windows-root-filesystem-to-another-hard-drive&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="29-wsl-如何自动挂载硬盘使其目录保持-755文件保持-644-权限">29. WSL 如何自动挂载硬盘使其目录保持 755，文件保持 644 权限？&lt;/h3>
&lt;p>首先，需要在 &lt;code>/etc/wsl.conf&lt;/code> 进行配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">[automount]
options = &amp;#34;metadata,umask=0022,fmask=0133&amp;#34;
mountFsTab = true
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后，在 &lt;code>/etc/fstab&lt;/code> 配置自动挂载：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">C: /mnt/c drvfs metadata,uid=1000,gid=1000,umask=022,fmask=033 0 0
D: /mnt/d drvfs metadata,uid=1000,gid=1000,umask=022,fmask=133 0 0
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意：第三方终端安装在哪个盘，该 fmask 就设置为 &lt;code>033&lt;/code>，否则会出现使用系统终端可以启动 WSL 系统，而用第三方终端则不行。&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//superuser.com/questions/1275940/wsl-mounted-file-permissions">https://superuser.com/questions/1275940/wsl-mounted-file-permissions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//devblogs.microsoft.com/commandline/chmod-chown-wsl-improvements/">https://devblogs.microsoft.com/commandline/chmod-chown-wsl-improvements/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//zuyunfei.com/2018/06/15/file-system-configuration-in-wsl/">http://zuyunfei.com/2018/06/15/file-system-configuration-in-wsl/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="30-如何批量修改某个目录下的目录权限为-755文件权限为-644">30. 如何批量修改某个目录下的目录权限为 755，文件权限为 644&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">find ./ -type f -print |xargs chmod 644
find ./ -type d -print|xargs chmod 755
ls -d */ | xargs -I {} chmod 755 {}
ls -p | grep -v / | xargs -I {} chmod 644 {}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="31-在-windows-桌面环境直接编辑-wsl-内的目录和文件自动挂载的目录和文件除外有什么后果">31. 在 Windows 桌面环境直接编辑 WSL 内的目录和文件（自动挂载的目录和文件除外）有什么后果？&lt;/h3>
&lt;p>可能会造成权限错误，在 WSL 环境下无法访问、修改该文件内容。&lt;/p>
&lt;h3 id="32-如何设置-vim-编辑器使其支持a-文件目录路径提示和自动补全-b-python-函数自动补全c-左侧显示目录树d-各种文件的语法高亮">32. 如何设置 Vim 编辑器，使其支持：a) 文件/目录路径提示和自动补全； b) Python 函数自动补全；c) 左侧显示目录树；d) 各种文件的语法高亮&lt;/h3>
&lt;p>首先，安装 Vundle 插件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim #安装vundle
cd ~
vi .vimrc
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后，配置 &lt;code>~/.vimrc&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">if &amp;amp;compatible
set nocompatible
end
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
# Let Vundle manage Vundle
Bundle &amp;#39;gmarik/vundle&amp;#39;
# Define bundles via Github repos
# 标签导航
Bundle &amp;#39;majutsushi/tagbar&amp;#39;
Bundle &amp;#39;vim-scripts/ctags.vim&amp;#39;
# 静态代码分析
Bundle &amp;#39;scrooloose/syntastic&amp;#39;
# 文件搜索
Bundle &amp;#39;kien/ctrlp.vim&amp;#39;
# 目录树导航
Bundle &amp;#34;scrooloose/nerdtree&amp;#34;
# 美化状态栏
Bundle &amp;#34;Lokaltog/vim-powerline&amp;#34;
# 主题风格
# python自动补全 --&amp;gt;
Bundle &amp;#39;davidhalter/jedi-vim&amp;#39;
Bundle &amp;#34;klen/python-mode&amp;#34;
# 括号匹配高亮 --&amp;gt;
Bundle &amp;#39;kien/rainbow_parentheses.vim&amp;#39;
# 可视化缩进
Bundle &amp;#39;nathanaelkane/vim-indent-guides&amp;#39;
if filereadable(expand(&amp;#34;~/.vimrc.bundles.local&amp;#34;))
source ~/.vimrc.bundles.local
endif
filetype on
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最后，进入 vim 安装插件&lt;/p>
&lt;p>&lt;code>:PluginInstall&lt;/code> 安装插件等待 Done&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//github.com/VundleVim/Vundle.vim">https://github.com/VundleVim/Vundle.vim&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//medium.com/%40huntie/10-essential-vim-plugins-for-2018-39957190b7a9">https://medium.com/@huntie/10-essential-vim-plugins-for-2018-39957190b7a9&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.slant.co/topics/1224/~best-plugin-managers-for-vim">https://www.slant.co/topics/1224/~best-plugin-managers-for-vim&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.slant.co/versus/4081/17720/~pathogen_vs_asyncrun-vim">https://www.slant.co/versus/4081/17720/~pathogen_vs_asyncrun-vim&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//stackshare.io/stackups/neobundle-vs-vim-plug-vs-vundle">https://stackshare.io/stackups/neobundle-vs-vim-plug-vs-vundle&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.ostechnix.com/manage-vim-plugins-using-vundle-linux/">https://www.ostechnix.com/manage-vim-plugins-using-vundle-linux/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="33-什么是-x-server">33. 什么是 X server?&lt;/h3>
&lt;p>Unix 及类 Unix 系统上的图形用户界面称为 X。X是用来图形化显示的一个程序，它以服务器的形式工作，可以在本地电脑运行，通过本地和服务器之间的联系可以在本地图形化显示。&lt;/p>
&lt;p>X server 是 Linux 系统里面图形接口服务器的简称。X server 管理客户端的硬件，包括接收键盘/鼠标等设备的输入信息，并且将图形绘制在屏幕上。Windows 系统的界面是这个系统不可分割的一部分，各种窗口操作界面显示都是由系统核心直接管理的，而 Linux 的图形界面并不是系统的必要组成部分，它可以在无界面的条件下运行。当需要 Linux 提供界面的时候，系统就会建立一个或者数个 X server，通过 X 协议跟窗口管理器交互，由独立于系统的应用程序来产生窗口，状态栏，按钮之类的交互界面。&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/X_server">https://en.wikipedia.org/wiki/X_server&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/X_Window%E7%B3%BB%E7%B5%B1">https://zh.wikipedia.org/wiki/X_Window%E7%B3%BB%E7%B5%B1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//blog.csdn.net/vic_qxz/article/details/79073558">https://blog.csdn.net/vic_qxz/article/details/79073558&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="34-manjaro-deepin-linux-是一个什么样的存在">34. Manjaro Deepin Linux 是一个什么样的存在？&lt;/h3>
&lt;p>Manjaro 是一款基于 Arch 的带 Deepin 外壳的操作系统，它是近年来最火热的桌面 Linux 操作系统之一（&lt;a href="https://link.zhihu.com/?target=https%3A//distrowatch.com/dwres.php%3Fresource%3Dpopularity">https://distrowatch.com/dwres.php?resource=popularity&lt;/a>）。它默认支持多种桌面环境和窗口管理界面，并分别提供 ISO安装镜像（XFCE、KDE、Cinnamon、GNOME、MATE，以及 Deepin）。并且原生使用 Arch 的 Pacman 进行软件滚动安装，可以让你方便、稳定的用上最新的软件包。&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.manjaro.cn/">https://www.manjaro.cn/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.manjaro.org/">https://www.manjaro.org/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//www.mamicode.com/info-detail-2359428.html">http://www.mamicode.com/info-detail-2359428.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="35-centos-系统如何开放指定端口的入和出的访问">35. Centos 系统如何开放指定端口的入和出的访问？&lt;/h3>
&lt;p>修改设置文件&lt;code>/etc/sysconfig/selinux&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">SELINUX=disabled
SELINUXTYPE=targeted
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>重启系统 然后修改iptables&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">iptables -A INPUT -m state --state NEW -p tcp --dport 8080 -j ACCEPT
sudo service iptables save
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果是使用 firewall ：&lt;/p>
&lt;ul>
&lt;li>查询已开放的端口：&lt;code>netstat -anp&lt;/code>&lt;/li>
&lt;li>查询指定端口是否已开：&lt;code>firewall-cmd --query-port=666/tcp&lt;/code>&lt;/li>
&lt;li>添加指定需要开放的端口：&lt;code>firewall-cmd --add-port=123/tcp --permanent&lt;/code>&lt;/li>
&lt;li>重载入添加的端口：&lt;code>firewall-cmd --reload&lt;/code>&lt;/li>
&lt;li>查询指定端口是否开启成功：&lt;code>firewall-cmd --query-port=123/tcp&lt;/code>&lt;/li>
&lt;li>移除指定端口：&lt;code>firewall-cmd --permanent --remove-port=123/tcp&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//ask.xmodulo.com/open-port-firewall-centos-rhel.html">http://ask.xmodulo.com/open-port-firewall-centos-rhel.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//stackoverflow.com/questions/19034542/how-to-open-port-in-centos">https://stackoverflow.com/questions/19034542/how-to-open-port-in-centos&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.rootusers.com/how-to-open-a-port-in-centos-7-with-firewalld/">https://www.rootusers.com/how-to-open-a-port-in-centos-7-with-firewalld/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="36-centos-和-ubuntu-系统如何查看当前服务器的-ip-地址和-mac-地址">36. Centos 和 Ubuntu 系统如何查看当前服务器的 IP 地址和 MAC 地址?&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">ifconfig
ifconfig -a
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//unix.stackexchange.com/questions/39501/difference-between-ifconfig-and-ipconfig">https://unix.stackexchange.com/questions/39501/difference-between-ifconfig-and-ipconfig&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.zhihu.com/question/21331450">https://www.zhihu.com/question/21331450&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//blog.csdn.net/tanga842428/article/details/79405451">https://blog.csdn.net/tanga842428/article/details/79405451&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="37-centos-和-ubuntu-系统如何查看即时网速">37. Centos 和 Ubuntu 系统如何查看即时网速？&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">sudo watch -n 1 &amp;#34;/sbin/ifconfig eth0 | grep bytes&amp;#34;
sudo apt install nethogs / sudo yum install nethogs
nethogs eth0
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.binarytides.com/linux-commands-monitor-network/">https://www.binarytides.com/linux-commands-monitor-network/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.cyberciti.biz/faq/howto-determine-ethernet-connection-speed/">https://www.cyberciti.biz/faq/howto-determine-ethernet-connection-speed/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//www.aboutlinux.info/2005/10/find-speed-of-your-ethernet-card-in.html">http://www.aboutlinux.info/2005/10/find-speed-of-your-ethernet-card-in.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//unix.stackexchange.com/questions/172573/determine-ethernet-speed-in-rhel-6">https://unix.stackexchange.com/questions/172573/determine-ethernet-speed-in-rhel-6&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.maketecheasier.com/monitor-network-bandwith-linux/">https://www.maketecheasier.com/monitor-network-bandwith-linux/&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="38-如果你没有买域名如何在本地模拟某个域名的访问">38. 如果你没有买域名，如何在本地模拟某个域名的访问？&lt;/h3>
&lt;ul>
&lt;li>Windows 用户修改 &lt;code>C:\Windows\System32\drivers\etc\hosts&lt;/code>&lt;/li>
&lt;li>Linux 用户修改 &lt;code>/etc/hosts&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text"># 如模拟 life2cloud.com 访问
127.0.0.1 life2cloud.com
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Hosts_(file)">https://en.wikipedia.org/wiki/Hosts_(file)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//baike.baidu.com/item/hosts/10474546">https://baike.baidu.com/item/hosts/10474546&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//gist.github.com/zenorocha/18b10a14b2deb214dc4ce43a2d2e2992">https://gist.github.com/zenorocha/18b10a14b2deb214dc4ce43a2d2e2992&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.cnblogs.com/itfat/p/9212698.html">https://www.cnblogs.com/itfat/p/9212698.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//piaoyi.org/computer/hosts-path.html">http://piaoyi.org/computer/hosts-path.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//jingyan.baidu.com/article/9f7e7ec04dacc06f281554dd.html">https://jingyan.baidu.com/article/9f7e7ec04dacc06f281554dd.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="39-如何查看并设置当前环境的语言en_usutf-8-和-zh_cnutf-8-分别代表什么">39. 如何查看并设置当前环境的语言？en_us.utf-8 和 zh_cn.utf-8 分别代表什么？&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text"># 使用 `locale` 查看当前语言环境
locale
echo $LANG；
## en_US.UTF-8：你说英语，你在美国，字符集是utf-8
## zh_CN.UTF-8：你说中文，你在中国，字符集是utf-8
# 设置中文环境
export LC_ALL=zh_CN.UTF-8
# 设置英文环境
export LC_ALL=en_US.UTF-8
## en_US.UTF-8、zh_CN.UTF-8叫做字符集，就是说‘A’、‘B’、‘中’、‘国’等对应的整数值，en_US.UTF-8只包含了ASCII码，zh_CN.UTF-8包含了6000多个汉字
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>语言环境定义来所在环境的时间、日期格式、货币符号等人们的常用表达习惯。&lt;code>en_us.utf-8&lt;/code>表示美式英语环境，&lt;code>zh_cn.utf-8&lt;/code>表示中文环境。如在&lt;code>en_us.utf-8&lt;/code>中货币符号表示为&lt;code>$&lt;/code>，而在&lt;code>zh_cn.utf-8&lt;/code>中则表示为&lt;code>¥&lt;/code>。&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//stackoverflow.com/questions/21153485/what-is-the-different-of-zh-cn-utf-8-and-en-us-utf-8-in-nix-locale-setting">https://stackoverflow.com/questions/21153485/what-is-the-different-of-zh-cn-utf-8-and-en-us-utf-8-in-nix-locale-setting&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.cnblogs.com/R-zqiang/archive/2012/11/23/2785125.html">https://www.cnblogs.com/R-zqiang/archive/2012/11/23/2785125.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//docs.oracle.com/cd/E19455-01/806-0169/6j9hsml3j/index.html">https://docs.oracle.com/cd/E19455-01/806-0169/6j9hsml3j/index.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//blog.csdn.net/yunhuang2010/article/details/8109578">https://blog.csdn.net/yunhuang2010/article/details/8109578&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//www.cnblogs.com/hubery/p/5973281.html">http://www.cnblogs.com/hubery/p/5973281.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="40-如何新增一个用户并赋予该用户-root-权限">40. 如何新增一个用户并赋予该用户 root 权限？&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text"># 添加用户
adduser eric
# 初始化密码
passwd eric
## Changing password for user eric.
## New UNIX password: //在这里输入新密码
## Retype new UNIX password: //再次输入新密码
## passwd: all authentication tokens updated successfully.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>修改用户 sudo 权限：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text"># 方法一：修改 /etc/sudoers 文件，找到下面一行，把前面的注释（#）去掉
adduser username；
## Allows people in group wheel to run all commands
%wheel ALL=(ALL) ALL
## 然后修改用户，使其属于root组（wheel），命令如下：
usermod -g root username
## 修改完毕，现在可以用新帐号登录，然后用命令 su – ，即可获得root权限进行操作。
# 方法二：修改 /etc/sudoers 文件，找到下面一行，在root下面添加一行，如下所示：
## Allow root to run any commands anywhere
root ALL=(ALL) ALL
username ALL=(ALL) ALL
# 方法三：修改 /etc/passwd 文件，找到如下行，把用户ID修改为 0 ，如下所示：
username❌0:33:username:/data/webroot:/bin/bash
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果你希望用户在使用 sudo 权限时不需要输入密码，可以将&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">username ALL=(ALL) ALL` 修改为 `username ALL=(ALL) NOPASSWD: ALL
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>参考资料：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//linuxhandbook.com/useradd-vs-adduser/">https://linuxhandbook.com/useradd-vs-adduser/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//askubuntu.com/questions/345974/what-is-the-difference-between-adduser-and-useradd">https://askubuntu.com/questions/345974/what-is-the-difference-between-adduser-and-useradd&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//www.linuxso.com/command/useradd.html">http://www.linuxso.com/command/useradd.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=http%3A//www.runoob.com/linux/linux-comm-adduser.html">http://www.runoob.com/linux/linux-comm-adduser.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.tecmint.com/add-users-in-linux/">https://www.tecmint.com/add-users-in-linux/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://link.zhihu.com/?target=https%3A//www.garron.me/en/go2linux/useradd-vs-adduser-ubuntu-linux.html">https://www.garron.me/en/go2linux/useradd-vs-adduser-ubuntu-linux.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="41-跟-nano-相比vim-的优势在哪里在-vim-里p-与-p-两种指令下粘贴的效果有什么区别">41. 跟 nano 相比，vim 的优势在哪里？在 vim 里，p 与 P 两种指令下粘贴的效果有什么区别？&lt;/h3>
&lt;p>nano 简洁，vim 强大。vim 相当于 nano 的升级版，有一定学习难度。vim 能够实现的功能也更加丰富一些，比如可以分割窗口、语法高亮等。如果你下定决心想学习 Linux 系统，建议你先把 vim 编辑器作为必学技能之一。&lt;/p>
&lt;p>小写 p 代表贴至游标后（下），因为游标是在具体字符的位置上，所以实际是在该字符的后面；大写 P 代表贴至游标前（上）&lt;/p>
&lt;h3 id="42-在vim中编辑完文件后显示-e45-readonly-option-is-set-时如何强制写入该档案并保存退出">42. 在vim中，编辑完文件后显示 E45: ‘readonly’ option is set 时，如何强制写入该档案并保存退出？&lt;/h3>
&lt;p>使用&lt;code>!&lt;/code>强制保存并退出，&lt;code>:wq!&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">sudo vi /etc/crontab 命令打开文件，此时便是以 root 权限进入该文件。
# 退出文件使用 :wq! 就可以了。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="编程题">编程题&lt;/h2>
&lt;h3 id="1-使用-bash-实现一个函数输入整数-n得到-1-到-n-的累加和">1. 使用 bash 实现一个函数，输入整数 n，得到 1 到 n 的累加和&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">#read -p &amp;#34;n=&amp;#34; n
n=10
sum=0
i=1
while (($i&amp;lt;=$n))
do
sum=$(($sum +$i))
i=$(($i+1))
done
echo &amp;#34;n=$n； CUSUM=$sum&amp;#34;
# 方法1
#!/bin/bash
echo `expr $1 \* \( 1 + $1 \) / 2`
# 方法2
#!/bin/bash
score=0
for i in $(seq 1 $1)
do
score=`expr ${score} + ${i}`
done
echo ${score}
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-通过-shell-命令提取-gtf-中编码基因的-gene-symbol-和-gene-id">2. 通过 Shell 命令提取 gtf 中编码基因的 gene symbol 和 gene id&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">grep &amp;#39;gene_biotype &amp;#34;protein_coding&amp;#34;&amp;#39; Homo_sapiens.GRCh38.89.chr.gtf | \
awk -F&amp;#34;[\t]&amp;#34; &amp;#39;{print $9}&amp;#39; | \
sed &amp;#39;s/； /\n/g&amp;#39; | \
awk &amp;#39;BEGIN{printf &amp;#34;%10s %10s\n&amp;#34;,&amp;#34;gene_id&amp;#34;,&amp;#34;gene_name\n&amp;#34;} {if ($1==&amp;#34;gene_id&amp;#34;) printf &amp;#34;%10s&amp;#34;,$2；else if ($1==&amp;#34;gene_name&amp;#34;) printf &amp;#34;%10s\n&amp;#34;,$2}&amp;#39; | \
uniq &amp;gt;gtf_geneid_genesymbol.txt
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3-假设有如下文件-sampletxt文件中包含有若干列重复列请保留一列重复列并不影响列顺序">3. 假设有如下文件 “sample.txt”，文件中包含有若干列重复列。请保留一列重复列，并不影响列顺序。&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">awk -F, &amp;#39;NR==1{for(i=1；i&amp;lt;=NF；i++)if(!($i in v)){ v[$i]；t[i]}}{s=&amp;#34;&amp;#34;； for(i=1；i&amp;lt;=NF；i++)if(i in t)s=s sprintf(&amp;#34;%s,&amp;#34;,$i)；if(s){sub(/,$/,&amp;#34;&amp;#34;,s)；print s}} &amp;#39; sample.csv
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4-使用-bash-编程实现时间戳功能如下为-ngsjs-的-rtime_stamp-命令行程序r语言输出">4. 使用 bash 编程实现时间戳功能，如下为 ngsjs 的 rtime_stamp 命令行程序（R语言）输出&lt;/h3>
&lt;blockquote>
&lt;p>$ rtime_stamp
[[1]]
[1] “2019_04_03_18_53_44_” “2019_04_03_18_53_” “2019_04_03_18_”
[4] “2019_04_03_” “2019_04_” “2019_”
[[2]]
[1] “2019-04-03-18-53-44-” “2019-04-03-18-53-” “2019-04-03-18-”
[4] “2019-04-03-” “2019-04-” “2019-”
[[3]]
[1] “2019/04/03/18/53/44/” “2019/04/03/18/53/” “2019/04/03/18/”
[4] “2019/04/03/” “2019/04/” “2019/”
$ rtime_stamp -r ‘x[[1]]’
2019_04_03_18_56_55_
2019_04_03_18_56_
2019_04_03_18_
2019_04_03_
2019_04_
2019_
$ rtime_stamp -r ‘x[[1]][1]’
2019_04_03_18_57_18_&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">[yangyang@izuf6btm1dq2w64mt5q889z practice]$ date +%F-%H-%M-%S
2019-04-06-17-36-46
[yangyang@izuf6btm1dq2w64mt5q889z practice]$ date +%Y%M%d%H%M%S
20193906173947
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="5-尝试使用源码编译安装最新版本的-r记录过程中遇到的问题同时使用系统自带的包管理器如-centos-的yumdebianubuntu-的-aptarchmanjaro-的-pacmanconda-和-spack-安装相同版本的-r">5. 尝试使用源码编译安装最新版本的 R，记录过程中遇到的问题。同时使用系统自带的包管理器（如 centos 的yum；Debian/Ubuntu 的 apt；arch、manjaro 的 pacman）、conda 和 spack 安装相同版本的 R。&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text"># 下载 R 源码包
cd /path/opt/
mkdir R
cd R
wget https://mirrors.tuna.tsinghua.edu.cn/CRAN/src/base/R-3/R-3.5.3.tar.gz
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下面是源代码包下载完成时的样子：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">Resolving mirrors.tuna.tsinghua.edu.cn (mirrors.tuna.tsinghua.edu.cn)... 101.6.8.193, 2402:f000:1:408:8100::1
Connecting to mirrors.tuna.tsinghua.edu.cn (mirrors.tuna.tsinghua.edu.cn)|101.6.8.193|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 30205979 (29M) [application/x-gzip]
Saving to: ‘R-3.5.3.tar.gz’
R-3.5.3.tar.gz 100%[======================================================&amp;gt;] 28.81M 5.64MB/s in 5.2s
# 解压缩 tar.gz 格式的压缩文件
tar -xzvf R-3.5.3.tar.gz
# 进行 R 源码编译（之前已用 apt 安装过 R，所以很多依赖包已经安装完毕）
cd R-3.5.3
# 查看帮助
./configure --help
# 配置编译参数，并检查编译依赖库和变量是否存在
# 默认使用系统自带的 gcc 8.3 进行编译
# --with-x 与后续一些调用 X 窗口的包相关，一般建议添加
# --enable-R-shlib 可以使 R 的动态库共享，否则后续安装包可能会出现 Error in dyn.load
./configure --enable-prebuilt-html --with-x --with-blas --with-lapack --enable-R-shlib --prefix=`pwd`
# 之前我遇到过的错误包括 zlib、bzip2、xz、pcre、curl 依赖未符合要求
# 需要安装指定版本，并配置 CFLAGS（如 -I{{zlib:install.dir}}/include） 和 LDFLAGS （如-I{{bzip2:install.dir}}/lib）
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果你看到下面输出，说明可以继续往下做了&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">R is now configured for x86_64-pc-linux-gnu
Source directory: .
Installation directory: /usr/local
C compiler: gcc -g -O2
Fortran 77 compiler: f95 -g -O2
Default C++ compiler: g++ -g -O2
C++98 compiler: g++ -std=gnu++98 -g -O2
C++11 compiler: g++ -std=gnu++11 -g -O2
C++14 compiler: g++ -std=gnu++14 -g -O2
C++17 compiler: g++ -std=gnu++17 -g -O2
Fortran 90/95 compiler: gfortran -g -O2
Obj-C compiler:
Interfaces supported: X11
External libraries: readline, BLAS(generic), LAPACK(generic), curl
Additional capabilities: PNG, JPEG, TIFF, NLS, cairo, ICU
Options enabled: shared R library, R profiling, static HTML
Capabilities skipped:
Options not enabled: shared BLAS, memory profiling
Recommended packages: yes
# 进行编译得到二进制程序
make
make install
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>conda 是一个开源的软件包管理系统和环境管理系统，用于安装多个版本的软件包及其依赖关系，并在它们之间轻松切换&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text"># 安装Conda
sudo yum install bzip2
wget -c https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
chmod 777 Miniconda3-latest-Linux-x86_64.sh #给执行权限
bash Miniconda3-latest-Linux-x86_64.sh #运行
#安装R
conda search R
conda install r==3.5.1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a href="https://link.zhihu.com/?target=https%3A//spack.io/">Spack&lt;/a>是一种主要针对超级计算机（High Performance Computing，HPC）运行环境开发的科学软件包管理器。如果你之前使用过&lt;a href="https://link.zhihu.com/?target=https%3A//www.anaconda.com/">conda&lt;/a>，那么我非常推荐你在你的HPC环境上同时使用 Spack 工具，特别是针对某些运行时（runtime）不符合你预期的 conda 预编译程序。&lt;/p>
&lt;p>目前可以运行在 Linux 和 macOS 操作系统的软件包管理器。它使安装科学软件变得容易。使用 Spack 可以构建具有多个版本，配置，平台和编译器的软件包，并且所有这些构建可以在同一台计算机上共存。&lt;/p>
&lt;p>Spack 与特定语言无关; 您可以使用 Python 或 R 构建软件堆栈 ，链接到用C，C ++或Fortran编写的库，并轻松 交换编译器。使用 Spack 安装在主目录中， 管理群集上的共享安装和模块，或构建组合版本的软件以进行测试。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text"># 安装 spack
cd /path/opt
git clone https://github.com/spack/spack.git
. spack/share/spack/setup-env.sh
# 安装 environment-modules
sudo yum install -y environment-modules
sudo apt-get install environment-modules
# 如果需要登录自动配置，则需将下面的内容添加至 ~/.bashrc（BASH） 或 ~/.zshrc（ZSH）
# 查看 environment-modules 安装路径 /usr/share/Modules 或 /usr/share/modules
## source /usr/share/Modules/init/zsh
## source /usr/share/Modules/init/bash
## source /usr/share/modules/init/zsh
## source /usr/share/modules/init/bash
export SPACK_ROOT=/home/ljf/opt/spack
. $SPACK_ROOT/share/spack/setup-env.sh
# 安装 R
spack install r
# 指定 R 版本
spack install r@3.5.3
# 指定 R 版本，并指定编译器版本
# spack compilers 查看目前可用的编译器
# spack compilers find 搜索目前可用的编译器
spack install r@3.5.3 %gcc@8.3.0
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="6-使用-spack-在指定不同版本的-gcc-编译器如8354-和-48情况下安装最新版本的r并比较一些-r-基础函数的速度在计算较大数据量时是否有变化">6. 使用 spack 在指定不同版本的 gcc 编译器（如8.3、5.4 和 4.8）情况下安装最新版本的R。并比较一些 R 基础函数的速度在计算较大数据量时是否有变化。&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;span class="lnt">187
&lt;/span>&lt;span class="lnt">188
&lt;/span>&lt;span class="lnt">189
&lt;/span>&lt;span class="lnt">190
&lt;/span>&lt;span class="lnt">191
&lt;/span>&lt;span class="lnt">192
&lt;/span>&lt;span class="lnt">193
&lt;/span>&lt;span class="lnt">194
&lt;/span>&lt;span class="lnt">195
&lt;/span>&lt;span class="lnt">196
&lt;/span>&lt;span class="lnt">197
&lt;/span>&lt;span class="lnt">198
&lt;/span>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;span class="lnt">201
&lt;/span>&lt;span class="lnt">202
&lt;/span>&lt;span class="lnt">203
&lt;/span>&lt;span class="lnt">204
&lt;/span>&lt;span class="lnt">205
&lt;/span>&lt;span class="lnt">206
&lt;/span>&lt;span class="lnt">207
&lt;/span>&lt;span class="lnt">208
&lt;/span>&lt;span class="lnt">209
&lt;/span>&lt;span class="lnt">210
&lt;/span>&lt;span class="lnt">211
&lt;/span>&lt;span class="lnt">212
&lt;/span>&lt;span class="lnt">213
&lt;/span>&lt;span class="lnt">214
&lt;/span>&lt;span class="lnt">215
&lt;/span>&lt;span class="lnt">216
&lt;/span>&lt;span class="lnt">217
&lt;/span>&lt;span class="lnt">218
&lt;/span>&lt;span class="lnt">219
&lt;/span>&lt;span class="lnt">220
&lt;/span>&lt;span class="lnt">221
&lt;/span>&lt;span class="lnt">222
&lt;/span>&lt;span class="lnt">223
&lt;/span>&lt;span class="lnt">224
&lt;/span>&lt;span class="lnt">225
&lt;/span>&lt;span class="lnt">226
&lt;/span>&lt;span class="lnt">227
&lt;/span>&lt;span class="lnt">228
&lt;/span>&lt;span class="lnt">229
&lt;/span>&lt;span class="lnt">230
&lt;/span>&lt;span class="lnt">231
&lt;/span>&lt;span class="lnt">232
&lt;/span>&lt;span class="lnt">233
&lt;/span>&lt;span class="lnt">234
&lt;/span>&lt;span class="lnt">235
&lt;/span>&lt;span class="lnt">236
&lt;/span>&lt;span class="lnt">237
&lt;/span>&lt;span class="lnt">238
&lt;/span>&lt;span class="lnt">239
&lt;/span>&lt;span class="lnt">240
&lt;/span>&lt;span class="lnt">241
&lt;/span>&lt;span class="lnt">242
&lt;/span>&lt;span class="lnt">243
&lt;/span>&lt;span class="lnt">244
&lt;/span>&lt;span class="lnt">245
&lt;/span>&lt;span class="lnt">246
&lt;/span>&lt;span class="lnt">247
&lt;/span>&lt;span class="lnt">248
&lt;/span>&lt;span class="lnt">249
&lt;/span>&lt;span class="lnt">250
&lt;/span>&lt;span class="lnt">251
&lt;/span>&lt;span class="lnt">252
&lt;/span>&lt;span class="lnt">253
&lt;/span>&lt;span class="lnt">254
&lt;/span>&lt;span class="lnt">255
&lt;/span>&lt;span class="lnt">256
&lt;/span>&lt;span class="lnt">257
&lt;/span>&lt;span class="lnt">258
&lt;/span>&lt;span class="lnt">259
&lt;/span>&lt;span class="lnt">260
&lt;/span>&lt;span class="lnt">261
&lt;/span>&lt;span class="lnt">262
&lt;/span>&lt;span class="lnt">263
&lt;/span>&lt;span class="lnt">264
&lt;/span>&lt;span class="lnt">265
&lt;/span>&lt;span class="lnt">266
&lt;/span>&lt;span class="lnt">267
&lt;/span>&lt;span class="lnt">268
&lt;/span>&lt;span class="lnt">269
&lt;/span>&lt;span class="lnt">270
&lt;/span>&lt;span class="lnt">271
&lt;/span>&lt;span class="lnt">272
&lt;/span>&lt;span class="lnt">273
&lt;/span>&lt;span class="lnt">274
&lt;/span>&lt;span class="lnt">275
&lt;/span>&lt;span class="lnt">276
&lt;/span>&lt;span class="lnt">277
&lt;/span>&lt;span class="lnt">278
&lt;/span>&lt;span class="lnt">279
&lt;/span>&lt;span class="lnt">280
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text"># 查看已安装编译器版本
spack compilers
# 搜索已安装的编译器
spack compiler find
# 测试系统默认使用 gcc 8.3.0
# 所以我先安装 gcc 6.4.0 和 4.8.5
# 耗时较久
# 如果你使用的是自带 spack 的大型超算服务器
# 可以直接使用 module avail 和 module load 分别加载这些 gcc 编译器
spack install gcc@6.4.0 gcc@4.8.5
# 再不同版本的编译器下分别安装 R
spack install r@3.5.3 %gcc@8.3.0 &amp;gt; r_3.5.3_gcc_8_3_install.log &amp;amp;
spack install r@3.5.3 %gcc@6.4.0 &amp;gt; r_3.5.3_gcc_6_4_0_install.log &amp;amp;
spack install r@3.5.3 %gcc@4.8.5 &amp;gt; r_3.5.3_gcc_4_8_5_install.log &amp;amp;
# 使用 module avail 查看已安装的 R
module avail
#&amp;gt; r-3.5.3-gcc-8.3-42ygaa5
#&amp;gt; r-3.5.3-gcc-6.4.0-xavmzr7
#&amp;gt; r-3.5.3-gcc-4.8.5-3zhievr
# 测试 cor 函数
# test_cor.R
dat_a &amp;lt;- 1:30000000
dat_b &amp;lt;- 1:30000000
for(i in 1:10) {
print(system.time(cor(dat_a, dat_b)))
}
# 加载 R
module load r-3.5.3-gcc-4.8.5-3zhievr
Rscript test_cor.R
echo &amp;#34;&amp;#34;
module load r-3.5.3-gcc-6.4.0-xavmzr7
Rscript test_cor.R
echo &amp;#34;&amp;#34;
module load r-3.5.3-gcc-8.3-42ygaa5
Rscript test_cor.R
# cor
user system elapsed
0.493 0.102 0.595
user system elapsed
0.450 0.091 0.541
user system elapsed
0.457 0.091 0.549
user system elapsed
0.458 0.088 0.547
user system elapsed
0.453 0.092 0.546
user system elapsed
0.444 0.100 0.544
user system elapsed
0.453 0.093 0.546
user system elapsed
0.455 0.090 0.545
user system elapsed
0.451 0.094 0.545
user system elapsed
0.454 0.089 0.543
user system elapsed
0.450 0.093 0.544
user system elapsed
0.453 0.091 0.544
user system elapsed
0.450 0.094 0.544
user system elapsed
0.455 0.086 0.542
user system elapsed
0.452 0.092 0.544
user system elapsed
0.451 0.096 0.547
user system elapsed
0.446 0.098 0.544
user system elapsed
0.451 0.088 0.539
user system elapsed
0.451 0.093 0.544
user system elapsed
0.450 0.097 0.547
user system elapsed
0.450 0.092 0.543
user system elapsed
0.452 0.093 0.546
user system elapsed
0.452 0.093 0.546
user system elapsed
0.449 0.098 0.548
user system elapsed
0.446 0.094 0.540
user system elapsed
0.450 0.098 0.548
user system elapsed
0.453 0.092 0.545
user system elapsed
0.451 0.094 0.545
user system elapsed
0.45 0.09 0.54
user system elapsed
0.453 0.094 0.548
# 测试 t.test 函数
# test_t.R
dat_a &amp;lt;- 1:30000000
dat_b &amp;lt;- 1:30000000
for(i in 1:10) {
print(system.time(t.test(dat_a, dat_b)))
}
# 加载 R
module load r-3.5.3-gcc-4.8.5-3zhievr
Rscript test_t.R
echo &amp;#34;&amp;#34;
module load r-3.5.3-gcc-6.4.0-xavmzr7
Rscript test_t.R
echo &amp;#34;&amp;#34;
module load r-3.5.3-gcc-8.3-42ygaa5
Rscript test_t.R
user system elapsed
1.454 0.320 1.774
user system elapsed
1.325 0.304 1.629
user system elapsed
1.291 0.307 1.599
user system elapsed
1.305 0.297 1.603
user system elapsed
1.288 0.309 1.597
user system elapsed
1.283 0.319 1.603
user system elapsed
1.306 0.312 1.617
user system elapsed
1.284 0.314 1.598
user system elapsed
1.286 0.313 1.600
user system elapsed
1.285 0.319 1.605
user system elapsed
1.384 0.318 1.704
user system elapsed
1.302 0.332 1.634
user system elapsed
1.574 0.357 1.933
user system elapsed
1.345 0.333 1.677
user system elapsed
1.292 0.306 1.599
user system elapsed
1.288 0.312 1.599
user system elapsed
1.386 0.306 1.693
user system elapsed
1.326 0.321 1.647
user system elapsed
1.296 0.303 1.598
user system elapsed
1.277 0.321 1.599
user system elapsed
1.385 0.315 1.701
user system elapsed
1.318 0.322 1.639
user system elapsed
1.291 0.308 1.601
user system elapsed
1.293 0.311 1.603
user system elapsed
1.284 0.316 1.600
user system elapsed
1.284 0.320 1.605
user system elapsed
1.300 0.323 1.623
user system elapsed
1.305 0.296 1.601
user system elapsed
1.292 0.310 1.609
user system elapsed
1.286 0.316 1.603
# 测试 lm 函数
# test_lm.R
dat_a &amp;lt;- 1:30000000
dat_b &amp;lt;- 1:30000000
for(i in 1:10) {
print(system.time(lm(dat_a ~ dat_b)))
}
# 加载 R
module load r-3.5.3-gcc-4.8.5-3zhievr
Rscript test_lm.R
echo &amp;#34;&amp;#34;
module load r-3.5.3-gcc-6.4.0-xavmzr7
Rscript test_lm.R
echo &amp;#34;&amp;#34;
module load r-3.5.3-gcc-8.3-42ygaa5
Rscript test_lm.R
user system elapsed
5.214 1.043 6.311
user system elapsed
4.769 1.025 5.794
user system elapsed
4.817 0.974 5.793
user system elapsed
4.759 0.995 5.756
user system elapsed
4.795 1.008 5.804
user system elapsed
4.789 0.998 5.787
user system elapsed
4.746 1.033 5.780
user system elapsed
4.766 1.023 5.790
user system elapsed
4.789 1.014 5.806
user system elapsed
4.734 1.021 5.761
user system elapsed
5.092 1.056 6.148
user system elapsed
4.833 0.968 5.802
user system elapsed
4.798 1.003 5.803
user system elapsed
4.736 1.007 5.743
user system elapsed
4.955 0.969 5.925
user system elapsed
4.801 0.994 5.796
user system elapsed
4.765 1.032 5.799
user system elapsed
4.781 1.015 5.797
user system elapsed
4.782 1.003 5.785
user system elapsed
4.728 1.009 5.739
user system elapsed
5.096 1.061 6.164
user system elapsed
4.789 1.002 5.794
user system elapsed
4.826 0.966 5.795
user system elapsed
4.733 1.007 5.740
user system elapsed
4.909 1.022 5.933
user system elapsed
4.771 1.025 5.797
user system elapsed
4.781 1.004 5.786
user system elapsed
4.786 0.997 5.785
user system elapsed
4.753 1.032 5.786
user system elapsed
4.725 1.030 5.756
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>发布于 2019-04-16&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>section01-环境配置-01</title><link>/post/section001-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-01/</link><pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate><guid>/post/section001-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-01/</guid><description>&lt;p>环境配置分两种，一种是语言本身的环境配置，一种是编写代码时所需要的编辑器。&lt;/p>
&lt;h2 id="1-先讲讲我们要讲的语言">1 先讲讲我们要讲的语言。&lt;/h2>
&lt;p>在这之前再讲语言的类型。&lt;/p>
&lt;h3 id="11-语言分机器语言汇编语言和高级语言">1.1 语言分机器语言，汇编语言，和高级语言。&lt;/h3>
&lt;p>机器语言，也即低级语言，就是CPU能够认识的语言，也就是二进制指令。如果让你写一段程序计算1+1，那就需要些大量的 1和0，显然正常人都没办法做到。这块以后如果有兴趣可以讲讲普通人如何用二进制编程，其实是挺有意思。类似摩尔电码一样，用1和0代表一系列运算。具象化的那就是《三体》里的人列计算机，仅仅通过1和0，构建出与门或门非门与非门等等，再在这个基础上进行逻辑运算。和目前的深度学习理念非常像。如果以后我会讲到深度学习，那就会先讲这个。&lt;/p>
&lt;p>先列几个机器语言：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">指令部份的示例:
&lt;span class="m">0000&lt;/span> 代表 加载（LOAD）
&lt;span class="m">0001&lt;/span> 代表 存储（STORE）
...
暂存器部份的示例:
&lt;span class="m">0000&lt;/span> 代表暂存器 A
&lt;span class="m">0001&lt;/span> 代表暂存器 B
...
存储器部份的示例:
&lt;span class="m">000000000000&lt;/span> 代表地址为 &lt;span class="m">0&lt;/span> 的存储器
&lt;span class="m">000000000001&lt;/span> 代表地址为 &lt;span class="m">1&lt;/span> 的存储器
&lt;span class="m">000000010000&lt;/span> 代表地址为 &lt;span class="m">16&lt;/span> 的存储器
&lt;span class="m">100000000000&lt;/span> 代表地址为 2^11 的存储器
集成示例:
0000,0000,000000010000 代表 LOAD A, &lt;span class="m">16&lt;/span>
0000,0001,000000000001 代表 LOAD B, &lt;span class="m">1&lt;/span>
0001,0001,000000010000 代表 STORE B, &lt;span class="m">16&lt;/span>
0001,0001,000000000001 代表 STORE B, &lt;span class="m">1&lt;/span>
...
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>是不是基本上就不是给人看的。&lt;/p>
&lt;p>低级语言，也称符号语言，就是在机器语言上改造出来的至少可以让人一眼看懂的语言，就是把操作性的指令，从0和1改造成约定俗成的英文字符，而且一般都是有英文原意的英文单词或缩写。比如把寄存器BX的内容送到AX中，用机器语言和汇编语言写就分别是：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="m">1000100111011000&lt;/span> 机器指令
mov ax,bx 汇编指令
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>区别还是挺明显。后者至少大概知道是啥意思。&lt;/p>
&lt;p>但是这样的程序写起来太痛苦，需要对计算机底层构成非常了解，比如这个CPU有几个寄存器，分别叫什么，分别用来做什么，哪个顺序优先，基本上就直接劝退人了。&lt;/p>
&lt;p>所以，后来就出现了高级语言。&lt;/p>
&lt;p>高级语言摆脱了计算机硬件结构的束缚，你想要计算1+1，不需要知道什么是寄存器、什么是加载、什么是储存、什么是缓存了，只需要按照约定的语法规范，以比较符合通常人类理解方式的表达写出语句，就可以得到想要的结果。&lt;/p>
&lt;p>这也是人类智慧的厉害之处，可以不断地抽象，不断地封装掉很多不需要知道的细节从而提高效率。就像我用手机，并不需要知道手机背后的原理即可。不然人类的知识无法短短的几百年里爆炸性增长。&lt;/p>
&lt;p>如果计算机是德国人发明，那应该后来的语言里的字母都是德文字母了，可是我们知道是美国人发明，所以就都是默认用英文字母。&lt;/p>
&lt;blockquote>
&lt;p>程序设计语言的类型：&lt;/p>
&lt;p>1、命令式语言。这种语言的语义基础是模拟“数据存储/数据操作”的图灵机可计算模型，十分符合现代计算机体系结构的自然实现方式。其中产生操作的主要途径是依赖语句或命令产生的副作用。现代流行的大多数语言都是这一类型，比如 Fortran、Pascal、Cobol、C、C++、Basic、Ada、Java、C# 等，各种脚本语言也被看作是此种类型。&lt;/p>
&lt;p>2、函数式语言。这种语言的语义基础是基于数学函数概念的值映射的λ算子可计算模型。这种语言非常适合于进行人工智能等工作的计算。典型的函数式语言如 Lisp、Haskell、ML、Scheme 、F#等。&lt;/p>
&lt;p>3、逻辑式语言。这种语言的语义基础是基于一组已知规则的形式逻辑系统。这种语言主要用在专家系统的实现中。最著名的逻辑式语言是 Prolog。&lt;/p>
&lt;p>4、面向对象语言。现代语言中的大多数都提供面向对象的支持，但有些语言是直接建立在面向对象基本模型上的，语言的语法形式的语义就是基本对象操作。主要的纯面向对象语言是 Smalltalk。&lt;/p>
&lt;p>虽然各种语言属于不同的类型，但它们各自都不同程度地对其他类型的运算模式有所支持。&lt;/p>
&lt;/blockquote>
&lt;p>阮一峰写过一篇逻辑式语言Prolog的&lt;a href="http://www.ruanyifeng.com/blog/2019/01/prolog.html">入门&lt;/a>。看看就好，基本上正常人都用不到。&lt;/p>
&lt;p>我们这里目前也只讲命令式语言，第一是这用的最广，第二是我也只会这个。函数式语言以后看情况。其实命令式语言也可用函数式编程的思想来编写代码。&lt;/p>
&lt;p>综上，语言级别从低到高是 机器语言&amp;gt;汇编语言&amp;gt;高级语言，执行效率上是 机器语言&amp;gt;汇编语言&amp;gt;高级语言。&lt;/p>
&lt;p>再打比方，就用医学来打比方，比如我想知道如果糖尿病患者出现了酮症酸中毒应该如何处理：&lt;/p>
&lt;p>高级语言就是写在课本上的：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">1.一般处理
监测血糖、血酮、尿酮、电解质和动脉血气分析。
2.补液
对重症酮症酸中毒患者十分重要，不仅有利于失水的纠正，而且有助于血糖的下降和酮体的消除。补液量应根据患者的失水程度因人而异。
3.补充胰岛素
小剂量胰岛素疗法即可对酮体生成产生最大抑制，而又不至引起低血糖及低血钾，当血糖降至13.9mmol/L时开始输入5%葡萄糖液，增加热卡有利于酮体纠正。
4.纠正电解紊乱
治疗过程中应密切监测血钾变化，心电图监护可从T波变化中灵敏反映血钾高低，有利于及时调整补钾的浓度和速度。
5.纠正酸碱平衡失调
糖尿病酮症酸中毒的生化基础是酮体生成过多，而非HCO3-丢失过多，治疗应主要采用胰岛素抑制酮体生成，促进酮体的氧化，酮体氧化后产生HCO3-，酸中毒自行纠正。过早、过多地给予NaHCO3有害无益。
6.治疗诱因
对酮症酸中毒患者的治疗除积极纠正代谢紊乱外，还必须积极寻找诱发因素并予以相应治疗，例如严重感染、心肌梗死、外科疾病、胃肠疾患等。其中，感染是最常见的诱因，应及早使用敏感抗生素。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>写得很通俗易懂对不对？&lt;/p>
&lt;p>但是真的出现这种情况的时候，不可能就这么让护士去执行啊。什么叫小剂量胰岛素疗法？就是根据患者体重，0.1U/(kg·h)，每公斤体重每小时静滴输入0.1单位的胰岛素。问题是，这样说护士依然无法执行。&lt;/p>
&lt;p>所以医生在临床上，真正写的是可以让护士看懂去执行的医嘱：&lt;/p>
&lt;p>首先要知道患者的体重，比如70公斤，那么就是每小时要输入7个单位的胰岛素，那怎么配液呢？如果配液的浓度是1U/ml，那么每小时输入100ml液体。正常人一天需要摄入2000-2500毫升液体，输入100ml在正常范围内，不过还要考虑病人是否有其他输液，避免短时间内输入太多。常用的短效胰岛素一支的规格包含300单位，常见的生理盐水规格是100毫升、200毫升和500毫升，为了方便计算，可以取200单位，溶于200ml液体，或者500单位，溶于500ml液体。然后加输液泵，调好速度，定期检测。因为快速输入胰岛素影响体液里钾的分布，所以往往还要加上氯化钾补充钾，并检测生化指标里的钠钾离子浓度变化。所以最后写下来大致如下：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>配伍&lt;/th>
&lt;th>临时医嘱&lt;/th>
&lt;th>备注&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>血糖监测&lt;/td>
&lt;td>每小时测&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>500U短效胰岛素&lt;/td>
&lt;td>输液泵，速度100ml/H。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>500ml生理盐水&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>2g氯化钾&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&lt;/td>
&lt;td>心电监测&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>这就是医疗执行时候的机器语言or汇编语言，可以让执行者看懂，护士拿到医嘱单就直接去执行了，但是非专业人士可能就糊里糊涂不知道啥是啥。&lt;/p>
&lt;hr>
&lt;h3 id="12-高级语言又主要分编译型和解释型">1.2 高级语言又主要分编译型和解释型。&lt;/h3>
&lt;p>编译型语言就是需要先把我们写的字符，通过&lt;strong>编译器&lt;/strong>，转换另一个文件，这个文件里包含的就是机器可以认的二进制字符，也就是机器语言，从而运行这个文件让程序跑起来。如果不修改文件，想每次运行程序的时候，直接运行编译出来的文件即可；而如果每次我们修改了程序，则就需要重新编译一遍，再重新运行新生产的文件。&lt;/p>
&lt;p>解释型语言就是，不会再生成另一个文件了，而是&lt;strong>编译器&lt;/strong>直接在现在我们编写的这个文件上逐行编译成各自解释型语言自己设定的中间码，再通过&lt;strong>解释器&lt;/strong>翻译成机器语言，然后运行。因此，如果每次想运行程序，都需要重新编译再翻译一遍。&lt;/p>
&lt;p>打比方的话，编译就是，接见外国人，可以把写好本国语言的稿子，直接让翻译翻译成外语，让外国人直接看；翻译就是，接见外国人，自己拿着本国语言的稿子念，念一句旁边的翻译翻译一句让外国人听。&lt;/p>
&lt;p>所以，就知道编译型语言执行起来要比解释型语言快；但是就没有解释型语言方便，特别是跨平台。因为翻译出来的稿子只能给该语言的外国人看，想给另一个国家的人看还得重新翻译；而随身带的翻译一般都通晓2-3个国家的语言，可以随时接见下一个国家的外国人。&lt;/p>
&lt;p>所以编译型语言写下来在一个平台编译好的文件不能直接传给另一个平台去执行，还得传原代码重新编译；而解释型语言只有这个源代码，传到另一个平台继续解释执行即可。&lt;/p>
&lt;p>所以通常对性能有要求的开发，比如软件开发、数据库开发，就用编译型语言；而对跨平台开发兼容有要求的开发，比如互联网（谁也不知道对面的用户用的是Windows还是Mac还是Linux还是什么其他操作系统），就用解释型语言。&lt;/p>
&lt;h3 id="13-编程语言还分动态类型和静态类型">1.3 编程语言还分动态类型和静态类型。&lt;/h3>
&lt;p>因为编程本质上就是跟 变量和数据打交道。&lt;/p>
&lt;p>数据我们知道，比如33，这是一个整形int；3.33，这是一个浮点型float；&amp;ldquo;1&amp;rdquo;，这就不是数字，是一个字符char；“我”或者“love”，这是一个字符串string；等等。&lt;/p>
&lt;p>所以任何语言里的数据都需要设定好类型，方便放进硬件内存里做处理。&lt;/p>
&lt;p>然后我们就是用不同的变量去引入数据做处理。&lt;/p>
&lt;p>这里如果变量也要求有类型，该类型的变量只能引入该类型的数据，比如 一个变量age，设定为int，它就只能被int类型的数字33赋值，不能被string &amp;ldquo;Tom&amp;quot;赋值，这样做的话，编译器会报错直接不让程序跑成功。这种要求严格的语言就是&lt;strong>静态类型&lt;/strong>。这样的好处是程序规范严格，但是写起来就很繁琐。&lt;/p>
&lt;p>而没有这种限制的则是&lt;strong>动态类型&lt;/strong>。比如python，你可以一开始给 age 赋值整形int，后来又给它赋值string &amp;ldquo;Tom&amp;quot;也可以，编译器不报错。这样程序写起来快得飞起，命名函数、赋值的时候不用考虑太多，一把梭就是。&lt;/p>
&lt;p>但是我们知道，如果一个项目超过2个人协作、代码超过一万行之后，谁也不能保证变量的命名和赋值会不会冲突。如果是动态类型，编译之后不会报错，但是真的运行起来之后，应该输出age年龄的地方输出了&amp;quot;Tom&amp;rdquo;，那这就算是业务事故，不能算作成功的，得一一排查到底是哪里给整错了。所以这个时候反而体现出静态类型的好处了。&lt;/p>
&lt;p>所以动态类型语言通常是作为脚本语言运行，不会写太长太大的项目，几万行以内，两三个人协作，认知统一，代码规范。&lt;/p>
&lt;h3 id="14-数据类型检查上还分强类型和弱类型">1.4 数据类型检查上还分强类型和弱类型&lt;/h3>
&lt;p>因为数据都必须有类型，而对数据运算时类型的要求的差异就导致有强弱的差别。&lt;/p>
&lt;p>强类型定义语言：强制数据类型定义的语言。也就是说，一旦一个数据被指定了某个数据类型，如果不经过强制转换，那么它就永远是这个数据类型了。举个例子：数据1是整型，数据&amp;quot;1&amp;quot;是字符，1+&amp;ldquo;1&amp;quot;的运算不支持，会报错，那么就是强类型语言。比如python，就不支持，如果代码是&lt;code>print(1+&amp;quot;1&amp;quot;)&lt;/code>，就会报错：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">TypeError: unsupported operand type&lt;span class="o">(&lt;/span>s&lt;span class="o">)&lt;/span> &lt;span class="k">for&lt;/span> +: &lt;span class="s1">&amp;#39;int&amp;#39;&lt;/span> and &lt;span class="s1">&amp;#39;str&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>报错就是不支持&amp;rsquo;int' 和 &amp;lsquo;str&amp;rsquo;的加法运算。&lt;/p>
&lt;p>弱类型定义语言：数据类型可以被忽略的语言。它与强类型定义语言相反, 一个数据可以赋不同数据类型的值。比如，JavaScript，1+&amp;ldquo;1&amp;quot;就会输出&amp;quot;11&amp;rdquo;，因为它把整形数字1自行转换成&amp;quot;1&amp;quot;进行了相加。&lt;/p>
&lt;p>注意，这里网上常见的说法是：&lt;/p>
&lt;blockquote>
&lt;p>数据类型可以被忽略的语言。它与强类型定义语言相反, 一个变量可以赋不同数据类型的值。&lt;/p>
&lt;/blockquote>
&lt;p>实际上是数据自身可以改变数据类型，而不是变量。&lt;/p>
&lt;p>注意，数据一定有数据类型，变量可以有可以没有。&lt;/p>
&lt;h3 id="15-面向对象">1.5 面向对象&lt;/h3>
&lt;p>然后变成里还有面向过程、面向对象、面向函数的说法。&lt;/p>
&lt;p>这块我们到了面向对象的时候再说。我当年在这里也是挣扎了很久才懂了一点点，所以现在并不适合说。&lt;/p>
&lt;hr>
&lt;h2 id="2-下面再讲讲我会涉及到的编程语言并且用上面的概念都定义一下">2 下面再讲讲我会涉及到的编程语言，并且用上面的概念都定义一下。&lt;/h2>
&lt;h3 id="cc">C/C++&lt;/h3>
&lt;p>当之无愧的首选C/C++。&lt;/p>
&lt;p>C是编译型的、静态的、强类型的面向过程的语言。&lt;/p>
&lt;p>C++是编译型的、静态的、强类型的面向对象的语言。&lt;/p>
&lt;p>任何知识点，我都会先用伪代码配合着C/C++，讲一遍，然后再说其他语言是如何处理的。&lt;/p>
&lt;p>我们可以不会写C/C++，但是如果想在编程基础上有所精进，必须得能看得懂500行以上的C/C++代码。因为后面所有的命令式编程语言，都是在C的基础上衍生出来的。其他语言之间差异很大，但是都离不开C/C++。&lt;/p>
&lt;p>Rust和C#就先不讲了，以后看情况。&lt;/p>
&lt;h3 id="golang">Golang&lt;/h3>
&lt;p>Go太火了，不讲不行。&lt;/p>
&lt;p>Go是编译型的、静态的、强类型的面向对象的语言。&lt;/p>
&lt;h3 id="java-和-kotlin">Java 和 kotlin&lt;/h3>
&lt;p>市面上最流行的编程语言，几乎LeetCode上的解法，或者用C++，或者用Java，而且貌似Java的更多。kotlin因为是和Java兼容，所以也可以一并讲了。&lt;/p>
&lt;p>Java 和 kotlin是解释型的、静态的、强类型的面向对象的语言。&lt;/p>
&lt;p>这里可能有的人认为Java 和 kotlin是编译型的，但是在我看来，Java 和 kotlin是会被编译成中间语言，然后在Java虚拟机上解释运行，还是符合解释型语言。&lt;/p>
&lt;p>Python Perl 和 R&lt;/p>
&lt;p>这个当然就是我们的重点了。&lt;/p>
&lt;p>Python 和 Perl 是解释型的、动态的、强类型的面向对象的语言。&lt;/p>
&lt;p>R在我看来就是个面向过程的，但是网上也有人把它改造成面向对象。现在Python在数据分析上比R流行，我个人觉得跟Python可以更好地支持面向对象离不开关系。&lt;/p>
&lt;p>可见我们这里没有弱类型的语言，我也不会JavaScript。&lt;/p>
&lt;hr>
&lt;p>然后就是课程计划安排。&lt;/p>
&lt;p>其实语法真的没什么可讲的，还是先入门讲怎么把跑起来，然后是扎扎实实的语法基础，然后就是数据结构、常见算法的不同语言实现，同时会配合LeetCode的刷题，然后是不同的小项目。&lt;/p>
&lt;p>其中如果是数据分析，重点就是用 Python Perl 和 R。&lt;/p>
&lt;p>如果是机器学习数据挖掘，就是Python。&lt;/p>
&lt;p>希望能够写得好一点。&lt;/p>
&lt;p>我这里把网上就可以搜到的内容再讲一遍，第一是很多都零散，第二就是有些我觉得要么是他写错了，要么是我没理解对，&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>section01-环境配置-02-语言环境</title><link>/post/section001-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-02/</link><pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate><guid>/post/section001-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-02/</guid><description>&lt;h2 id="1优先推荐初学者先使用网上环境而不是本地部署">1、优先推荐初学者先使用网上环境，而不是本地部署。&lt;/h2>
&lt;h3 id="1cloud-studio">1、Cloud Studio&lt;/h3>
&lt;p>&lt;a href="https://studio.dev.tencent.com/">Cloud Studio&lt;/a> 是基于浏览器的集成式开发环境，是腾讯公司的，支持绝大部分编程语言，包括 HTML5、PHP、Python、Java、Ruby、C/C++、.NET 等等，无需下载安装程序，一键切换开发环境。 &lt;a href="https://studio.dev.tencent.com/">Cloud Studio&lt;/a> 提供了完整的 Linux 环境，并且支持自定义域名指向，动态计算资源调整，可以完成各种应用的开发编译与部署。&lt;/p>
&lt;p>&lt;img src="pic/1.png" alt="">&lt;/p>
&lt;h3 id="2实验楼">2、实验楼&lt;/h3>
&lt;p>实验楼也提供网络在线的开发环境，不过非付费用户没办法保存。但是对于初入Linux的朋友，可以在上面尝试性操作，也算一个便利。&lt;/p>
&lt;h3 id="3google家的在线平台">3、Google家的在线平台&lt;/h3>
&lt;p>这个需要翻墙，仅供参考。&lt;/p>
&lt;h2 id="2本地编辑器">2、本地编辑器&lt;/h2>
&lt;p>最开始入门，各类语言首先要学会如何在终端下运行，因为以后如果真的到了工业应用级别，服务器都是只提供命令行模式的。所以终端下命令，以及vim或者Emrac的使用最好能会一些。&lt;/p>
&lt;p>然后就是在一些文本编辑器下使用。常见的有sublime text2or3、nodepad++、Atom、Visual Studio Code等等。&lt;/p>
&lt;p>这类文本编辑器的特点就是轻量级,，不直接提供编程环境，可以自行改造成适应不同语言的编程环境。我自己使用过多款后最后选用的还是sublime text3。最够快捷和轻量级，没有VScode、Atom那么花哨。不过后两者也是很出色的，只是对于目前的我有些花哨了。&lt;/p>
&lt;p>最后就是终极的IDE，集成开发环境。就是把它一装，你需要的编辑器+语言环境，都安排好了。这里的典型就是微软家的visual studio和苹果家的Xcode。装了这两个，基本上就等于装了编辑器+C/C++语言环境，如果再想装什么语言，通过内置的环境配置也可以搞定。另外还有一些语言专属的IDE。我们下面一个一个说。&lt;/p>
&lt;p>首先是命令行下运行语言，这块后面肯定会一一讲到。&lt;/p>
&lt;p>然后讲一下我接触到的各类文本编辑器的优劣。&lt;/p>
&lt;p>首先肯定是vim和emrac。这两款文本编辑器是适用于终端界面环境下。早期编程没有图形界面，那时候的程序员写代码很麻烦的。于是就有两个程序员分别开发了各自认为合适的文本编辑器。&lt;/p>
&lt;p>vi&lt;/p>
&lt;p>vim是在vi基础上的增强版，Linux系统下已经默认输入vi就等于vim。所以我也没用过原版vi。&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>section02-计算机起源与组成</title><link>/post/section002-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/</link><pubDate>Fri, 28 Dec 2018 00:00:00 +0000</pubDate><guid>/post/section002-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90/</guid><description>&lt;p>本文转自[&lt;a href="https://zhuanlan.zhihu.com/p/36534718">零基础编程入门（02）——计算机起源与组成&lt;/a>]&lt;/p>
&lt;p>附该作者的版权说明&lt;/p>
&lt;blockquote>
&lt;h2 id="三关于本教程版权">&lt;strong>三、关于本教程版权&lt;/strong>&lt;/h2>
&lt;p>本教程系列没有出版计划，以后也不会有，内容将直接公布在网上，但严禁第三方将其修订商业使用，转载不用向我询问，但必须在头部或尾部标明鄙人的知乎原文地址，鄙人并不希望有人借本教程牟利，知识永远都不应当收费，当然如果有人看完本教程觉得很有帮助自愿想给我午餐加个鸡腿，我也不反对，先行谢了。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>作者：HalfmanG2&lt;/p>
&lt;p>链接：https://zhuanlan.zhihu.com/p/36534718&lt;/p>
&lt;p>来源：知乎&lt;/p>
&lt;p>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/p>
&lt;h2 id="一计算机的起源与历史">&lt;strong>一、计算机的起源与历史&lt;/strong>&lt;/h2>
&lt;p>说到计算机的起源，首先从字面上就可以了解到计算机就是用于计算的机器的意思，事实上最早的计算机也的确就是一台用于计算的机器，早在史前社会，人类就已经发明了计算机，它是长这样的：&lt;/p>
&lt;p>&lt;img src="https://pic2.zhimg.com/v2-46ebe611e155988f386fea45a94e6cd9_b.jpg" alt="img">&lt;/p>
&lt;p>图1，上古人力二则运算计算机&lt;/p>
&lt;p>同学们看了肯定很惊诧，哎哟我去，这不就是几根破绳子嘛，和能操红警打星际（嗯，没暴露年龄吧？）的计算机有什么关系，你不是在忽悠我吧？&lt;/p>
&lt;p>那鄙人得说，就这几根破绳子还真是一台计算机，原始人使用这种称为结绳记事的方式来记录日常生活中的一些数据，比如，鄙人今天下海捞了3条鱼，那么我就在一根绳子上打3个结，记住我捞了3条鱼，然后我吃了一条，就解开一个结变成2个结，如果到了月底发现框里的鱼和绳子上的结对不上，那鱼肯定就是被我老婆偷吃了，晚上回去好好教育教育&amp;hellip;&lt;/p>
&lt;p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p>
&lt;p>从这个故事种我们可以看到，这几根破绳子有如下几个作用：&lt;/p>
&lt;ol>
&lt;li>可以用于记录数字，1个结就代表数字1，2个结就代表数字2，以此类推&lt;/li>
&lt;li>可以进行加减运算，比如我绳子上有2个结，然后今天又捞了3条，那么就再打3个结，变成了5个结，那么就是2+3=5。然后晚上我吃了1条，于是就解开1个结，变成4个结，那么就是5-1=4。&lt;/li>
&lt;/ol>
&lt;p>有了这两个个作用，我们就得到了一台完整二则运算计算机，因为一台计算机只需要有两个功能：&lt;/p>
&lt;ol>
&lt;li>记录数据，将需要参与运算的数字记录下来&lt;/li>
&lt;li>对数据进行运算，对记录下来的数字进行运算&lt;/li>
&lt;/ol>
&lt;p>但是由于只能用于加减运算，所以就称为二则运算计算机。&lt;/p>
&lt;hr>
&lt;p>但是显然，这种计算机运行效率那是相当的低下，记录的数据也非常有限，比如我昨天捞了200条鱼，那我就得打200个结，绳子是不是够长不说，就是打结的功夫也是相当的累人，指不定比捞鱼还慢，而且还只能做加减运算，比如如果我和隔壁张三做大额鱼类期货交易，要做乘除法怎么办？200条鱼的绳子乘个2就是400条，那我得再打上200个结，乘个10就是2000个结，我去，这活没法干了。&lt;/p>
&lt;p>所以，讲到这里鄙人不得不佩服我们古人的智慧，公元3世纪（200多年）的时候，东汉人徐岳发明了这玩意儿：&lt;/p>
&lt;p>&lt;img src="https://pic1.zhimg.com/v2-931b8e49502ec483964d3806bccc8a41_b.jpg" alt="img">&lt;/p>
&lt;p>图2，国产人力四则运算计算机&lt;/p>
&lt;p>没错，就是算盘，不过很可惜，由于鄙人小学珠算没及格，这东西咋用的我早丢给爷爷辈了，但是！鄙人可以告诉你，算盘相对于绳子，有两大改良：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>算盘加入了进位&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>我们可以看到算这个盘每一列有上面2个珠子和下面5个珠子，下面5个珠子每向上推1个代表加个1，而上面的珠子每推1个代表加5，上面2个珠子都推了就代表加10，这就是个典型的10进位，但是由于算盘有很多种，有些是上面1珠下面4珠的，所以并不能说所有算盘都是10进位，事实上更多的是混合进位，恩，说远了，不懂没关系。&lt;/p>
&lt;p>当然，你现在还不知道什么是进位，鄙人后面会再给大家详细解释，不明白的同学稍安勿躁，接着看下去。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>算盘加入了乘除法&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>算盘可以通过一定的口诀，实现乘除法，所谓口诀就是一些预先设计好的操作顺序。比如第1步推这个，第2步推哪个等等，然后操作人员只需要根据口诀去一步步操作，就能对算盘上当前的数据进行乘除法。&lt;/p>
&lt;p>当然，真正的珠算口诀要复杂的多，具体我就不说了，因为我自己也搞不清，没做过账房先生。看到这想知道的同学鄙人也不推荐你去研究，因为和我们要学的东西无关，无关的东西就不要学，这是学习的根本方法之一，有的时候我们需要克制下自己的求知欲。&lt;/p>
&lt;p>回到正题，从上面我们知道，算盘可以通过这些预先设计好的操作顺序对算盘上记录的数据进行乘除法，非常有意思的是，这些口诀，从本质上来讲，就是一种程序，因为程序本质上就是进行某种运算的操作顺序，而设计了这些口诀的古人则正是我们中国最早的程序员。&lt;/p>
&lt;p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p>
&lt;p>看到这里，我们同学是不是很震撼，感到特别震惊？所以说我们古中华文明的智慧是无穷无尽的，我们现代生活中的很多东西早就已经存在于中国古代，所以同学们切勿自怨自艾，国人当对身为中华人有信心，为身为中华文明的传人而自豪。同时也要为我们将要学习的内容放松心态，古人都能发明的东西，你怎么会有学不会的道理？&lt;/p>
&lt;hr>
&lt;p>上面我们学到了中华文明的璀璨之后，接下来，我们把时间向后拨上1600多年，来到近现代的欧洲。&lt;/p>
&lt;p>1941年，二战正进行得如火如荼，德军依靠优势空军力量，不断对英国进行空袭，大量的城镇在一夜间满目疮痍。英军为了获得对德国空军的战术与情报优势，瞄上了德国了的用于电报加密的恩尼格玛密码机（Enigma Machine）。&lt;/p>
&lt;p>恩尼格玛密码机大致上就是好几个转盘，当发报员通过旋钮对机器进行日期设置后，每敲入一个字符，比如A，然后转盘就会通过一定的机械运动，将其转换为另一个字符，比如R，然后运转规律会按日期有所变化，比如今天按A，输出的是R，明天按A，输出就变成C了。然后收报员在收到加密的电报后，输入相同的日期，然后就能解密，然后得到正确的电报内容。当然实际的加密过程要复杂的多，因为还有变码等等功能，这个我们就不关心了，你就先这么理解吧。&lt;/p>
&lt;p>通过这个机器，德军能很好的防止英军截获军事情报，所以，英军为了破解恩尼格玛密码机，便从全国征招各路英豪，齐聚一个叫布莱切利的小庄园，其中就有我们的人工智能之父，提出了图灵机的阿伦·图灵，还有全国的顶尖数学家和顶尖电器工程师。&lt;/p>
&lt;p>然后某一天，由于一个德国发报员的发送的报文有一个拼写错误，抱着严谨的心态没换密码又重发了一遍正确的报文，英军意外通过对两份密文对比找到了恩尼格玛的部分规律，然后在天才们的努力下，最终完整破译了密码机的运行规律。&lt;/p>
&lt;p>但是，我们故事到这里还没有完，虽然已经找到了密码机的运行规律，但是由于每破译一份电报都要进行巨量的数学计算，即使有一群数学大咖协作，每一份电报破译完几乎已经是一个星期后的事情了，对瞬息万变的战局几乎起不到任何作用。&lt;/p>
&lt;p>于是在阿伦·图灵的主导下，电器工程师赫斯·罗宾逊与汤米·佛洛亚斯发明建造了一台电器设备，名为克罗索斯，差不多长这样：&lt;/p>
&lt;p>&lt;img src="https://pic1.zhimg.com/v2-efaeafb1f3546c97ffaaa9f33d6016b0_b.jpg" alt="img">&lt;/p>
&lt;p>图3，克罗索斯电器计算机&lt;/p>
&lt;p>这台设备由电力马达驱动，其中用于记录密文运算的电路模块是可以替换的，以实现变换解密算法，当操作员通过打字机完成需要需要计算的电报密文输入后，这台设备便会开始根据记录了算法的电路模块对电报进行解密，每秒大约能解密5000字。&lt;/p>
&lt;p>这样的运行效率显然已经完全满足了英军需要，一份德军密电几分钟后就能放到丘吉尔桌上，而克罗索斯则因为汤米·佛洛亚斯设计的独特的可替换算法电路模块，而成为了世界上第一台可编程电子计算机。&lt;/p>
&lt;p>然而非常可惜的是，由于英军出于机密的考虑（恩尼格玛破译有很多黑历史就不说了，比如故意放任已经破译的密电，而让多佛惨遭轰炸），克罗索斯长期被列为高级机密，隐藏在了机密文档之中，而其计算机本身也在二战后惨遭销毁。&lt;/p>
&lt;p>至于阿伦·图灵更是在二战后因其他原因被迫自杀，成为计算机界知名的惨案，至此，这段历史也就再也无人知晓，直到近十几年才得以曝光。但是此时，世界第一台电子计算机的桂冠却早已被美国1946年制造的用于原子弹制造研究计算的ENIAC埃尼阿克计算机摘去，而他的设计者之一，冯·诺依曼更是依靠其对ENIAC埃尼阿克计算机设计方案的优化，一举成为现代计算机之父。&lt;/p>
&lt;p>（后注，克罗索斯破解的实质上是德军在恩尼格玛上衍生的更为复杂的Tunny密码机，但限于篇幅就混为一谈吧，事实上这也是需要克罗索斯需要能替换算法的主要原因）&lt;/p>
&lt;h2 id="二现代计算机起源">&lt;strong>二、现代计算机起源&lt;/strong>&lt;/h2>
&lt;p>1944年，美籍匈牙利数学家与量子物理学家，冯·诺依曼正在美国洛·斯阿拉莫斯实验室参与一件苦逼的工作，原子弹研发。由于原子弹研发过程中大量需要进行几十亿次的巨量的数学运算，他不得不雇佣了上百个妹子为其做算术题，然而依然完全不够，无尽的数学题如同海绵一般吸干了他那无穷无尽的脑细胞。&lt;/p>
&lt;p>一个偶然的机会，他遇到了ENIAC埃尼阿克计算机研发部门的主管，在了解了其工作后，立刻产生了极大的兴趣，然后在主管推荐下，便以顾问的身份加入了ENIAC部门。&lt;/p>
&lt;p>当时的埃尼阿克ENIAC计算机设计方案中并没有数据存储功能，其操作方式极为原始，需要由妹子（不对，操作人员）通过电线插座面板（简称控制面板，是不是很熟悉）去进行输入操作，然后再进行计算和输出结果，其输入数据操作时间往往比计算时间还长，加起来的运算效率可能还不如我们的算盘。&lt;/p>
&lt;p>冯·诺依曼加入顾问团后，便开始着手对其工作方式进行改良，最终在1945年，写了一份101页的报告，提出了一个名为『EDVAC』翻译过来就是『存储程序通用电子计算机方案』的新型可编程电子计算机方案，而这个方案正是如今世界上所有计算机的根基，70年了，依然未被推翻，所以如今所有的计算机也被称为冯·诺依曼计算机，而其本人也被称为现代计算机之父而享誉全球。&lt;/p>
&lt;p>在这份报告中，有三个关键点：&lt;/p>
&lt;p>&lt;strong>第一、计算机中的数据应当使用二进制进行存储与运算&lt;/strong>&lt;/p>
&lt;p>&lt;strong>第二、程序也是数据，应当与数据一同存储在计算机的存储器中&lt;/strong>&lt;/p>
&lt;p>&lt;strong>第三、计算机应当由五个部分组成，分别为：运算器、控制器、存储器、输入设备、输出设备&lt;/strong>&lt;/p>
&lt;p>这三点非常重要，下面我们就一个一个来看。&lt;/p>
&lt;hr>
&lt;p>&lt;strong>第一点，计算机中的数据应当使用二进制进行存储与运算&lt;/strong>&lt;/p>
&lt;p>讲到这一点，我们先要理解什么是二进制，前面提到了一个进位的概念，而讲到进位，我们首先要明白什么是位，所谓的『位』就是我们日常生活中常说的：个位、十位、百位、千位、万位、十万位、百万位、千万位、亿位等等等等。&lt;/p>
&lt;p>比如，&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">数字：12345
读作1万2千3百4十5（个），那这个数字包含了5个位，分别是
万位，值为1、
千位，值为2、
百位，值为3、
十位，值为4、
个位，值为5
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个数字也可以拆分成如下公式：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">1 * 10000 + 2 * 1000 + 3 * 100 + 4 * 10 + 5 * 1 = 12345
注释：注意此处 * 代表乘法，后续的课程中皆为此意。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>从上述公式，我们可以推导得出一个结论，什么结论呢？&lt;/p>
&lt;p>就是，&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">万位本质上就是10000乘上万位数值1，
千位本质上就是1000乘上千位数值2，
百位本质上就是100乘上百位数值3，
十位本质上就是10乘上十位数值4，
个位本质上就是1乘上个位数值5，
将这几个结果累加，即可得到12345。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后，我们细心的同学可以发现一个现象：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">10000可以记作4个10相乘，也就是10的4次方，
1000可以记作3个10相乘，也就是10的3次方，
100可以记作2个10相乘，也就是10的2次方，
10则是10的1次方，
而个位的1，则是10的0次方（注，除0外，任意数的0次方为1）
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>所以从中我们可以总结出一个规律，就是：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">个位就是10的0次方，
十位就是10的1次方，
百位就是10的2次方，
千位就是10的3次方，
万位就是10的4次方，
更高位，亦可以此类推，于是上述12345也可记作：
1 * 10 ^ 4 + 2 * 10 ^ 3 + 3 * 10 ^ 2 + 4 * 10 ^ 1 + 5 * 10 ^ 0 = 12345
注释：此处 ^ 代表乘方，10 ^ 2就是10的2次方，后续课程中皆是如此
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在了解了位的概念后，我们再来看什么是进位，所谓进位，意思就是说，每一位数字，凡是到了9，如果这位需要再加1，则将此位归0，并将左边的更高位加1，比如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">9+1 --- 个位为9，个位+1后，进十位并归零个位 ---&amp;gt; 10
19+1 --- 个位为9，个位+1后，进十位并归零个位 ---&amp;gt; 20
190+10 --- 十位为9，十位+1后，进百位并归零十位 ---&amp;gt; 200
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果左边的位也是9，则同样处理，左边位再归0，然后更左边的位再加一，比如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">99+1
---
个位为9，个位+1后，进十位并归零个位
然后进十位时，十位也为9，则再进百位并归零十位
---&amp;gt;
100
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这种记数的方式，数学上就称为10进位，而这种模式，则称作10进制，也就是『10进位的制度』。&lt;/p>
&lt;p>聪明的同学可以发现，在10进制中，每一位其实一共有0、1、2、3、4、5、6、7、8、9这十种状态，所以，我们也可以将每一位有10种状态的进位制度，称为十进制。&lt;/p>
&lt;p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p>
&lt;p>而在冯诺依曼的报告中，其提出了10进制虽然是我们人类的记数方式，但并不适合计算机去记数，最适合计算机的记数方式为2进制，所谓2进制，就是逢2进1位，每位有0和1两种状态。&lt;/p>
&lt;p>为了直观比较，我们下面例子分2列，用2进制来表示我们人类能看懂的10进制数：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">10进制 2进制
0 0
1 1
2 10
3 11
4 100
5 101
6 110
7 111
8 1000
9 1001
10 1010
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我相信看到这里，我们同学应该就能明白了，在2进制种，每位都只有0与1两个状态，而冯诺依曼则提出了，这种进制才是最适合计算机使用的，为什么呢？&lt;/p>
&lt;p>因为计算机是一台电子设备，其用于传输的媒介其实就是电线，电线在传输数据时，只有通电与不通电这2种状态，不通电时意为0，通电意为1。（事实上是高低电平，但那个涉及电学知识，不给你深入，就当是通电不通电吧）&lt;/p>
&lt;p>而存储时，比如磁盘，磁盘上某个点有磁性代表1，无磁性代表0。这样我们就看到了，2进制对于计算机而言处理起来远比10进制来得简洁和高效，并能有效降低硬件成本，也正是基于这个原因，冯·诺依曼通过大量的数学证明最终提出了应该使用2进制做为计算机运算与存储的根基这一跨时代的概念。&lt;/p>
&lt;hr>
&lt;p>&lt;strong>第二点、程序也是数据，应当与数据一同存储在计算机的存储器中&lt;/strong>&lt;/p>
&lt;p>在看完第一点后，接着我们再来看第二点，冯诺依曼在对ENIAC的早期方案进行分析后发现其存在运算效率的低下的问题，原因在于每次运算需要操作人员反复将每次收到的上一步运算结果再输入计算器进行下一步运算，其操作流程大致如下，比如我要运算1加1等于几：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text"> 1 + 1 = ？
操作数1 操作类型+ 操作数1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>操作人员在进行这个运算时，需要做如下操作：&lt;/p>
&lt;ul>
&lt;li>在控制面板上输入操作类型：加&lt;/li>
&lt;li>在控制面板上输入加类型所需的第一个操作数：1&lt;/li>
&lt;li>在控制面板上输入加类型所需的第二个操作数：1&lt;/li>
&lt;li>由于加类型只需两个操作数，完成指明加类型，以及两个操作数输入后，操作结果会自动打印到纸带上，告诉操作人员结果&lt;/li>
&lt;/ul>
&lt;p>如果需要做多重运算的话，比如 1 加 100 减去 30 等于几？&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">1 + 100 - 30 = ?
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>则需要这么操作：&lt;/p>
&lt;ul>
&lt;li>操作类型：加&lt;/li>
&lt;li>操作数：1&lt;/li>
&lt;li>操作数：100&lt;/li>
&lt;li>输出结果到纸带，101&lt;/li>
&lt;li>操作类型：减&lt;/li>
&lt;li>操作数：输入上次运算的结果101&lt;/li>
&lt;li>操作数：30&lt;/li>
&lt;li>输出结果到纸带，71&lt;/li>
&lt;/ul>
&lt;p>显然这样的操作非常繁琐，而且极为重复，每次运算1+1，都得需要操作人员去手工输上那么一堆东西，显然很弱智。&lt;/p>
&lt;p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p>
&lt;p>为了解决这个问题，冯诺依曼就提出了一个称为存储器的概念，所谓存储器就是能按顺序存储一些数据的设备，典型的有：&lt;/p>
&lt;p>人（对没存储器的电脑来说，人肉就是存储器）&lt;/p>
&lt;p>纸张（人写的在那个年代显然计算机读不了，但凡事有特例，后面会讲）&lt;/p>
&lt;p>磁带（嗯，就是听歌的那种，95后可能都没见过）&lt;/p>
&lt;p>磁盘（你电脑里的硬盘，不是固态的那种）&lt;/p>
&lt;p>光盘（80年代的高科技产物）&lt;/p>
&lt;p>闪存（固态硬盘，U 盘，内存条）&lt;/p>
&lt;p>无论是什么形式的存储器，在存储器中，都能以单元的形式存放数据，最简单的单元就是条，比如我这人肉存储器只能记住20条数字，多了就炸。&lt;/p>
&lt;p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p>
&lt;p>有了存储器，然后冯诺依曼提出，我们上述运算中的操作类型与操作数都应当以一条条数据的形式存放在存储器中，具体怎么做呢，其实很简单，比如我们回到1+100-30的例子，我们能看到在这个例子中，有两种类型的数据：&lt;/p>
&lt;ul>
&lt;li>一种是操作类型：加减乘除&lt;/li>
&lt;li>一种是操作数：1、100、30。&lt;/li>
&lt;/ul>
&lt;p>操作数好办，直接以二进制数字的形式放到存储器上就行，那操作类型怎么办？它不是数字啊!!!&lt;/p>
&lt;p>这问题其实简单的很，既然操作类型不是数字，那就给他个数字替代表示下呗，多简单的事，瞧你们这折腾的。&lt;/p>
&lt;p>所以，我们就分别给加、减、乘、除，这四种操作类型分配一个数字，&lt;/p>
&lt;p>然后，给从对前次运算结果进行加、减、乘、除各分配一个数字，比如：&lt;/p>
&lt;p>加用0表示，减用2表示，乘用4表示，除用6表示，&lt;/p>
&lt;p>从上次结果加用1表示，从上次结果减用3表示，从上次结果乘用5表示，从上次结果除用7表示&lt;/p>
&lt;p>然后，再加入一个新操作，叫做输出结果，用8表示&lt;/p>
&lt;p>最后，数字还是用数字表示，于是上述的操作以这种数据形式就变成了：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">操作类型：+ ----&amp;gt; 1
操作数：1 ----&amp;gt; 1
操作数：100 ----&amp;gt; 100
操作类型：从上次结果减 ----&amp;gt; 3
操作数：30 ----&amp;gt; 30
输出结果到纸带 ----&amp;gt; 8
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后，将1、1、100、3、30、8这串数字存放到存储器上，有计算机去读取并执行，运行逻辑如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">读取第一个数据，得到1，由于是第一个数据，所以肯定是一个操作类型，于是得知为加
由于加指令为双操作数指令，所以接着读取后2个数据1与100
开始进行运算，得到结果101，第一次运算执行完毕，以操作类型形式读取下一条数据
读到操作类型3，于是得知为从上次结果减
由于从上次结果减为单操作数指令，所以接着读取后1个数据30
开始进行运算，得到结果71，第二次运算执行完毕，以操作类型形式读取下一条数据
读到操作类型8，于是得知为输出结果操作，将71输出到纸带
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>最后，通过这样的方式，冯诺依曼就实现了对于计算机操作的数字化，而上面的这一串数字就是我们现代计算机程序的起源，其中的操作类型，我们称为计算机指令，而参与操作的数字，则称为操作数。&lt;/p>
&lt;p>存放在存储器上，能由计算机直接读取运行的1、1、100、3、30、8这串数字，我们则称为机器码，由于机器码虽然计算机能读但人却难以阅读，所以后面有人想出了用字母替代其中的指令码，以方便人肉阅读，将其变为：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-text" data-lang="text">注释：以ADD替代指令1，以MIN替代指令3，以OUT替代指令8，于是得到：
ADD 1, 100
MIN 30
OUT
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这样的程序就称为汇编程序（当然我这汇编指令是瞎掰的，不过真的也没复杂到哪去）。&lt;/p>
&lt;hr>
&lt;p>&lt;strong>第三、计算机应当由五个部分组成，分别为：运算器、控制器、存储器、输入设备、输出设备&lt;/strong>&lt;/p>
&lt;p>在提出了存储器与程序这两个概念后，为了实现计算机能从存储器读取并执行程序，冯诺依曼将计算机分为了五个部分，运算器、控制器、存储器、输入设备与输出设备，其中：&lt;/p>
&lt;p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p>
&lt;p>&lt;strong>运算器&lt;/strong>&lt;/p>
&lt;p>就是用于对单条指令进行运算和对临时数据进行暂存的电路模块（现在的运算器有更多的模块，但你不用管），比如我们上面的计算机中包含了加，减，乘，除四种运算，以及暂存运算结果，那么运算器中就将包含：&lt;/p>
&lt;p>加运算电路，减运算电路，乘运算电路，除运算电路，以及一个能存放上述电路输出结果的东东，称为寄存器。&lt;/p>
&lt;p>（注释：事实上我们现代的计算机只有一个加运算电路，称为累加器，减、乘、除都是通过累加器实现的，不过这个涉及门电路知识，和我们课程无关，我就不深入了）&lt;/p>
&lt;p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p>
&lt;p>&lt;strong>控制器&lt;/strong>&lt;/p>
&lt;p>控制器的主要工作是负责控制计算机的方方面面，比如按一定的频率从存储器上读取指令，然后根据指令不同，进行不同的操作，比如：&lt;/p>
&lt;p>读到加指令，就接着读两个操作数，然后将两个操作数送入运算器的加运算电路；&lt;/p>
&lt;p>然后再读取下一条指令，发现是从结果减，然后就再读一个操作数，然后将运算器中存放结果的寄存器中的数据与这个操作数再送入减运算电路；&lt;/p>
&lt;p>然后接着从存储器读下一条指令，发现是输出，则将运算器中结果寄存器内的数据输出到输出设备。&lt;/p>
&lt;p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p>
&lt;p>&lt;strong>存储器&lt;/strong>&lt;/p>
&lt;p>我们上面已经做过解释，具体不再复述，我们需要知道的是，目前存储器一共有两种，内存与硬盘，内存是快速但不持久的存储器，硬盘则是低速但持久的存储器。运算器与控制器只会从内存中读取数据与指令而不会直接访问硬盘，而内存则会根据指令从硬盘中加载一整块数据。&lt;/p>
&lt;p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p>
&lt;p>&lt;strong>输入设备&lt;/strong>&lt;/p>
&lt;p>输入设备就是指人向计算机输入指令和数据的设备，常见的设备有：&lt;/p>
&lt;ul>
&lt;li>控制面板（现在还有，就是你机箱上的开关机键）&lt;/li>
&lt;li>磁带机（现在基本已经没了，只有极少数机构在用）&lt;/li>
&lt;li>纸带机（打孔纸带机，上古程序员每天面对的东西）&lt;/li>
&lt;li>键盘（克罗索斯上就有，不奇怪）&lt;/li>
&lt;li>鼠标（图形化时代的一大创新）&lt;/li>
&lt;/ul>
&lt;p>等等等等，更多我就不列了。&lt;/p>
&lt;p>~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&lt;/p>
&lt;p>&lt;strong>输出设备&lt;/strong>&lt;/p>
&lt;p>输出设备就是指计算机向人输出数据的设备，常见的设备有：&lt;/p>
&lt;p>打印机&lt;/p>
&lt;p>纸带机&lt;/p>
&lt;p>磁带机&lt;/p>
&lt;p>显示器&lt;/p>
&lt;p>等等等等，我们可以注意到很多输入设备同时也是输出设备。&lt;/p>
&lt;hr>
&lt;p>最后，需要同学们注意的是，在上述五个设备中，运算器与控制器合在一起，就是我们如今所熟知的CPU即中央处理器。&lt;/p>
&lt;h2 id="三结语">&lt;strong>三、结语&lt;/strong>&lt;/h2>
&lt;p>在本章我们通过一段关于计算机从无到有的历史，学习了如下几个知识：&lt;/p>
&lt;p>1、什么是计算机，有什么用？&lt;/p>
&lt;p>2、什么是位，什么是进位，什么是十进制与二进制？&lt;/p>
&lt;p>3、什么是程序？程序是如何怎么产生的？程序有什么作用？&lt;/p>
&lt;p>4、现代计算机的五个组成部分，以及五个部分各有什么用？&lt;/p>
&lt;p>希望大家能从中有所收获，下一章，我们将引入操作系统以及关于编程语言的相关知识&lt;/p>
&lt;h2 id="四作业">&lt;strong>四、作业&lt;/strong>&lt;/h2>
&lt;p>1、通过网络搜索，学习正整数的二进制与十进制数相互转换&lt;/p>
&lt;p>2、尝试自行理解二进制中负数与小数（浮点数）的表现形式，不理解也没关系，后面会提到&lt;/p>
&lt;p>3、看完了，给本文个赞&lt;/p>
&lt;h2 id="五问答">&lt;strong>五、问答&lt;/strong>&lt;/h2>
&lt;p>暂无问题，等待添加&lt;/p>
&lt;h2 id="六章节目录链接">&lt;strong>六、章节目录链接&lt;/strong>&lt;/h2>
&lt;p>&lt;a href="https://zhuanlan.zhihu.com/p/36403646">零基础编程入门系列，前言及目录&lt;/a>&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>section01-环境配置-03-编辑器设置</title><link>/post/section001-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-03/</link><pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate><guid>/post/section001-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE-03/</guid><description>&lt;h2 id="什么是shebang">什么是shebang&lt;/h2>
&lt;p>总是出现在python代码第一行的&lt;code>#!/usr/bin/python3&lt;/code>的理解：&lt;/p>
&lt;p>分成两种情况：&lt;/p>
&lt;p>（1）如果调用python脚本时，使用命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">python script.py
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>#!/usr/bin/python&lt;/code>被忽略，等同于注释。&lt;/p>
&lt;p>（2）如果调用python脚本时，使用命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">./script.py
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>#!/usr/bin/python&lt;/code>则会安装指定解释器的路径调用python解释器。&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>《青年运动的方向》解读 | 毛泽东著作解读</title><link>/post/%E9%9D%92%E5%B9%B4%E8%BF%90%E5%8A%A8%E7%9A%84%E6%96%B9%E5%90%91/</link><pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate><guid>/post/%E9%9D%92%E5%B9%B4%E8%BF%90%E5%8A%A8%E7%9A%84%E6%96%B9%E5%90%91/</guid><description>&lt;p>这篇文章是毛泽东1939年在延安青年群众举行的五四运动二十周年纪念会上的讲演。毛泽东在这个讲演中发展了关于中国革命问题的思想。&lt;/p>
&lt;p>根据题解，1939年三月，陕甘宁边区的青年组织规定以五月四日为中国青年节。那时国民党在广大青年群众的爱国高潮的压力下，也同意了这个规定。后来国民党畏惧青年学习“五四”的革命精神，觉得这个规定很危险，又改定以三月二十九日（1911年在广州起义中牺牲后来葬在黄花岗的革命烈士的纪念日）为青年节。但在共产党领导的革命根据地内则继续以五月四日为青年节。中华人民共和国成立以后，中央人民政府政务院在一九四九年十二月正式宣布以五月四日为中国青年节。&lt;/p>
&lt;p>这篇文章虽然有些官腔，但是筛选一下精华，还是非常有亮眼的地方。&lt;/p>
&lt;blockquote>
&lt;p>第一，……，五四运动所反对的是卖国政府，是勾结帝国主义出卖民族利益的政府，是压迫人民的政府。这样的政府要不要反对呢？假使不要反对的话，那末，五四运动就是错的。这是很明白的，这样的政府一定要反对，卖国政府应该打倒。你们看，孙中山先生远在五四运动以前，就是当时政府的叛徒，他反对了清朝政府，并且推翻了清朝政府。他做的对不对呢？我以为是很对的。因为他所反对的不是反抗帝国主义的政府，而是勾结帝国主义的政府，不是革命的政府，而是压迫革命的政府。五四运动正是做了反对卖国政府的工作，所以它是革命的运动。全中国的青年，应该这样去认识五四运动。&lt;/p>
&lt;p>第二，……，这个革命要达到的目的是什么呢？目的就是打倒帝国主义和封建主义，建立一个人民民主的共和国。这种人民民主主义的共和国，就是革命的三民主义的共和国。它比起现在这种半殖民地半封建的状态来是不相同的，它跟将来的社会主义制度也不相同。在社会主义的社会制度中是不要资本家的；在这个人民民主主义的制度中，还应当容许资本家存在。中国是否永远要资本家呢？不是的，将来一定不要。不但中国如此，全世界也是如此。英国也好，美国也好，法国也好，日本也好，德国也好，意大利也好，将来都统统不要资本家，中国也不能例外。苏联是建设了社会主义的国家，将来全世界统统要跟它走，那是没有疑义的。中国将来一定要发展到社会主义去，这样一个定律谁都不能推翻。但是我们在目前的阶段上不是实行社会主义，而是破坏帝国主义和封建主义，改变中国现在的这个半殖民地半封建的地位，建立人民民主主义的制度。全国青年应当为此而努力。&lt;/p>
&lt;p>第三，……。&lt;/p>
&lt;p>第四，……，看一个青年是不是革命的，拿什么做标准呢？拿什么去辨别他呢？只有一个标准，这就是看他愿意不愿意、并且实行不实行和广大的工农群众结合在一块。愿意并且实行和工农结合的，是革命的，否则就是不革命的，或者是反革命的。他今天把自己结合于工农群众，他今天是革命的；但是如果他明天不去结合了，或者反过来压迫老百姓，那就是不革命的，或者是反革命的了。&lt;/p>
&lt;p>第五，……，现在中国青年运动的不统一，是一个很大的缺点。你们应该继续要求统一，因为统一才有力量。你们要使全国青年知道现在的形势，实行团结，抗日到底。&lt;/p>
&lt;p>……&lt;/p>
&lt;/blockquote>
&lt;p>写的内容都是很直观的。&lt;/p>
&lt;p>要坚持反对和打倒反动派，要消灭剥削，要团结，要坚持革命，追逐人的解放事业，而不要腐化堕落。这些话放在今天看更加有价值了。&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>关于农村调查 | 毛泽东选集原文</title><link>/post/%E6%AF%9B%E9%80%89%E5%8E%9F%E6%96%87-%E5%85%B3%E4%BA%8E%E5%86%9C%E6%9D%91%E8%B0%83%E6%9F%A5/</link><pubDate>Thu, 27 Dec 2018 00:00:00 +0000</pubDate><guid>/post/%E6%AF%9B%E9%80%89%E5%8E%9F%E6%96%87-%E5%85%B3%E4%BA%8E%E5%86%9C%E6%9D%91%E8%B0%83%E6%9F%A5/</guid><description>&lt;p>(一九四一年九月十三日)&lt;/p>
&lt;h2 id="一情况是逐渐了解的需要继续不断的努力">一　情况是逐渐了解的，需要继续不断的努力&lt;/h2>
&lt;p>　　认识世界，不是一件容易的事。马克思、恩格斯努力终生，作了许多调查研究工作，才完成了科学的共产主义。列宁、斯大林也同样作了许多调查。&lt;/p>
&lt;p>　　中国革命也需要作调查研究工作，首先就要了解中国是个什么东西 (中国的过去、现在及将来)。可惜很多同志常是主观主义，自以为是，完全不重视调查研究工作。&lt;/p>
&lt;p>　　我们是信奉科学的，不相信神学。所以，我们的调查工作要面向下层，而不是幻想。同时，我们又相信事物是运动的，变化着的，进步着的。因此，我们的调查，也是长期的。今天需要我们调查，将来我们的儿子、孙子，也要作调查，然后，才能不断地认识新的事物，获得新的知识。&lt;/p>
&lt;p>　　我们的调查工作，是要有耐心地、有步骤地去作，不要性急。我自己认识农村，就是经过好几年的工夫的。&lt;/p>
&lt;p>　　记得我在一九二○年，第一次看了考茨基著的《阶级斗争》&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>，陈望道翻译的《共产党宣言》，和一个英国人作的《社会主义史》&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>，我才知道人类自有史以来就有阶级斗争，阶级斗争是社会发展的原动力，初步地得到认识问题的方法论。可是这些书上，并没有中国的湖南、湖北，也没有中国的蒋介石和陈独秀。我只取了它四个字:“阶级斗争”，老老实实地来开始研究实际的阶级斗争。我做了四个月的农民运动，得知了各阶级的一些情况，可是这种了解是异常肤浅的，一点不深刻。后来，中央要我管理农民运动。我下了一个决心，走了一个月零两天，调查了长沙、湘潭、湘乡、衡山、醴陵五县。这五县正是当时农民运动很高涨的地方，许多农民都加入了农民协会。国民党骂我们 “过火”，骂我们是 “游民行动”，骂农民把大地主小姐的床滚脏了是 “过火”。其实，以我调查后看来，也并不都是像他们所说的 “过火”，而是必然的，必需的。因为农民太痛苦了。我看受几千年压迫的农民，翻过身来，有点 “过火” 是不可免的，在小姐的床上多滚几下子也不妨哩！&lt;/p>
&lt;p>　　不过，在当时我对于农村阶级的结合，仍不是十分了解的。到井冈山之后，我作了寻乌调查，才弄清了富农与地主的问题，提出解决富农问题的办法，不仅要抽多补少，而且要抽肥补瘦，这样才能使富农、中农、贫农、雇农都过活下去。假若对地主一点土地也不分，叫他们去喝西北风，对富农也只给一些坏田，使他们半饥半饱，逼得富农造反，贫农、雇农一定陷于孤立。当时有人骂我是富农路线，我看在当时只有我这办法是正确的。当然，今天是抗日民族统一战线，不是剥夺地主、富农的所有权，而是减租减息。否则，是不能团结他们抗日的。&lt;/p>
&lt;p>　　贫农与雇农的问题，是在兴国调查之后才弄清楚的，那时才使我知道贫农团在分配土地过程中的重要性。&lt;/p>
&lt;p>　　所以，从我个人调查农村来说，是经过了六七年的时间的。现在你们有了过去同志们的经验，都可以走直路了，可以把六七年的工作，在几个月内完成。今天同志们的任务是脚踏实地去钻，去努力，只要不整天睡觉，一天就六小时的工作，也是可以获得很多成绩的，但需继续不断的努力。&lt;/p>
&lt;h2 id="二方法">二　方法&lt;/h2>
&lt;p>　　1. 对立统一，阶级斗争，是我们办事的两个出发点。当我们观察一件事物时，第一步的观察只能看到这件事物的大体轮廓，形成一般概念。好比一个初来延安的人，开始他对延安的认识只是一般的、笼统的。可是当他参观了抗大、女大以及延安的各机关学校之后，他采取了第二个步骤，用分析方法把延安的各部分有秩序地加以细细的研究和分析。然后第三步再用综合法把对各部分的分析加以综合，得出整体的延安。这时认识的延安就与初来时认识的延安不同，他开始看见的是整个的延安，现在看见的也是整个的延安，但与开始的了解不同了，现在他对延安就有了科学的认识和具体的了解。观察一个农村，也同样是如此。&lt;/p>
&lt;p>　　马克思的《资本论》就是用这种方法来写成的，先分析资本主义社会的各部分，然后加以综合，得出资本主义运动的规律来。&lt;/p>
&lt;p>　　这里特别要注意的是分析。应该是分析而又综合，就是在第二步骤的分析中，也有小的综合。古人说：文章之道，有开有合。这个说法是对的。苏东坡用 “八面受敌” 法研究历史，用 “八面受敌” 法研究宋朝，也是对的。今天我们研究中国社会，也要用个 “四面受敌” 法，把它分成政治的、经济的、文化的、军事的四个部分来研究，得出中国革命的结论。&lt;/p>
&lt;p>　　如果我们观察问题是走马看花的，各样都弄一点，这只是空花费了时间，一事无成。&lt;/p>
&lt;p>　　所以，我们一定要把握住这方面的观点，这种观点，就是对立统一和阶级斗争。像我上面刚才讲的分析法和综合法，就是用这观点。假如同志们把这观点用去分析农村，你就可以知道农村有些什么阶级，它们主要的特点是什么，以及它们彼此的关系怎样。同志们给我的问题中，有问到什么是富农。我以为地主是以收租为主；富农是以雇工为主，自己参加劳动；中农是以不出卖劳动力为主，经营自己的土地；贫农是一定要出卖劳动力，靠自己的土地不够生活；雇农完全出卖劳动力，没有土地。当然，这是指它们的主要标志。&lt;/p>
&lt;p>　　这样分析了农村中的各个阶级、阶层及其生活概况，然后才能对农村有正确的全面的了解。&lt;/p>
&lt;p>　　我们要用钻研的方法来分析客观，分析阶级。对实际问题不应当熟视无睹，应当捣毁 “牛皮公司”，应当经过自己头脑深思熟虑，应当把理论与实践结合起来。
　　
　　一九○五年，列宁说推翻沙皇政府，俄国要组织工农政府，而托洛茨基则认为只能组织工人政府。这就是托洛茨基没有把理论与实践真正地结合起来。我们应当从实践中找出事物运动的规律来，产生新的理论。如中国抗战的持久性，长期性，就是抗战的规律。今天同志们下乡去调查，就应该以这种观点和方法指导自己的实践，另方面又从实践中不断地充实自己的理论。
　　&lt;/p>
&lt;ol start="2">
&lt;li>
&lt;p>详细地占有材料，抓住要点。材料是要搜集得愈多愈好，但一定要抓住要点或特点 (矛盾的主导方面)。马克思研究资本主义，列宁研究帝国主义，都是收集了很多统计和材料，但并不是全部采取，而只是采取最能表现特点的一部分。
没有调查，就没有发言权。但就有同志要问:“十样事物，我调查了九样，只有一样没有调查，有没有发言权？” 我以为如果你调查的九样都是一些次要的东西，把主要的东西都丢掉了，那末，仍旧是没有发言权。&lt;/p>
&lt;p>　　今天中国主要的矛盾是民族矛盾，阶级矛盾成为次要的。西安事变前主要矛盾在国共两党之间，而西安事变后，主要矛盾则在中日之间。因此，今天无论解决任何问题，都应该以这个主要矛盾作为认识问题和解决问题的出发点。假若丢掉主要矛盾，而去研究细微末节，犹如见树木而不见森林，仍是无发言权的。&lt;/p>
&lt;p>　　所以，我们做综合工作时，不要陷于狭隘的经验论。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="三答复几个问题">三　答复几个问题&lt;/h2>
&lt;p>　　同志们提了很多问题，只能答复一部分。有些问题也不能答复，因为要全部答复了，同志们便可以不必下乡。而这许多问题又必须亲自下乡调查后才能了解，依据不同的具体对象和情况，而有不同的解决。&lt;/p>
&lt;p>　　怎样开调查会？一个调查会不仅提出问题，而且要有解决问题的方法。参加调查会最好有三五人。我在兴国调查中，知道地主占有土地达百分之四十，富农占有土地达百分之三十，地主、富农所共有的公堂土地 [4] 为百分之十，总计地主与富农占有土地百分之八十，中农、贫农只占有百分之二十。但是，地主人口不过百分之一，富农人口不过百分之五，而贫农、中农人口则占百分之八十。一方面以百分之六的人口占有土地百分之八十，另方面以百分之八十的人口则仅占有土地百分之二十。因此得出的结论，只有两个字：革命。因而也益增革命的信心，相信这个革命是能获得百分之八十以上人民的拥护和赞助的。&lt;/p>
&lt;p>　　怎样找调查的典型？调查的典型可以分为三种：一、先进的，二、中间的，三、落后的。如果能依据这种分类，每类调查两三个，即可知一般的情形了。&lt;/p>
&lt;p>　　如何收集和整理材料？都必须自己亲身去做，在做的过程中找出经验来，用这些经验再随时去改进以后的调查和整理材料的工作。&lt;/p>
&lt;p>　　怎样使对方说真话？各个人特点不同，因此，要采取的方法也各不相同。但是，主要的一点是要和群众做朋友，而不是去做侦探，使人家讨厌。群众不讲真话，是因为他们不知道你的来意究竟是否于他们有利。要在谈话过程中和做朋友的过程中，给他们一些时间摸索你的心，逐渐地让他们能够了解你的真意，把你当做好朋友看，然后才能调查出真情况来。群众不讲真话，不怪群众，只怪自己。&lt;/p>
&lt;p>　　我在兴国调查中，请了几个农民来谈话。开始时，他们很疑惧，不知我究竟要把他们怎么样。所以，第一天只是谈点家常事，他们脸上没有一点笑容，也不多讲。后来，请他们吃了饭，晚上又给他们宽大温暖的被子睡觉，这样使他们开始了解我的真意，慢慢有点笑容，说得也较多。到后来，我们简直毫无拘束，大家热烈地讨论，无话不谈，亲切得像自家人一样。&lt;/p>
&lt;p>　　其他问题也不必多谈，还是让你们早日下去亲自调查为好。&lt;/p>
&lt;hr>
&lt;p>　　根据人民出版社一九八二年出版的《毛泽东农村调查文集》刊印。　　&lt;/p>
&lt;hr>
&lt;h2 id="注释">注释&lt;/h2>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>指德国考茨基著的《〈爱尔福特纲领〉解说》，恽代英翻译，书名译为《阶级争斗》，一九二一年一月新青年出版社出版。 &lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2" role="doc-endnote">
&lt;p>指英国克卡朴（今译柯卡普）著的《社会主义史》，李季翻译，一九二○年十月新青年出版社出版。 &lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>追求卓越与A股估值虚高</title><link>/post/%E5%88%98%E7%BF%94%E5%92%8C%E6%88%91%E7%9A%84%E6%95%85%E4%BA%8B%E6%A8%A1%E5%9E%8B/</link><pubDate>Wed, 26 Dec 2018 00:00:00 +0000</pubDate><guid>/post/%E5%88%98%E7%BF%94%E5%92%8C%E6%88%91%E7%9A%84%E6%95%85%E4%BA%8B%E6%A8%A1%E5%9E%8B/</guid><description>&lt;p>为了说明一些道理，我们建立了一个刘翔和我的模型。&lt;/p>
&lt;p>假设刘翔在训练的时候一直只是跟我比赛110米跨栏。&lt;/p>
&lt;p>我绝对相信他永远能赢过我。但是，他肯定也赢不了奥运会奖牌了。因为他只需要不太努力就可以一直保持第一，就不会发挥出自己最大的潜能。&lt;/p>
&lt;p>马拉松比赛里经常有“兔子”的说法，就是组织方会在比赛一开始的时候安排几个跑得还可以的人保持较高的速度领跑，用来激发优秀选手的潜力。“兔子”可能会在中途退出，或者降慢速度后跑完全程。不过历史上也有“兔子”发挥太出色拿了冠军的。&lt;/p>
&lt;p>还有典型的就是，小城镇的学霸到了大城市的学校里，可能会被虐的死去活来。&lt;/p>
&lt;p>这里就是涉及到，是做鸡头还是凤尾的故事。&lt;/p>
&lt;p>如果你的鸡头可以永远做下去，那无妨在小城市做一个学霸。&lt;/p>
&lt;p>以前的时代或许可以，但是现在变化如此快速剧烈的时代，已经是想做鸡头而不得了。这也是资本主义制度下对人的异化。&lt;/p>
&lt;p>所以只可能选择从凤尾往前跑，没办法稳稳当当一直做鸡头了。这也是城市人经常焦虑的原因之一。&lt;/p>
&lt;p>同时，这也说明了一个事情，小城镇的学霸在小城镇的时候，成绩其实是虚高的。&lt;/p>
&lt;p>就像刘翔一直和我比赛，他每次都能跑第一，但是这里的第一，和奥运会、世锦赛上的第一，完全是两个东西。&lt;/p>
&lt;p>我高中的时候考生考试是按照成绩分考场，第一考场的学生肯定都是优秀的学生。我头两年都是在四五考场，第三年去的第一考场。一个明显的变化是，我的语文作文成绩提高了。当时我还诧异。后来同桌提醒，其实是老师懒得批阅，普遍给第一考场的学生高分。所以我的语文作文分数也被高估，虚高的。&lt;/p>
&lt;p>与之类似的就是我们的大A股。&lt;/p>
&lt;p>因为我们国家对老百姓的资金转移管控很严格，每个人每年只有5万美元的兑换额度，基本上有点钱的普通人，也投资不了国外资产，那就要么卖房，要么去炒A股。所以就导致我们的房价和股价，都是虚高的。&lt;/p>
&lt;p>A股的价值被高估基本上是共识。可以说90%以上的股票都是垃圾股。中国的会计，特别是上市公司的会计，第一要会的，基本上就是如何做账。想让它漂亮就漂亮，想让它垃圾就垃圾，通过人为控制低估和高估，来收割韭菜。&lt;/p>
&lt;p>这就是刘翔和我的故事模型给大家的启示：&lt;/p>
&lt;ol>
&lt;li>你现在牛逼不一定代表你真的牛逼。没有经过完整市场的考验，无法做出这个判断。&lt;/li>
&lt;li>现在已经是一个想做鸡头而不得的时代。想要真的过上好日子，只能选择追求卓越，而且是持续不断地追求卓越。而且还要让自己一直身处在优秀的圈子里。取法其上仅得其中，取法其中仅得其下。暂时的满足感优越感只会毁了未来的你。&lt;/li>
&lt;li>当然，偶尔也得劳逸结合。刘翔训练110米跨栏的时候也不是天天跑110米跨栏，他平时更多的训练是拉伸、负重、爆发力等。&lt;/li>
&lt;li>对A股保持足够的谨慎、警惕和距离。&lt;/li>
&lt;/ol>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="C:/Users/time/Documents/MEGA/%E4%B8%AA%E4%BA%BA%E6%96%87%E7%AB%A0/myBlog/myhugo_blog/blog/content/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>转载 | 乱哄哄你方唱罢我登场 --- 读张素华《变局 - 七千人大会始末》(余杰)</title><link>/post/%E4%B9%B1%E5%93%84%E5%93%84%E4%BD%A0%E6%96%B9%E5%94%B1%E7%BD%A2%E6%88%91%E7%99%BB%E5%9C%BA-%E8%AF%BB%E5%BC%A0%E7%B4%A0%E5%8D%8E%E5%8F%98%E5%B1%80-%E4%B8%83%E5%8D%83%E4%BA%BA%E5%A4%A7%E4%BC%9A%E5%A7%8B%E6%9C%AB%E4%BD%99%E6%9D%B0/</link><pubDate>Fri, 18 Jan 2008 00:00:00 +0000</pubDate><guid>/post/%E4%B9%B1%E5%93%84%E5%93%84%E4%BD%A0%E6%96%B9%E5%94%B1%E7%BD%A2%E6%88%91%E7%99%BB%E5%9C%BA-%E8%AF%BB%E5%BC%A0%E7%B4%A0%E5%8D%8E%E5%8F%98%E5%B1%80-%E4%B8%83%E5%8D%83%E4%BA%BA%E5%A4%A7%E4%BC%9A%E5%A7%8B%E6%9C%AB%E4%BD%99%E6%9D%B0/</guid><description>&lt;p>转载一篇文章。&lt;/p>
&lt;hr>
&lt;p>一九六二年一月，面对亘古未有的大饥荒的严峻形势，中共中央召集了七千人出席的中共中央五级干部工作会议。所谓“五级干部”，包括中央、各中央局、各省市自治区党委、地委、县委、重要厂矿及军队的负责干部。这次会议的规模迄今为止仍然是空前的，一下子在北京聚集了七千多人，前后持续了二十八天。这次会议在中共的历史上有着重要的位置，凡是研究当代历史的人，几乎都无法忽略这次大会。中共党史专家张素华所著之《变局 &amp;mdash; 七千人大会始末》一书，以翔实而丰富的史料，揭示了七千人大会的种种内幕。由于作者本人在中共中央文献研究室任职的身份，以及当下中国国内出版审查机制的限制，这本书不可能完成对七千人大会的黑幕的全面呈现，以及对中共的中央集权、一党独裁体制作出深刻反思，但作者平静而客观地描述了毛泽东、刘少奇、周恩来、朱德、陈云、邓小平、林彪等掌握最高权力的决策者们在会上的表现，以及权倾一时的地方诸侯们的批评与自我批评，他们或指鹿为马，或欲言又止，或冷酷无情，或良知未泯，他们在这次会议上的言论，直接影响到他们日后在更加残酷的党内斗争中的兴衰成败。这本书是当代中国的“资治通鉴”，被《中国图书报》评选为年度百佳图书，也被《中国青年报》列为年度八本最重要的图书之一。&lt;/p>
&lt;p>七千人大会埋下了毛、刘冲突的伏笔。刘少奇在大会上的讲话，事先只有一个简单的提纲，该提纲由毛泽东审阅过，毛并没有提出什么修订意见来。刘少奇根据此提纲作了即席讲话，滔滔不绝，一口气讲了三个小时，许多内容超过了那份毛看过的提纲。刘承认大跃进所犯下的错误比毛所承认的严重多了。毛过去总说大跃进的错误与成就相比，是一个指头与九个指头的关系；刘则说是三个指头和七个指头的关系，并承认实际情况可能更糟。刘还首次提出“人祸”的说法，此观点一针见血，需要十足的勇气和相当的胆略。刘少奇指出：“去年我回到湖南一个地方去，那里也发生了很大困难。我问农民：你们的困难是由于什么原因？有没有天灾？他们说：天灾有，但是小，产生困难的原因是‘三反天灾，七分人祸’。”这段讲话让所谓的“三年自然灾害”的谎言不攻自破。但是，刘代表中央所作的自我批评到此为止，他并没有进一步说明谁是始作俑者，什么人应当负什么样的责任，反而继续坚持“三面红旗”的正确，也不敢对毛泽东提倡的个人崇拜有所质疑。当会上有人提出，庐山会议上彭德怀的信上所讲的，不正是如今要解决的问题吗？刘少奇立即堵死了为彭德怀平反的缺口，指出彭长期以来在党内有一个小集团，同某些外国人在中国搞颠覆活动，给彭加了一个莫须有的、里通外国的罪名。刘之所以这样说，一方面是为了讨好毛，另一方面他与彭长期不合，庐山会议上他也是激烈批判彭的当事人之一，所以他不可能否定自我。此一细节也可以看出，党内政治斗争极其残酷，是非善恶一直被颠倒，人性一直被扭曲。&lt;/p>
&lt;p>七千人大会上讲话最大胆的不是刘少奇，而是政治局委员、书记处书记彭真。彭真在延安整风中崛起，从此成为刘系的一员大将。彭真在会上说：“我们的错误，首先是中央书记处负责，包括主席、少奇和中央常委的同志，该包括就包括，有多少错误就是多少错误。毛主席也不是说什么错误都没有，三五年过渡、食堂都是毛主席批的。我们对毛主席不是花岗岩，也是水成岩。毛主席的威信不是珠穆朗玛峰也是泰山，拿走几吨土，还是那么高。现在党内有一种倾向，不敢提意见，不敢检讨错误，一检讨就垮台。如果毛主席的百分之一、千分之一的错误不检讨，将给我们党留下恶劣影响。……从毛主席直到支部书记，各有各的帐。”彭真的这番讲话堪称石破天惊，当即遭到对毛忠心的陈伯达的反驳。当时，毛对这番批评没有公开的表示，但可以推测他从此便不再信任彭真。四年之后，毛一发动“文革”，首先决定打倒的便是掌控京畿的彭真。也许正是因为毛对彭真在七千人大会上的逆耳之言极其厌恶。毛是一个刚愎自用，心胸狭窄，听不得任何批评的人。自延安时代在党内奠定了一言九鼎、至高无上的地位之后，他便不容任何人对其决策提出挑战，即便是小小的修订也不行。在七千人大会上，毛的威信在一定程度上受损，对此他是不会甘心的。因此，七千人大会之后仅仅半年，大会上所制定的方针便被迅速毛强行扭转。显然，毛从未真正放弃权力、退居二线。&lt;/p>
&lt;p>这次会议上其他几名政治局常委的发言，各有千秋，耐人寻味。他们都是长期的政治斗争的幸存者，他们早已学会了明哲保身的方法。周恩来在延安整风之后，再也不敢对毛存有二心，从此心甘情愿地充当毛的大管家的角色。一九五六年，因提出反冒进问题，周受到毛的严厉批评，更是谨言慎行、不敢越雷池半步。在此次大会上，周恩来的讲话主要是代表国务院系统作自我批评，他给地方官员“透了实底，算了细账”，并指出中央的工作之所以存在若干的缺点和错误，乃是“违反了毛主席的许多宝贵的、合乎实际而又有远见的意见”。周的讲话不偏不倚，俨然是滴水不漏的外交辞令。&lt;/p>
&lt;p>邓小平的讲话，是以党的总书记的身份代表书记处作自我批评。该讲话被作者形容为“厚道人的一篇务实报告”，这显然是过誉之词。邓在当时的七常委中年纪最轻，升迁也最快，毛在八届七中全会上讲过：“权力集中在政治局常委和书记处，我为正帅，邓小平为副帅。”可见毛对邓的器重。其实，邓并非“厚道人”，邓见风使舵的精明并不下于周。邓的讲话从头至尾都没有涉及“三面红旗”的问题，也没有讲成绩和错误的比例，更没有讲天灾、人祸的问题。他虽然多次提及刘少奇的报告，更是反复赞美毛的讲话。所以，在文革中，邓小平虽然与刘少奇一起被打倒，但毛仍然将刘、邓区别对待：对刘毫不留情，让其死无葬身之地；对邓却手下留情，逼邓就范，并再度启用。&lt;/p>
&lt;p>朱德虽然名列常委，但早已淡出核心圈子。此次大会上，朱德的讲话三易其稿，作者从中勾勒了其复杂的心路历程。朱德多年在基层走访，比较了解民生疾苦，在第一稿中提出了积极发展手工业、恢复和发展家庭手工业和副业生产、积极发展对外贸易等建议。等到林彪的讲话受到毛的肯定之后，他立即收回原来的讲稿。朱德在庐山会议上一度同情和支持彭德怀，最后被迫批评彭“脾气执拗、固执己见”，毛当时便翘起腿来，在鞋底搔了几下，嘲讽朱德“隔靴搔痒”。毛的动作迹近狎诲，朱德深受羞辱。相比之下，指责彭德怀是“野心家、阴谋家和伪君子”的林彪，从此青云直上。由此，作者分析说：“朱德根据自己多年对林彪的观察，认为林彪最能揣摩毛泽东的心思，况且林彪的讲话当场受到了毛泽东的表扬。在这种情况下，朱德可能担心，大会会不会突然转向？再来一个类似庐山会议的反右倾？这或许是朱德决定换讲话稿的原因所在。”朱德的第二稿紧跟林彪发言的思路，赞美一九五八年以来不仅实现了“大跃进”，而且这个“大跃进”是“全面的”，&lt;/p>
&lt;p>“史无前例”的。但是，到了他大会发言的时候，他的主题却变成了与大会风马牛不相及的“反对修正主义”。或许他认为毛一向重视“反修”，讲这个话题既不必在事关国计民生问题上说违心话，也可以由此讨得毛的欢心吧？可见，朱德在毛泽东面前是何等忍气吞声。&lt;/p>
&lt;p>当时在党内排名第五、主管全国经济的陈云，本来在会上应当是发言的主角，却始终一言不发。虽然毛鼓动他发言，他却以“在做工业调查，还没有调查完，现在还没有把握来讲”为由谢绝了。陈云与周恩来一样，曾因为“反冒进”而受到毛的批评，从此便处于“半退休”状态。毛在汉口会议上曾经话中有话地说，有些人可能是“观潮派”、“秋后算账派”，以此暗指陈云。毛还对人说，陈云这个人靠不住，在情况好的时候就出来，情况不好的时候就称病。但也正因为如此老成世故，陈云才成为政坛上的长青树，即便在文革的惊涛骇浪中，也没有受到巨大的冲击。《陈云传》中记载了陈云在二十六年之后的一段回忆，他说：“一九六二年七千人大会，毛主席要我讲话，我不讲话，主要是和稀泥这不是我陈云的性格，同时不能给毛主席难堪。”这段话不无自我辩护的意思，但遮盖不住的事实是：罔顾数千万民众被活活饿死的事实，难道仅仅是为了“不给毛主席难堪”吗？更重要的恐怕是为了保全自己的地位吧 &amp;mdash; 谁愿意步彭德怀的后尘呢？&lt;/p>
&lt;p>七千人大会上真正的赢家乃是林彪。近年来国内掀起一股为林彪翻案的思潮，林彪的女儿林晓玲替父亲向那些受迫害的人及其家属道歉，与章诒和在电话中相对而泣，却被某些人斥责为给父亲丢脸。林彪与毛的决裂以及出走的经过，至今扑朔迷离，但将其描述为反对毛泽东独裁体制的英雄，也并不符合历史事实。林彪的窜升，是其主动努力的结果，而非毛强行让其上位。林彪在七千人大会上的表现便是铁的证据：当“三面红旗”受到普遍质疑、连毛本人也显得不那么理直气壮的时候，林彪却振振有词地为“三面红旗”辩护，让毛多少产生了一种患难逢知己的感觉。林彪强调毛的指示、警告和思想一贯正确，三年大饥荒之所以发生，就是因为负责执行的干部没有正确把握毛的指示、警告和思想。林还别有用心地谈到“团结”问题，这一翻天印足以全党缄口 &amp;mdash; 因为谁怀疑毛的正确领导，就是破坏党的团结，罪莫大焉！于是，毛带头为林鼓掌，对其他人的讲话都不予评论，却单单称赞林的讲话“很好”，并对当时身边的红人罗瑞卿说，这样的讲话你就讲不出来。林彪在七千人大会上的表现，终于赢得了毛的青睐，正如作者所指出的那样：“林彪在七千人大会上的讲话，无疑是增加他在毛泽东心目中的砝码，并奠定他以后地位的关键一环。”&lt;/p>
&lt;p>在七千大会上，四川省委书记李井泉、上海市委书记柯庆施、河南省委书记吴芝圃和安徽省委书记曾希圣等“四大左狂”并未受到严肃处理，尤其是李、吴、曾三人，在各自任职的省分制造了大量百姓被饿死的惨剧，却无人被追究责任，惟有曾希圣一人在刘少奇的坚持下被免职。如果在民主国家，这样的官员一定会被追究刑事责任。可是，在中共的统治下，最应该负责的最高统治者毛泽东视人命如草芥，拒绝承认错误，下面的官员自然就可以逍遥自在了。李、柯、吴、曾四人都与毛关系密切，李、吴都是毛在农民运动讲习所时期的学生，李长期担任毛的个人秘书，曾长期担任毛的警卫，柯则是毛的极左政策最积极的支持者。此四人安然过关，即表明毛的权力基础依然稳若磐石。&lt;/p>
&lt;p>七千人大会部分地停止了中共党内的左倾狂潮，遏制了惨绝人寰的大饥荒。但是，由于该大会根本不可能触及造成灾难的根本原因 &amp;mdash; 共产党的一党独裁和毛泽东的一人独裁，所以它不可能成为中共暴虐统治的转折点。它却像一面镜子一样，照出了经历过历次血腥的党内斗争之后，所有党内高层人士甘为毛泽东的奴仆的可耻面目；它也像一个舞台一样，各色人等轮番上阵，“你方唱罢我登场，反认他乡是故乡”。&lt;/p>
&lt;p>余杰 二零零八年一月九日&lt;/p>
&lt;p>© 2008 Radio Free Asia&lt;/p>
&lt;hr>
&lt;p>我个人并不同意最后一段。不过其他的内容可供参考。兼听则明，偏听则暗。总有人有别的意见，这样并没有什么问题。&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>vim入门</title><link>/post/vim%E5%85%A5%E9%97%A8/</link><pubDate>Mon, 31 Dec 2001 00:00:00 +0000</pubDate><guid>/post/vim%E5%85%A5%E9%97%A8/</guid><description>&lt;p>今天讲讲编程常用的工具，vim。&lt;/p>
&lt;h2 id="一vi介绍">一、vi介绍&lt;/h2>
&lt;h2 id="二vim介绍">二、vim介绍&lt;/h2>
&lt;p>&lt;img src="./images/vim8.png" alt="img">&lt;/p>
&lt;h3 id="1基本介绍">1、基本介绍&lt;/h3>
&lt;p>先摘录一下官网：&lt;/p>
&lt;p>&lt;img src="./images/0xbabaf000l.png" alt="img" title="comic">
Copyright (c) 2007 Laurent Gregoire&lt;/p>
&lt;blockquote>
&lt;p>Vim is a highly configurable text editor for efficiently creating and changing any kind of text. It is included as &amp;ldquo;vi&amp;rdquo; ith most UNIX systems and with Apple OS X.&lt;/p>
&lt;p>Vim is often called a &amp;ldquo;programmer&amp;rsquo;s editor,&amp;rdquo; and so useful for programming that many consider it an entire IDE. It&amp;rsquo;s not just for programmers, though. Vim is perfect for all kinds of text editing, from composing email to editing configuration files.&lt;/p>
&lt;p>Despite what the above comic suggests, Vim can be configured to work in a very simple (Notepad-like) way, called evim or Easy Vim.&lt;/p>
&lt;p>Vim is rock stable and is continuously being developed to become even better. Among its features are:&lt;/p>
&lt;ul>
&lt;li>persistent, multi-level undo tree&lt;/li>
&lt;li>extensive plugin system&lt;/li>
&lt;li>support for hundreds of programming languages and file formats&lt;/li>
&lt;li>powerful search and replace&lt;/li>
&lt;li>integrates with many tools&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Vim 是经典的 UNIX 编辑器 Vi 的深度改良版本。它增加了许多功能，包括：多级撤销、格式高亮、命令行历史、在线帮助、拼写检查、文件名补完、块操作、脚本支持，等等。除了字符界面版本之外，它也有图形界面版本（比如 gVim）。虽然 Vi 还在继续维护当中，但是大部分人都只在使用 Vim 了，你所见到和听到的大多是指 Vim——虽然你的命令名可能是 Vi。&lt;/p>
&lt;p>这个编辑器常用于程序员、系统管理员、黑客们进行编程和文本编辑。不像某些编辑器，它所有的命令都采用普通的键盘字符，因此在你的如飞般的十指之下，它的输入和操作速度非常快。当然，你也可以将功能键映射到某些命令上，甚至还可以支持鼠标。&lt;/p>
&lt;p>除了 &lt;em>Linux&lt;/em>之外，Vim 还可以运行在 MS-Windows （NT、2000、XP、Vista、7、8、10）、苹果、VMS 和几乎所有的 UNIX 分支上。 Vim 的旧版本还可以运行在 MS-DOS、MS-Windows 95/98/Me、Amiga DOS、Atari MiNT、BeOS、RISC OS 和 OS/2 上，不过新版本不再支持了。&lt;/p>
&lt;p>&lt;strong>通常情况下，国内使用的Ubuntu安装的vim是阉割版。想要完整版需要重装。&lt;/strong>&lt;/p>
&lt;p>可以用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">vim -v
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>查看自己的版本号。&lt;/p>
&lt;p>2016年Vim终于发布了8.0版本，结束了从2006年5月7日开始的7.0世代。目前的最新版本是2018年5月18日发布的8.1版本。&lt;/p>
&lt;h3 id="2新版功能">2、新版功能&lt;/h3>
&lt;p>8.0 版本中除了大量的细节改进和错误修复以外，主要支持以下的新功能：&lt;/p>
&lt;blockquote>
&lt;h4 id="1-支持异步-io-和通道channel">1. &lt;strong>支持异步 I/O 和通道channel&lt;/strong>&lt;/h4>
&lt;/blockquote>
&lt;p>Vim 现在可以和后台的其它进程进行消息交互。这样就可以开发一个运行在后台的服务器，并将结果发回给 Vim，这种交互方式称之为通道channel。在通道中使用 JSON 传递消息，因此你可以用任何一种语言来开发后台服务器，只需要它支持 JSON 即可。通过支持这种技术可以实现一些功能非常复杂的插件。&lt;/p>
&lt;ul>
&lt;li>不过我们一般用不到。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;h4 id="2-任务">2. &lt;strong>任务&lt;/strong>&lt;/h4>
&lt;/blockquote>
&lt;p>Vim 现在也能启动一个任务，并与之通讯或停止它。比如说，可以启动一个用于自动补完、格式检查等功能的进程。在任务和 Vim 之间的通讯是通过通道完成的。&lt;/p>
&lt;ul>
&lt;li>一般也用不到。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;h4 id="3-定时器">3. &lt;strong>定时器&lt;/strong>&lt;/h4>
&lt;/blockquote>
&lt;p>另外一个异步工作的是定时器timer，可以启动一个定时器并不断重复调用某个函数。比如：let tempTimer = timer_start(4000, &amp;lsquo;CheckTemp&amp;rsquo;) 。&lt;/p>
&lt;blockquote>
&lt;h4 id="4-partial">4. &lt;strong>Partial&lt;/strong>&lt;/h4>
&lt;/blockquote>
&lt;p>Vim 已经有了一个 Funcref 功能，这是一个函数引用。partial 也是一个函数引用，但是它可以绑定参数或字典。这对于频道或定时器的回调很有用。 比如：let tempTimer = timer_start(4000, function(&amp;lsquo;CheckTemp&amp;rsquo;, [&amp;lsquo;out&amp;rsquo;])) 。&lt;/p>
&lt;blockquote>
&lt;h4 id="5-lambda-和闭包">5. &lt;strong>Lambda 和闭包&lt;/strong>&lt;/h4>
&lt;/blockquote>
&lt;p>lambda 是创建函数最快的方式，比如：{args -&amp;gt; expr}。它对于 filter() 和 map() 很有用，而且还支持函数参数。如：call filter(mylist, {idx, val -&amp;gt; val &amp;gt; 20})。&lt;/p>
&lt;p>lambda 可以使用定义 lambda 表达式范围内的变量，这常被称之为闭包closure。&lt;/p>
&lt;blockquote>
&lt;h4 id="6-插件包">6. &lt;strong>插件包&lt;/strong>&lt;/h4>
&lt;/blockquote>
&lt;p>插件越来越多了，为了更好的管理插件，因此支持了插件包的支持。&lt;/p>
&lt;blockquote>
&lt;h4 id="7-窗口-id">7. &lt;strong>窗口 ID&lt;/strong>&lt;/h4>
&lt;/blockquote>
&lt;p>以前 Vim 中的窗口只能通过数字编号来访问，当打开、关闭或移动窗口时，这个数字也随之而变。现在每个窗口都有了一个唯一的 ID，可以更方便的找到它们。&lt;/p>
&lt;blockquote>
&lt;h4 id="8-折行缩进">8. &lt;strong>折行缩进&lt;/strong>&lt;/h4>
&lt;/blockquote>
&lt;p>新增的 &amp;lsquo;breakindent&amp;rsquo; 选项可以保证在折行时维持缩进不变。&lt;/p>
&lt;ul>
&lt;li>这个可以配置。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;h4 id="9-windows支持-directx">9. &lt;strong>Windows：支持 DirectX&lt;/strong>&lt;/h4>
&lt;/blockquote>
&lt;p>新增的 &amp;lsquo;renderoptions&amp;rsquo; 选项可以在 Windows 上切换到 DirectX （DirectWrite）引擎上。&lt;/p>
&lt;blockquote>
&lt;h4 id="10-支持-gtk-3">10. &lt;strong>支持 GTK+ 3&lt;/strong>&lt;/h4>
&lt;/blockquote>
&lt;p>一般用户很难注意到 GTK+ 3 和 GTK+ 2 的区别。对这两者的配置仍然都支持。&lt;/p>
&lt;p>更多的变化细节，可以参考官网。&lt;/p>
&lt;p>8.1版本做了少部分进一步优化，增加了debugger插件。&lt;/p>
&lt;h3 id="3下载">3、下载:&lt;/h3>
&lt;p>得到最新版本的 Vim 的最好方式是使用 Git ：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">git clone https://github.com/vim/vim.git
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>更多信息可参考： &lt;a href="http://www.vim.org/git.php">http://www.vim.org/git.php&lt;/a> 。&lt;/p>
&lt;ol>
&lt;li>&lt;strong>UNIX/Linux系统&lt;/strong>&lt;/li>
&lt;/ol>
&lt;p>源代码及运行时文件： &lt;a href="ftp://ftp.vim.org/pub/vim/unix/vim-8.0.tar.bz2">ftp://ftp.vim.org/pub/vim/unix/vim-8.0.tar.bz2&lt;/a> 。&lt;/p>
&lt;p>在 Linux 下，你总可以使用你的软件包管理器来安装最新的 Vim 8.0，不过如果你的发行版仓库还没有提供的新的 8.0 的话，你可以享受一下自己亲自动手编译vim的乐趣。&lt;/p>
&lt;p>如果你希望按照你自己的想法定制一个 Vim，那你可以下载源代码，并在 src 目录里面进行编译，可以参考 文件 src/INSTALL 了解如何编译和安装。&lt;/p>
&lt;ol start="2">
&lt;li>&lt;strong>Windows系统&lt;/strong>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">安装程序：&lt;span class="sb">`&lt;/span>ftp://ftp.vim.org/pub/vim/pc/gvim80.exe&lt;span class="sb">`&lt;/span>
运行文件：&lt;span class="sb">`&lt;/span> ftp://ftp.vim.org/pub/vim/pc/vim80rt.zip&lt;span class="sb">`&lt;/span>
Windows 95/98/NT/2000/XP/7 图形界面版：&lt;span class="sb">`&lt;/span>ftp://ftp.vim.org/pub/vim/pc/gvim80.zip&lt;span class="sb">`&lt;/span>
带有 OLE 支持的版本： &lt;span class="sb">`&lt;/span>ftp://ftp.vim.org/pub/vim/pc/gvim80ole.zip&lt;span class="sb">`&lt;/span>
Windows NT/2000/XP/7 字符界面版：&lt;span class="sb">`&lt;/span>ftp://ftp.vim.org/pub/vim/pc/vim80w32.zip&lt;span class="sb">`&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>8.0 不再支持的版本&lt;/p>
&lt;ol>
&lt;li>16 位的 DOS、OS/2 和 Amiga 版本&lt;/li>
&lt;li>32 位的 MS-DOS/Windows 95/98 的字符界面版&lt;/li>
&lt;li>16 位的 MS-Windows 版本&lt;/li>
&lt;/ol>
&lt;h3 id="4文档与帮助">4、文档与帮助&lt;/h3>
&lt;p>对于初学者来说，有一个叫 vimtutor 的一小时教程可以看看（当然是英文的），可以通过在vim界限下输入 &lt;code>:help tutor&lt;/code> 了解更多信息。&lt;/p>
&lt;p>学习 Vim 的最好方式之一是在 Vim 中使用:help，如果你还没有 Vim 二进制程序，你也可以看看 runtime/doc/help.txt，它包含了对其它文档的指引。这个用户手册就像一本书一样，推荐使用它来学习 Vim。更详细的可以在vim界面下输入 &lt;code>:help user-manual&lt;/code> 查看学习。&lt;/p>
&lt;h2 id="三常用配置">三、常用配置&lt;/h2>
&lt;h3 id="1全局配置">1、全局配置&lt;/h3>
&lt;p>vim的全局配置在文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">/etc/vim/vimrc
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>里。作为多用户管理系统，不建议直接修改这里的文件，因为会影响其他用户，在自己的家目录下修改vim配置，仅供自己使用就可以。当然，这个情况指的是你的Linux系统是供多人使用的。像我的Linux系统是装在我自己电脑的虚拟机上，我反而喜欢在系统配置文件里修改，这样我换了别的用户还是这样的配置。&lt;/p>
&lt;p>我们可以先看一眼全局配置的内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">cat /etc/vim/vimrc
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>输出为：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="s2">&amp;#34; All system-wide defaults are set in &lt;/span>&lt;span class="nv">$VIMRUNTIME&lt;/span>&lt;span class="s2">/debian.vim and sourced by
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> the call to :runtime you can find below. If you wish to change any of those
&lt;span class="s2">&amp;#34; settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> will be overwritten everytime an upgrade of the vim packages is performed.
&lt;span class="s2">&amp;#34; It is recommended to make changes after sourcing debian.vim since it alters
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> the value of the &lt;span class="s1">&amp;#39;compatible&amp;#39;&lt;/span> option.
&lt;span class="s2">&amp;#34; This line should not be removed as it ensures that various options are
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> properly &lt;span class="nb">set&lt;/span> to work with the Vim-related packages available in Debian.
runtime! debian.vim
&lt;span class="s2">&amp;#34; Uncomment the next line to make Vim more Vi-compatible
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> NOTE: debian.vim sets &lt;span class="s1">&amp;#39;nocompatible&amp;#39;&lt;/span>. Setting &lt;span class="s1">&amp;#39;compatible&amp;#39;&lt;/span> changes numerous
&lt;span class="s2">&amp;#34; options, so any other options should be set AFTER setting &amp;#39;compatible&amp;#39;.
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nb">set&lt;/span> compatible
&lt;span class="s2">&amp;#34; Vim5 and later versions support syntax highlighting. Uncommenting the next
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> line enables syntax highlighting by default.
&lt;span class="k">if&lt;/span> has&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;syntax&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
syntax on
endif
&lt;span class="s2">&amp;#34; If using a dark background within the editing area and syntax highlighting
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> turn on this option as well
&lt;span class="s2">&amp;#34;set background=dark
&lt;/span>&lt;span class="s2">
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> Uncomment the following to have Vim jump to the last position when
&lt;span class="s2">&amp;#34; reopening a file
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="k">if&lt;/span> has&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;autocmd&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="s2">&amp;#34; au BufReadPost * if line(&amp;#34;&lt;/span>&lt;span class="s1">&amp;#39;\&amp;#34;&amp;#34;) &amp;gt; 1 &amp;amp;&amp;amp; line(&amp;#34;&amp;#39;&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s2">&amp;#34;) &amp;lt;= line(&amp;#34;$&amp;#34;) | exe &amp;#34;&lt;/span>normal! g&lt;span class="err">&amp;#39;&lt;/span>&lt;span class="se">\&amp;#34;&lt;/span>&lt;span class="s2">&amp;#34; | endif
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>endif
&lt;span class="s2">&amp;#34; Uncomment the following to have Vim load indentation rules and plugins
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> according to the detected filetype.
&lt;span class="s2">&amp;#34;if has(&amp;#34;&lt;/span>autocmd&lt;span class="s2">&amp;#34;)
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> filetype plugin indent on
&lt;span class="s2">&amp;#34;endif
&lt;/span>&lt;span class="s2">
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> The following are commented out as they cause vim to behave a lot
&lt;span class="s2">&amp;#34; differently from regular Vi. They are highly recommended though.
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nb">set&lt;/span> showcmd &lt;span class="s2">&amp;#34; Show (partial) command in status line.
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nb">set&lt;/span> showmatch &lt;span class="s2">&amp;#34; Show matching brackets.
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nb">set&lt;/span> ignorecase &lt;span class="s2">&amp;#34; Do case insensitive matching
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nb">set&lt;/span> smartcase &lt;span class="s2">&amp;#34; Do smart case matching
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nb">set&lt;/span> incsearch &lt;span class="s2">&amp;#34; Incremental search
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nb">set&lt;/span> autowrite &lt;span class="s2">&amp;#34; Automatically save before commands like :next and :make
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nb">set&lt;/span> hidden &lt;span class="s2">&amp;#34; Hide buffers when they are abandoned
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nb">set&lt;/span> &lt;span class="nv">mouse&lt;/span>&lt;span class="o">=&lt;/span>a &lt;span class="s2">&amp;#34; Enable mouse usage (all modes)
&lt;/span>&lt;span class="s2">
&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> Source a global configuration file &lt;span class="k">if&lt;/span> available
&lt;span class="k">if&lt;/span> filereadable&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;/etc/vim/vimrc.local&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;span class="nb">source&lt;/span> /etc/vim/vimrc.local
endif
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面的是bash语言，大家只需要知道开头加 &lt;code>&amp;quot;&lt;/code> 是注释掉不起作用的意思即可。&lt;/p>
&lt;p>我们先看一下39-40行说的是啥：下面的命令被注释掉，是因为它们会使得vim的操作和vi的通用操作不太一样，不过还是挺建议打开它们（如果你知道自己在做什么的情况下）。&lt;/p>
&lt;p>下面再看看41-48行的命令是做什么的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="s2">&amp;#34;set showcmd &amp;#34;&lt;/span> 在vim的状态条里显示输入的命令。
&lt;span class="s2">&amp;#34;set showmatch &amp;#34;&lt;/span> 显示匹配成对的括号。
&lt;span class="s2">&amp;#34;set ignorecase &amp;#34;&lt;/span> 大小写不敏感。或者说不区分大小写。
&lt;span class="s2">&amp;#34;set smartcase &amp;#34;&lt;/span> 开启智能大小写匹配。就是自动帮你识别此时应该是大写还是小写。
&lt;span class="s2">&amp;#34;set incsearch &amp;#34;&lt;/span> 增量搜索。
&lt;span class="s2">&amp;#34;set autowrite &amp;#34;&lt;/span> 在输入一些修改命令前自动保存。
&lt;span class="s2">&amp;#34;set hidden &amp;#34;&lt;/span> 当缓存区不使用时清空。
&lt;span class="s2">&amp;#34;set mouse=a &amp;#34;&lt;/span> 在任何模式下允许鼠标的使用。就是可以用鼠标定位光标、以及大块选择。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>所以上面这些其实都挺值得开启使用的。去掉开头的 &lt;code>&amp;quot;&lt;/code> 就可以了。&lt;/p>
&lt;h3 id="2个人配置">2、个人配置&lt;/h3>
&lt;p>接下来讲在自己的用户目录下设置vim。&lt;/p>
&lt;p>一般情况下在当前用户根目录 &lt;strong>~/&lt;/strong> 下没有.vimrc文件，故直接建立该文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">vim ~/.vimrc
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后可以先设置如下内容：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">colorscheme desert &lt;span class="s2">&amp;#34;这个是设置颜色主题，我选的是沙漠主题，普通字体是黄沙色。
&lt;/span>&lt;span class="s2">syntax on &amp;#34;&lt;/span>这个是设置语法识别。就是识别编程语言的语法是否有问题。不过很简陋。
&lt;span class="nb">set&lt;/span> number &lt;span class="s2">&amp;#34;这个是显示行号。我其实更建议这个写进全局配置里。因为每个用户应该都挺想知道自己现在在哪行。
&lt;/span>&lt;span class="s2">set shiftwidth=4 &amp;#34;&lt;/span>这个是设置一个回车后的自动添加的缩进是4个空格。为的是和python的PEP8格式一致。像Java、C之类也有缩进的时候，这里也被设置为4了。
&lt;span class="nb">set&lt;/span> &lt;span class="nv">softtabstop&lt;/span>&lt;span class="o">=&lt;/span>4 &lt;span class="s2">&amp;#34;这个是设置按一次tab键为4个空格。
&lt;/span>&lt;span class="s2">set tabstop=4 &amp;#34;&lt;/span>设置和上面的区别是少了soft，也是设置按一次tab键为4个空格。
&lt;span class="nb">set&lt;/span> expandtab
&lt;span class="nb">set&lt;/span> showcmd &lt;span class="s2">&amp;#34;这个其实在全局配置里有。
&lt;/span>&lt;span class="s2">set cursorline &amp;#34;&lt;/span>设置在当前行显示横线以突出所在行。比较醒目自己现在在哪行了。
&lt;span class="nb">set&lt;/span> &lt;span class="nv">mouse&lt;/span>&lt;span class="o">=&lt;/span>a &lt;span class="s2">&amp;#34;这个其实在全局配置里有。
&lt;/span>&lt;span class="s2">filetype indent on
&lt;/span>&lt;span class="s2">set lazyredraw
&lt;/span>&lt;span class="s2">set showmatch &amp;#34;&lt;/span>这个其实在全局配置里有。
&lt;span class="nb">set&lt;/span> incsearch &lt;span class="s2">&amp;#34;这个其实在全局配置里有。
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>改变vim配色：安装colorscheme&lt;/p>
&lt;p>主要有两种方式安装colorscheme：&lt;/p>
&lt;ol>
&lt;li>自行下载colorscheme安装，下载的文件扩展名通常为.vim。&lt;/li>
&lt;li>通过安装相关vim的插件获取。&lt;/li>
&lt;/ol>
&lt;h3 id="1自行下载colorscheme安装">1、自行下载colorscheme安装&lt;/h3>
&lt;p>在vim的配置文件&lt;code>.vimrc&lt;/code>中配色方案的设置&lt;code>colorscheme foo&lt;/code>为：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">set t_Co=256 &amp;#34; required
colorscheme desert12
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>不过有时候我们对于自带的配色方案不太满意，那要怎么自己安装一些配色方案呢？主要分三步：&lt;/p>
&lt;ol>
&lt;li>在当前用户目录 &lt;code>~/&lt;/code> 下的 &lt;code>.vim&lt;/code> 目录(如果没有，&lt;code>mkdir ~/.vim&lt;/code>进行新建该目录)。在 &lt;code>~/.vim/&lt;/code> 下新建一个叫 &lt;code>colors&lt;/code>的目录，我们下一步下载的配色方案.vim文件便放到该目录下。&lt;/li>
&lt;li>到一个配色网站上选择一个配色方案下载到 &lt;code>~/.vim/colors&lt;/code> 目录下面。这里推荐一个非常好的网站: &lt;a href="http://bytefluent.com/vivify/">A ColorScheme Editor for Vim&lt;/a>, 这个网站不仅有很多的配色方案可供选择，还能自行进行编辑(比如变亮或变暗)再下载。比如我们看好了一个叫molokai的配色方案，点击下载按钮后下载 molokai.vim 的文件到 &lt;code>~/.vim/colors&lt;/code> 目录下面
&lt;img src="./images/20160713204112504.png" alt="vivify">&lt;/li>
&lt;li>修改 &lt;code>.vimrc&lt;/code> 配置文件：&lt;code>colorscheme molokai&lt;/code>，退出再打开vim就能看到效果了。&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>注：网站上看到的配色方案效果仅供参考，不一定与实际使用的效果一样。&lt;/p>
&lt;/blockquote>
&lt;h3 id="2使用插件安装">2、使用插件安装&lt;/h3>
&lt;p>vim插件：&lt;a href="https://github.com/flazz/vim-colorschemes">https://github.com/flazz/vim-colorschemes&lt;/a>，使用插件管理器进行快速安装，安装完成后直接设置即可。&lt;/p>
&lt;h3 id="3自己写一个-colorscheme">3、自己写一个 colorscheme&lt;/h3>
&lt;p>其实很简单，照葫芦画瓢即可，可以看我自己按照 spacemacs dark theme 修改的 &lt;a href="https://github.com/liuchengxu/space-vim-dark">space-vim-dark&lt;/a> colorscheme,&lt;/p>
&lt;p>&lt;img src="./images/space-vim-gui.png" alt="space-vim">&lt;/p>
&lt;p>打开 colors 下面的 colorscheme, 其实很简单，完全可以自己写一个，主要内容差不多都是这样：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">hi Function ctermfg=134 guifg=#af5fd7 gui=bold cterm=bold
hi Identifier ctermfg=98 guifg=#875fd7 gui=bold cterm=bold12
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>hi 就是 highlight，后面跟上一个类型，比如 Function, 就是指函数了，cterm 指的是 terminal 中的样式，比如加粗 bold，下划线 underline, gui 指的是 GUI vim中的样式，fg指的是 front ground前景色，bg 指的是 background 背景色, 基本就是如此了。&lt;/p>
&lt;p>调教一番就能使用了。&lt;/p>
&lt;p>reddit 上也有一个关于创建 Colorscheme 的讨论：&lt;a href="https://www.reddit.com/r/vim/comments/7auw18/creating_your_lovely_color_scheme_vimconf2017/">Creating Your Lovely Color Scheme&lt;/a>&lt;/p>
&lt;p>Vim的颜色主题在&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">/usr/share/vim/vim74/colors
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>文件夹里。其中&lt;strong>vim74&lt;/strong>文件夹名跟你所使用的vim版本号有关，如果是7.3版本，则是vim73。打开vim后在normal模式下输入“：colorscheme”查看当前的主题，修改主题使用命令“：colorscheme mycolor”，其中mycolor是你usr/share/vim/vim74/colors文件夹包含的文件名。也可以把这个命令写入~/.vimrc配置文件中，这样每次打开Vim都是你设定的主题。&lt;/p>
&lt;p>&lt;img src="./images/20140322133716468.jfif" alt="img">&lt;/p>
&lt;p>上面是默认就会安装的colorscheme选项。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">blue.vim README.txt
desert.vim
koehler.vim
peachpuff.vim
slate.vim
darkblue.vim
elflord.vim
morning.vim
torte.vim
default.vim
evening.vim
murphy.vim
ron.vim
zellner.vim
delek.vim
industry.vim
pablo.vim
shine.vim
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>README.txt里的内容如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">README.txt for color scheme files
These files are used for the &amp;#34;:colorscheme&amp;#34; command. They appear in the
Edit/Color Scheme menu in the GUI.
Hints for writing a color scheme file:
There are two basic ways to define a color scheme:
1. Define a new Normal color and set the &amp;#39;background&amp;#39; option accordingly.
set background={light or dark}
highlight clear
highlight Normal ...
...
2. Use the default Normal color and automatically adjust to the value of
&amp;#39;background&amp;#39;.
highlight clear Normal
set background&amp;amp;
highlight clear
if &amp;amp;background == &amp;#34;light&amp;#34;
highlight Error ...
...
else
highlight Error ...
...
endif
You can use &amp;#34;:highlight clear&amp;#34; to reset everything to the defaults, and then
change the groups that you want differently. This also will work for groups
that are added in later versions of Vim.
Note that &amp;#34;:highlight clear&amp;#34; uses the value of &amp;#39;background&amp;#39;, thus set it
before this command.
Some attributes (e.g., bold) might be set in the defaults that you want
removed in your color scheme. Use something like &amp;#34;gui=NONE&amp;#34; to remove the
attributes.
In case you want to set &amp;#39;background&amp;#39; depending on the colorscheme selected,
this autocmd might be useful:
autocmd SourcePre */colors/blue_sky.vim set background=dark
Replace &amp;#34;blue_sky&amp;#34; with the name of the colorscheme.
In case you want to tweak a colorscheme after it was loaded, check out that
ColorScheme autocmd event.
To see which highlight group is used where, find the help for
&amp;#34;highlight-groups&amp;#34; and &amp;#34;group-name&amp;#34;.
You can use &amp;#34;:highlight&amp;#34; to find out the current colors. Exception: the
ctermfg and ctermbg values are numbers, which are only valid for the current
terminal. Use the color names instead. See &amp;#34;:help cterm-colors&amp;#34;.
The default color settings can be found in the source file src/syntax.c.
Search for &amp;#34;highlight_init&amp;#34;.
If you think you have a color scheme that is good enough to be used by others,
please check the following items:
- Does it work in a color terminal as well as in the GUI?
- Is &amp;#34;g:colors_name&amp;#34; set to a meaningful value? In case of doubt you can do
it this way:
let g:colors_name = expand(&amp;#39;&amp;lt;sfile&amp;gt;:t:r&amp;#39;)
- Is &amp;#39;background&amp;#39; either used or appropriately set to &amp;#34;light&amp;#34; or &amp;#34;dark&amp;#34;?
- Try setting &amp;#39;hlsearch&amp;#39; and searching for a pattern, is the match easy to
spot?
- Split a window with &amp;#34;:split&amp;#34; and &amp;#34;:vsplit&amp;#34;. Are the status lines and
vertical separators clearly visible?
- In the GUI, is it easy to find the cursor, also in a file with lots of
syntax highlighting?
- Do not use hard coded escape sequences, these will not work in other
terminals. Always use color names or #RRGGBB for the GUI.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下面给出几个主题的实例，选择自己喜欢的，让你的Vim炫起来！&lt;/p>
&lt;p>&lt;img src="./images/20140322133754562.png" alt="img">&lt;/p>
&lt;p>上图是evening主题&lt;/p>
&lt;p>&lt;img src="./images/20140322134009671.png" alt="img">&lt;/p>
&lt;p>上图murphy主题&lt;/p>
&lt;p>&lt;img src="./images/20140322134203859.png" alt="img">&lt;/p>
&lt;p>上图peachpuff主题&lt;/p>
&lt;h2 id="四插件">四、插件&lt;/h2>
&lt;h2 id="五常用操作">五、常用操作&lt;/h2>
&lt;h2 id="六异常">六、异常&lt;/h2>
&lt;h3 id="vim-youcompleteme异常">Vim YouCompleteMe异常&lt;/h3>
&lt;p>异常信息如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">The ycmd server SHUT DOWN &lt;span class="o">(&lt;/span>restart with &lt;span class="s1">&amp;#39;:YcmRestartServer&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>.
Unexpected error &lt;span class="k">while&lt;/span> loading the YCM core library.
Use the &lt;span class="s1">&amp;#39;:YcmToggleLogs&amp;#39;&lt;/span> &lt;span class="nb">command&lt;/span> to check the logs.123
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>重装YouCompleteMe&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">python3 YouCompleteMe/install.py --clang-completer --racer-completer1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>安装YouCompleteMe过程中提示cargo异常&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">ERROR: cargo is required for the Rust completer.1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果提示cargo异常，需要安装cargo，命令如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">curl -sSf https://static.rust-lang.org/rustup.sh | sh1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>cargo安装成功后再重试上述步骤1&lt;/p>
&lt;h3 id="参考">参考&lt;/h3>
&lt;blockquote>
&lt;p>&lt;a href="https://github.com/Valloric/YouCompleteMe/issues/2579">“ycmd server SHUTDOWN” error&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://doc.crates.io/">Cargo, Rust’s Package Manager&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h1 id="ubuntu终端中修改vim插入模式下光标实现为竖线状">Ubuntu终端中，修改Vim插入模式下光标实现为竖线状&lt;/h1>
&lt;p>2017年11月12日 20:57:31&lt;/p>
&lt;p>阅读数：1207&lt;/p>
&lt;p>原文：&lt;a href="http://vim.wikia.com/wiki/Change_cursor_shape_in_different_modes">Change cursor shape in different modes&lt;/a>&lt;/p>
&lt;hr>
&lt;p>不同终端版本修改代码不同。&lt;/p>
&lt;p>使用如下命令查看Gnome-Terminal终端的版本：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">aptitude show gnome-terminal1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;p>To change the shape of the cursor in different modes, you can add the following into your vimrc.&lt;/p>
&lt;p>将不同版本终端对应的代码添加到vimrc文件中即可。&lt;/p>
&lt;p>我的终端版本为3.18***，vimrc文件位于etc/vim/vimrc&lt;/p>
&lt;hr>
&lt;h1 id="for-the-gnome-terminal-version-226edit">For the Gnome-Terminal (version 2.26)Edit&lt;/h1>
&lt;p>This makes your cursor change in all open terminals. Upgrade your terminal and use the version above instead.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">if has(&amp;#34;autocmd&amp;#34;)
au InsertEnter * silent execute &amp;#34;!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape ibeam&amp;#34;
au InsertLeave * silent execute &amp;#34;!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape block&amp;#34;
au VimLeave * silent execute &amp;#34;!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape ibeam&amp;#34;
endif12345
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h1 id="for-the-gnome-terminal-version-3xedit">For the Gnome-Terminal (version 3.x)Edit&lt;/h1>
&lt;p>First make a script gnome-terminal-cursor-shape.sh&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="cp">#!/bin/sh
&lt;/span>&lt;span class="cp">&lt;/span>&lt;span class="nv">DEFAULTPROF&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>dconf &lt;span class="nb">read&lt;/span> /org/gnome/terminal/legacy/profiles:/default&lt;span class="sb">`&lt;/span>
&lt;span class="nv">DEFAULTPROF&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$DEFAULTPROF&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> sed -e &lt;span class="s2">&amp;#34;s/^&amp;#39;/:/&amp;#34;&lt;/span> -e &lt;span class="s2">&amp;#34;s/&amp;#39;&lt;/span>$&lt;span class="s2">//&amp;#34;&lt;/span>&lt;span class="sb">`&lt;/span>
dconf write /org/gnome/terminal/legacy/profiles:/&lt;span class="nv">$DEFAULTPROF&lt;/span>/cursor-shape &lt;span class="s2">&amp;#34;&amp;#39;&lt;/span>&lt;span class="nv">$1&lt;/span>&lt;span class="s2">&amp;#39;&amp;#34;&lt;/span>&lt;span class="m">1234&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Make it executable &amp;amp; put it in /usr/local/bin Next, add this to .vimrc&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">if has(&amp;#34;autocmd&amp;#34;)
au InsertEnter *
\ if v:insertmode == &amp;#39;i&amp;#39; |
\ silent execute &amp;#34;!gnome-terminal-cursor-shape.sh ibeam&amp;#34; |
\ elseif v:insertmode == &amp;#39;r&amp;#39; |
\ silent execute &amp;#34;!gnome-terminal-cursor-shape.sh underline&amp;#34; |
\ endif
au InsertLeave * silent execute &amp;#34;!gnome-terminal-cursor-shape.sh block&amp;#34;
au VimLeave * silent execute &amp;#34;!gnome-terminal-cursor-shape.sh block&amp;#34;
endif12345678910
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>If you use more than one profile in gnome-terminal, you might have to adapt this to your profiles.&lt;/p>
&lt;h1 id="for-the-gnome-terminal-version-316-edit">For the Gnome-Terminal (version ≥3.16) Edit&lt;/h1>
&lt;p>This method has the advantage compared to the method above that it influences the given tab only, and not all the tabs that use the given profile. Add the following into .vimrc&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">if has(&amp;#34;autocmd&amp;#34;)
au VimEnter,InsertLeave * silent execute &amp;#39;!echo -ne &amp;#34;\e[2 q&amp;#34;&amp;#39; | redraw!
au InsertEnter,InsertChange *
\ if v:insertmode == &amp;#39;i&amp;#39; |
\ silent execute &amp;#39;!echo -ne &amp;#34;\e[6 q&amp;#34;&amp;#39; | redraw! |
\ elseif v:insertmode == &amp;#39;r&amp;#39; |
\ silent execute &amp;#39;!echo -ne &amp;#34;\e[4 q&amp;#34;&amp;#39; | redraw! |
\ endif
au VimLeave * silent execute &amp;#39;!echo -ne &amp;#34;\e[ q&amp;#34;&amp;#39; | redraw!
endif12345678910
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Above snippet disables cursor blinking. If you want cursor blink, just decrement all the 3 numbers above 2,4,6 by one each.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">if has(&amp;#34;autocmd&amp;#34;)
au VimEnter,InsertLeave * silent execute &amp;#39;!echo -ne &amp;#34;\e[1 q&amp;#34;&amp;#39; | redraw!
au InsertEnter,InsertChange *
\ if v:insertmode == &amp;#39;i&amp;#39; |
\ silent execute &amp;#39;!echo -ne &amp;#34;\e[5 q&amp;#34;&amp;#39; | redraw! |
\ elseif v:insertmode == &amp;#39;r&amp;#39; |
\ silent execute &amp;#39;!echo -ne &amp;#34;\e[3 q&amp;#34;&amp;#39; | redraw! |
\ endif
au VimLeave * silent execute &amp;#39;!echo -ne &amp;#34;\e[ q&amp;#34;&amp;#39; | redraw!
endif
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>Git入门</title><link>/post/git%E5%85%A5%E9%97%A8.fr/</link><pubDate>Sat, 30 Dec 2000 00:00:00 +0000</pubDate><guid>/post/git%E5%85%A5%E9%97%A8.fr/</guid><description>&lt;h2 id="一git是什么">一、Git是什么&lt;/h2>
&lt;p>1、&lt;/p>
&lt;p>2、&lt;/p>
&lt;h2 id="二git基本用法">二、Git基本用法&lt;/h2>
&lt;p>一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。&lt;/p>
&lt;p>&lt;img src="./images/bg2015120901.png" alt="img">&lt;/p>
&lt;p>下面是我整理的常用 Git 命令清单。几个专用名词的译名如下。&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>Workspace：工作区&lt;/li>
&lt;li>Index / Stage：暂存区&lt;/li>
&lt;li>Repository：仓库区（或本地仓库）&lt;/li>
&lt;li>Remote：远程仓库&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="一新建代码库">一、新建代码库&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git init &lt;span class="c1"># 在当前目录新建一个Git代码库&lt;/span>
git init &lt;span class="o">[&lt;/span>project-name&lt;span class="o">]&lt;/span> &lt;span class="c1"># 新建一个目录，将其初始化为Git代码库&lt;/span>
git clone &lt;span class="o">[&lt;/span>url&lt;span class="o">]&lt;/span> &lt;span class="c1"># 下载一个项目和它的整个代码历史&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="二配置">二、配置&lt;/h3>
&lt;p>Git的设置文件为**.gitconfig**，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git config --list &lt;span class="c1"># 显示当前的Git配置&lt;/span>
git config -e &lt;span class="o">[&lt;/span>--global&lt;span class="o">]&lt;/span> &lt;span class="c1"># 编辑Git配置文件&lt;/span>
git config &lt;span class="o">[&lt;/span>--global&lt;span class="o">]&lt;/span> user.name &lt;span class="s2">&amp;#34;[name]&amp;#34;&lt;/span> &lt;span class="c1"># 设置提交代码时的用户信息&lt;/span>
git config &lt;span class="o">[&lt;/span>--global&lt;span class="o">]&lt;/span> user.email &lt;span class="s2">&amp;#34;[email address]&amp;#34;&lt;/span> &lt;span class="c1"># 设置提交代码时的用户信息&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="三增加删除文件">三、增加/删除文件&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git add &lt;span class="o">[&lt;/span>file1&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>file2&lt;span class="o">]&lt;/span> ... &lt;span class="c1"># 添加指定文件到暂存区&lt;/span>
git add &lt;span class="o">[&lt;/span>dir&lt;span class="o">]&lt;/span> &lt;span class="c1"># 添加指定目录到暂存区，包括子目录&lt;/span>
git add . &lt;span class="c1"># 添加当前目录的所有文件到暂存区&lt;/span>
git add -p &lt;span class="c1"># 添加每个变化前，都会要求确认，对于同一个文件的多处变化，可以实现分次提交&lt;/span>
git rm &lt;span class="o">[&lt;/span>file1&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>file2&lt;span class="o">]&lt;/span> ... &lt;span class="c1"># 删除工作区文件，并且将这次删除放入暂存区&lt;/span>
git rm --cached &lt;span class="o">[&lt;/span>file&lt;span class="o">]&lt;/span> &lt;span class="c1"># 停止追踪指定文件，但该文件会保留在工作区&lt;/span>
git mv &lt;span class="o">[&lt;/span>file-original&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>file-renamed&lt;span class="o">]&lt;/span> &lt;span class="c1"># 改名文件，并且将这个改名放入暂存区&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="四代码提交">四、代码提交&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git commit -m &lt;span class="o">[&lt;/span>message&lt;span class="o">]&lt;/span> &lt;span class="c1"># 提交暂存区到仓库区&lt;/span>
git commit &lt;span class="o">[&lt;/span>file1&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>file2&lt;span class="o">]&lt;/span> ... -m &lt;span class="o">[&lt;/span>message&lt;span class="o">]&lt;/span> &lt;span class="c1"># 提交暂存区的指定文件到仓库区&lt;/span>
git commit -a &lt;span class="c1"># 提交工作区自上次commit之后的变化，直接到仓库区&lt;/span>
git commit -v &lt;span class="c1"># 提交时显示所有diff信息&lt;/span>
git commit --amend -m &lt;span class="o">[&lt;/span>message&lt;span class="o">]&lt;/span> &lt;span class="c1"># 使用一次新的commit，替代上一次提交,如果代码没有任何新变化，则用来改写上一次commit的提交信息&lt;/span>
git commit --amend &lt;span class="o">[&lt;/span>file1&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>file2&lt;span class="o">]&lt;/span> ... &lt;span class="c1"># 重做上一次commit，并包括指定文件的新变化&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="五分支">五、分支&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 列出所有本地分支&lt;/span>
$ git branch
&lt;span class="c1"># 列出所有远程分支&lt;/span>
$ git branch -r
&lt;span class="c1"># 列出所有本地分支和远程分支&lt;/span>
$ git branch -a
&lt;span class="c1"># 新建一个分支，但依然停留在当前分支&lt;/span>
$ git branch &lt;span class="o">[&lt;/span>branch-name&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 新建一个分支，并切换到该分支&lt;/span>
$ git checkout -b &lt;span class="o">[&lt;/span>branch&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 新建一个分支，指向指定commit&lt;/span>
$ git branch &lt;span class="o">[&lt;/span>branch&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>commit&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 新建一个分支，与指定的远程分支建立追踪关系&lt;/span>
$ git branch --track &lt;span class="o">[&lt;/span>branch&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>remote-branch&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 切换到指定分支，并更新工作区&lt;/span>
$ git checkout &lt;span class="o">[&lt;/span>branch-name&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 切换到上一个分支&lt;/span>
$ git checkout -
&lt;span class="c1"># 建立追踪关系，在现有分支与指定的远程分支之间&lt;/span>
$ git branch --set-upstream &lt;span class="o">[&lt;/span>branch&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>remote-branch&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 合并指定分支到当前分支&lt;/span>
$ git merge &lt;span class="o">[&lt;/span>branch&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 选择一个commit，合并进当前分支&lt;/span>
$ git cherry-pick &lt;span class="o">[&lt;/span>commit&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 删除分支&lt;/span>
$ git branch -d &lt;span class="o">[&lt;/span>branch-name&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 删除远程分支&lt;/span>
$ git push origin --delete &lt;span class="o">[&lt;/span>branch-name&lt;span class="o">]&lt;/span>
$ git branch -dr &lt;span class="o">[&lt;/span>remote/branch&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="六标签">六、标签&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 列出所有tag&lt;/span>
$ git tag
&lt;span class="c1"># 新建一个tag在当前commit&lt;/span>
$ git tag &lt;span class="o">[&lt;/span>tag&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 新建一个tag在指定commit&lt;/span>
$ git tag &lt;span class="o">[&lt;/span>tag&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>commit&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 删除本地tag&lt;/span>
$ git tag -d &lt;span class="o">[&lt;/span>tag&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 删除远程tag&lt;/span>
$ git push origin :refs/tags/&lt;span class="o">[&lt;/span>tagName&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 查看tag信息&lt;/span>
$ git show &lt;span class="o">[&lt;/span>tag&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 提交指定tag&lt;/span>
$ git push &lt;span class="o">[&lt;/span>remote&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>tag&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 提交所有tag&lt;/span>
$ git push &lt;span class="o">[&lt;/span>remote&lt;span class="o">]&lt;/span> --tags
&lt;span class="c1"># 新建一个分支，指向某个tag&lt;/span>
$ git checkout -b &lt;span class="o">[&lt;/span>branch&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>tag&lt;span class="o">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="七查看信息">七、查看信息&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 显示有变更的文件&lt;/span>
$ git status
&lt;span class="c1"># 显示当前分支的版本历史&lt;/span>
$ git log
&lt;span class="c1"># 显示commit历史，以及每次commit发生变更的文件&lt;/span>
$ git log --stat
&lt;span class="c1"># 搜索提交历史，根据关键词&lt;/span>
$ git log -S &lt;span class="o">[&lt;/span>keyword&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 显示某个commit之后的所有变动，每个commit占据一行&lt;/span>
$ git log &lt;span class="o">[&lt;/span>tag&lt;span class="o">]&lt;/span> HEAD --pretty&lt;span class="o">=&lt;/span>format:%s
&lt;span class="c1"># 显示某个commit之后的所有变动，其&amp;#34;提交说明&amp;#34;必须符合搜索条件&lt;/span>
$ git log &lt;span class="o">[&lt;/span>tag&lt;span class="o">]&lt;/span> HEAD --grep feature
&lt;span class="c1"># 显示某个文件的版本历史，包括文件改名&lt;/span>
$ git log --follow &lt;span class="o">[&lt;/span>file&lt;span class="o">]&lt;/span>
$ git whatchanged &lt;span class="o">[&lt;/span>file&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 显示指定文件相关的每一次diff&lt;/span>
$ git log -p &lt;span class="o">[&lt;/span>file&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 显示过去5次提交&lt;/span>
$ git log -5 --pretty --oneline
&lt;span class="c1"># 显示所有提交过的用户，按提交次数排序&lt;/span>
$ git shortlog -sn
&lt;span class="c1"># 显示指定文件是什么人在什么时间修改过&lt;/span>
$ git blame &lt;span class="o">[&lt;/span>file&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 显示暂存区和工作区的差异&lt;/span>
$ git diff
&lt;span class="c1"># 显示暂存区和上一个commit的差异&lt;/span>
$ git diff --cached &lt;span class="o">[&lt;/span>file&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 显示工作区与当前分支最新commit之间的差异&lt;/span>
$ git diff HEAD
&lt;span class="c1"># 显示两次提交之间的差异&lt;/span>
$ git diff &lt;span class="o">[&lt;/span>first-branch&lt;span class="o">]&lt;/span>...&lt;span class="o">[&lt;/span>second-branch&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 显示今天你写了多少行代码&lt;/span>
$ git diff --shortstat &lt;span class="s2">&amp;#34;@{0 day ago}&amp;#34;&lt;/span>
&lt;span class="c1"># 显示某次提交的元数据和内容变化&lt;/span>
$ git show &lt;span class="o">[&lt;/span>commit&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 显示某次提交发生变化的文件&lt;/span>
$ git show --name-only &lt;span class="o">[&lt;/span>commit&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 显示某次提交时，某个文件的内容&lt;/span>
$ git show &lt;span class="o">[&lt;/span>commit&lt;span class="o">]&lt;/span>:&lt;span class="o">[&lt;/span>filename&lt;span class="o">]&lt;/span>
&lt;span class="c1"># 显示当前分支的最近几次提交&lt;/span>
$ git reflog
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="八远程同步">八、远程同步&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git fetch &lt;span class="o">[&lt;/span>remote&lt;span class="o">]&lt;/span> &lt;span class="c1"># 下载远程仓库的所有变动&lt;/span>
git remote -v &lt;span class="c1"># 显示所有远程仓库&lt;/span>
git remote show &lt;span class="o">[&lt;/span>remote&lt;span class="o">]&lt;/span> &lt;span class="c1"># 显示某个远程仓库的信息&lt;/span>
git remote add &lt;span class="o">[&lt;/span>shortname&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>url&lt;span class="o">]&lt;/span> &lt;span class="c1"># 增加一个新的远程仓库，并命名&lt;/span>
git pull &lt;span class="o">[&lt;/span>remote&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>branch&lt;span class="o">]&lt;/span> &lt;span class="c1"># 取回远程仓库的变化，并与本地分支合并&lt;/span>
git push &lt;span class="o">[&lt;/span>remote&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>branch&lt;span class="o">]&lt;/span> &lt;span class="c1"># 上传本地指定分支到远程仓库&lt;/span>
git push &lt;span class="o">[&lt;/span>remote&lt;span class="o">]&lt;/span> --force &lt;span class="c1"># 强行推送当前分支到远程仓库，即使有冲突&lt;/span>
git push &lt;span class="o">[&lt;/span>remote&lt;span class="o">]&lt;/span> --all &lt;span class="c1"># 推送所有分支到远程仓库&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="九撤销">九、撤销&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git checkout &lt;span class="o">[&lt;/span>file&lt;span class="o">]&lt;/span> &lt;span class="c1"># 恢复暂存区的指定文件到工作区&lt;/span>
git checkout &lt;span class="o">[&lt;/span>commit&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>file&lt;span class="o">]&lt;/span> &lt;span class="c1"># 恢复某个commit的指定文件到暂存区和工作区&lt;/span>
git checkout . &lt;span class="c1"># 恢复暂存区的所有文件到工作区&lt;/span>
git reset &lt;span class="o">[&lt;/span>file&lt;span class="o">]&lt;/span> &lt;span class="c1"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变&lt;/span>
git reset --hard &lt;span class="c1"># 重置暂存区与工作区，与上一次commit保持一致&lt;/span>
git reset &lt;span class="o">[&lt;/span>commit&lt;span class="o">]&lt;/span> &lt;span class="c1"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变&lt;/span>
git reset --hard &lt;span class="o">[&lt;/span>commit&lt;span class="o">]&lt;/span> &lt;span class="c1"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致&lt;/span>
git reset --keep &lt;span class="o">[&lt;/span>commit&lt;span class="o">]&lt;/span> &lt;span class="c1"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变&lt;/span>
git revert &lt;span class="o">[&lt;/span>commit&lt;span class="o">]&lt;/span> &lt;span class="c1"># 新建一个commit，用来撤销指定commit，后者的所有变化都将被前者抵消，并且应用到当前分支&lt;/span>
git stash &lt;span class="c1"># 暂时将未提交的变化移除，稍后再移入&lt;/span>
git stash pop
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="十其他">十、其他&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git archive &lt;span class="c1"># 生成一个可供发布的压缩包&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="十一常见出错">十一、常见出错&lt;/h3>
&lt;p>如果输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git remote add origin git@github.com:djqiang（github帐号名）/gitdemo（项目名）.git
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>提示出错信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">fatal: remote origin already exists.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>解决办法如下：&lt;/p>
&lt;p>1、先输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git remote rm origin
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2、再输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git remote add origin git@github.com:djqiang/gitdemo.git
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>就不会报错了！&lt;/p>
&lt;p>3、如果输入&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git remote rm origin
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>还是报错的话，&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">error: Could not remove config section &lt;span class="s1">&amp;#39;remote.origin&amp;#39;&lt;/span>.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们需要修改&lt;strong>gitconfig&lt;/strong>文件的内容。&lt;/p>
&lt;p>4、找到你的github的安装路径，我的是&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">C:\Users\ASUS\AppData\Local\GitHub\PortableGit_ca477551eeb4aea0e4ae9fcd3358bd96720bb5c8\etc
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>5、找到一个名为gitconfig的文件，打开它把里面的[remote &amp;ldquo;origin&amp;rdquo;]那一行删掉就好了！&lt;/p>
&lt;h2 id="三github">三、Github&lt;/h2>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-fallback" data-lang="fallback">
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="三github-如何设置ssh-key">三、github-如何设置SSH Key&lt;/h3>
&lt;h5 id="设置ssh-key">设置SSH Key&lt;/h5>
&lt;h5 id="在注册好github账号后打开你的电脑桌面上的一个文件夹这就建立了一个本地工作库在里面点击鼠标右键找到你的git-bash-here-点击开如图所示进行下面操作">在注册好github账号后，打开你的电脑桌面上的一个文件夹，这就建立了一个本地工作库，在里面点击鼠标右键，找到你的git bash here-点击开，如图所示：进行下面操作：&lt;/h5>
&lt;p>输入cd ~/.ssh——回车（看你是否有了ssh key 密钥，有了就备份）；&lt;img src="./images/1019973-20161014215813156-173847236.png" alt="img">&lt;/p>
&lt;p>输入ssh-keygen -t rsa -C &amp;ldquo;your email&amp;rdquo;——直接回车，之后会让你输入github的账号密码，会出现如图所示结果，跟着上面所指示的路径，在你的电脑中找到该文件，id_rsa文件即是你的私有密钥，id_rsa.pub是共开密钥
&lt;img src="./images/1019973-20161014220913750-1073898620.png" alt="img">&lt;/p>
&lt;p>打开你的id_rsa.pub文件，复制下里面的内容，然后登录进去你的github；
&lt;img src="./images/1019973-20161014215928812-624526387.png" alt="img">&lt;/p>
&lt;p>在右上角账户那里点击头像边上的下拉，出现如图——点击settings进去，找到左侧的SSH Keys,点击，如图；
&lt;img src="./images/1019973-20161014215945750-1095096006.png" alt="img">
&lt;img src="./images/1019973-20161014220034953-1142334622.png" alt="img">&lt;/p>
&lt;p>在点击Add SSH Key，在title处填入任意的标识，在Key部分里面添加刚才复制的id_rsa.pub文件里的内容，点击添加即可；&lt;img src="./images/1019973-20161014220018765-196157985.png" alt="img">&lt;/p>
&lt;p>最后只需测试一下链接是否正常即可。接着输入：ssh -T &lt;a href="mailto:git@github.com">git@github.com&lt;/a>，这时会问是否继续连接，我们输入 yes，这样，我们的git配置就完成了。&lt;/p>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item><item><title>Git常见问题总结</title><link>/post/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</link><pubDate>Sat, 30 Dec 2000 00:00:00 +0000</pubDate><guid>/post/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</guid><description>&lt;p>收集使用&lt;code>git&lt;/code>的过程中出现的问题。&lt;/p>
&lt;h2 id="the-file-will-have-its-original-line-endings-in-your-working-directory">The file will have its original line endings in your working directory&lt;/h2>
&lt;p>出现这个问题主要原因是：我们从别人github地址上通过git clone下载下来，而又想git push到我们自己的github上，那么就会出现上面提示的错误信息。&lt;/p>
&lt;p>此时需要执行如下代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git rm -r --cached .
git config core.autocrlf &lt;span class="nb">false&lt;/span>
git add .
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>. 代表当前目录&lt;/p>
&lt;h2 id="git-的-config-的三级配置">Git 的 config 的三级配置&lt;/h2>
&lt;h3 id="21-最高级git-config---system">2.1 最高级：&lt;code>git config --system&lt;/code>&lt;/h3>
&lt;p>信息保存在 /etc/gitconfig&lt;/p>
&lt;p>为系统设置配置。&lt;/p>
&lt;h3 id="22-第二级git-config---global">2.2 第二级：&lt;code>git config --global&lt;/code>&lt;/h3>
&lt;p>信息保存在 ~/.gitconfig 或 ~/.config/git/config&lt;/p>
&lt;p>只针对当前用户。&lt;/p>
&lt;h3 id="23-第三级git-congfig---local">2.3 第三级：&lt;code>git congfig --local&lt;/code>&lt;/h3>
&lt;p>信息保存在当前仓库的Git目录中的 &lt;code>.git/config&lt;/code>&lt;/p>
&lt;p>只针对该仓库。&lt;/p>
&lt;p>每一个级别覆盖上一级别的配置。&lt;/p>
&lt;h2 id="git传输协议-和-https-传输协议">Git传输协议 和 HTTPS 传输协议&lt;/h2>
&lt;p>两者有不同。&lt;/p>
&lt;h2 id="让git-status-显示中文解决中文乱码">让git status 显示中文，解决中文乱码&lt;/h2>
&lt;p>本文转载自：&lt;a href="https://blog.csdn.net/u012145252/article/details/81775362"> git status 显示中文和解决中文乱码&lt;/a>&lt;/p>
&lt;h3 id="41-问题描述">4.1 问题描述&lt;/h3>
&lt;p>status查看有改动但未提交的文件时总只显示一串数字串，显示不出中文文件名，非常不方便。如下图：&lt;/p>
&lt;p>&lt;img src="./pic/status-dig.jpg" alt="">&lt;/p>
&lt;h3 id="42-原因">4.2 原因&lt;/h3>
&lt;p>在默认设置下，中文在工作区状态输出时，不能正确显示，而是显示为八进制的字符编码。&lt;/p>
&lt;h3 id="43-解决办法一">4.3 解决办法一&lt;/h3>
&lt;p>将 git 配置文件 &lt;code>core.quotepath&lt;/code>项设置为 false。&lt;/p>
&lt;p>quotepath 表示引用路径；加上&lt;code>--global&lt;/code>表示全局配置。&lt;/p>
&lt;p>可以直接在 git bash 终端输入命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git config --global core.quotepath &lt;span class="nb">false&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>但是注意，这样设置后，你的git bash终端也要设置成中文和utf-8编码，才能正确显示中文，不然还是乱码。&lt;/p>
&lt;p>效果对比如下：&lt;/p>
&lt;p>&lt;img src="./pic/git-utf8.jpg" alt="">&lt;/p>
&lt;p>git bash 终端设置办法：&lt;/p>
&lt;ul>
&lt;li>在git bash的界面中右击空白处，弹出菜单，选择 &lt;code>选项-&amp;gt;文本-&amp;gt;本地Locale&lt;/code> ，设置为 &lt;code>zh_CN&lt;/code> ，而旁边的字符集选框选为 &lt;code>UTF-8&lt;/code> 。&lt;/li>
&lt;li>如果是英文界面则是：
&lt;code>Options-&amp;gt;Text-&amp;gt;Locale&lt;/code> 改为 &lt;code>zh_CN，Character set改为UTF-8&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>如图：&lt;/p>
&lt;p>&lt;img src="./pic/git-zh-utf8.jpg" alt="">&lt;/p>
&lt;h3 id="44-解决办法二">4.4 解决办法二&lt;/h3>
&lt;p>如果你的git bash终端没有菜单选项显示，还可以通过直接修改配置文件的方式来解决中文乱码问题。&lt;/p>
&lt;p>进入git的安装目录：&lt;/p>
&lt;ol>
&lt;li>编辑 &lt;code>etc\gitconfig&lt;/code> Git系统文件，也有些windows系统是存放在&lt;code>C:\Users\Administrator\.gitconfig&lt;/code>路径或&lt;code>安装盘符:\Git\mingw64\etc\gitconfig&lt;/code>，在文件末尾增加以下内容：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">[&lt;/span>gui&lt;span class="o">]&lt;/span>
&lt;span class="nv">encoding&lt;/span> &lt;span class="o">=&lt;/span> utf-8
&lt;span class="c1"># 代码库统一使用utf-8 &lt;/span>
&lt;span class="o">[&lt;/span>i18n&lt;span class="o">]&lt;/span>
&lt;span class="nv">commitencoding&lt;/span> &lt;span class="o">=&lt;/span> utf-8
&lt;span class="c1"># log编码 &lt;/span>
&lt;span class="o">[&lt;/span>svn&lt;span class="o">]&lt;/span>
&lt;span class="nv">pathnameencoding&lt;/span> &lt;span class="o">=&lt;/span> utf-8
&lt;span class="c1"># 支持中文路径 &lt;/span>
&lt;span class="o">[&lt;/span>core&lt;span class="o">]&lt;/span>
&lt;span class="nv">quotepath&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">false&lt;/span>
&lt;span class="c1"># status引用路径不再是八进制（反过来说就是允许显示中文了）&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>编辑 &lt;code>etc\git-completion.bash&lt;/code> 文件,在文件末尾增加以下内容：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="c1"># 让ls命令能够正常显示中文&lt;/span>
&lt;span class="nb">alias&lt;/span> &lt;span class="nv">ls&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;ls --show-control-chars --color=auto&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>编辑 &lt;code>etc\inputrc&lt;/code> 文件，修改 output-meta 和 convert-meta 属性值：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">set&lt;/span> output-meta on &lt;span class="c1"># bash可以正常输入中文 &lt;/span>
&lt;span class="nb">set&lt;/span> convert-meta off
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>最后编辑profile文件，在文件末尾添加如下内容：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="nb">export&lt;/span> &lt;span class="nv">LESSHARESET&lt;/span>&lt;span class="o">=&lt;/span>utf-8
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="详解git-fetch与git-pull的区别">详解git fetch与git pull的区别&lt;/h2>
&lt;p>git fetch和git pull都可以将远端仓库更新至本地那么他们之间有何区别?想要弄清楚这个问题有有几个概念不得不提。&lt;/p>
&lt;ul>
&lt;li>FETCH_HEAD： 是一个版本链接，记录在本地的一个文件中，指向着目前已经从远程仓库取下来的分支的末端版本。&lt;/li>
&lt;li>commit-id：在每次本地工作完成后，都会做一个git commit 操作来保存当前工作到本地的repo， 此时会产生一个commit-id，这是一个能唯一标识一个版本的序列号。 在使用git push后，这个序列号还会同步到远程仓库。&lt;/li>
&lt;/ul>
&lt;h3 id="有了以上的概念再来说说git-fetch">有了以上的概念再来说说git fetch。&lt;/h3>
&lt;ul>
&lt;li>git fetch：这将更新git remote 中所有的远程仓库所包含分支的最新commit-id, 将其记录到.git/FETCH_HEAD文件中。&lt;/li>
&lt;/ul>
&lt;p>git fetch更新远程仓库的方式如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git fetch origin master:tmp
//在本地新建一个temp分支，并将远程origin仓库的master分支代码下载到本地temp分支
git diff tmp
//来比较本地代码与刚刚从远程下载下来的代码的区别
git merge tmp
//合并temp分支到本地的master分支
git branch -d temp
//如果不想保留temp分支 可以用这步删除
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="如果直接使用git-fetch则步骤如下">如果直接使用git fetch，则步骤如下：&lt;/h3>
&lt;ul>
&lt;li>创建并更新本地远程分支。即创建并更新origin/xxx 分支，拉取代码到origin/xxx分支上。&lt;/li>
&lt;li>在FETCH_HEAD中设定当前分支-origin/当前分支对应，如直接到时候git merge就可以将origin/abc合并到abc分支上。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git fetch origin
//只是手动指定了要fetch的remote。在不指定分支时通常默认为master.
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git fetch origin dev
//指定远程remote和FETCH_HEAD，并且只拉取该分支的提交。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="git-pull">git pull&lt;/h3>
&lt;p>首先，基于本地的FETCH_HEAD记录，比对本地的FETCH_HEAD记录与远程仓库的版本号，然后git fetch 获得当前指向的远程分支的后续版本的数据，然后再利用git merge将其与本地的当前分支合并。所以可以认为git pull是git fetch和git merge两个步骤的结合。
git pull的用法如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre class="chroma">&lt;code class="language-bash" data-lang="bash">git pull &amp;lt;远程主机名&amp;gt; &amp;lt;远程分支名&amp;gt;:&amp;lt;本地分支名&amp;gt;
//取回远程主机某个分支的更新，再与本地的指定分支合并。
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>因此，与git pull相比git fetch相当于是从远程获取最新版本到本地，但不会自动merge。&lt;/p>
&lt;p>如果需要有选择的合并git fetch是更好的选择。效果相同时git pull将更为快捷。&lt;/p>
&lt;hr>
&lt;h3 id="上文来自-r-h-r-的csdn-博客-全文地址请点击httpsblogcsdnnetriddle1981articledetails74938111utm_sourcecopy">上文来自 R-H-R 的CSDN 博客 ，全文地址请点击：https://blog.csdn.net/riddle1981/article/details/74938111?utm_source=copy&lt;/h3>
&lt;hr>
&lt;p>&amp;mdash;EOF&amp;mdash;&lt;/p>
&lt;p>&lt;em>EOF&lt;/em>是一个计算机术语，为&lt;code>End Of File&lt;/code>的缩写，在操作系统中表示资料源无更多的资料可读取。通常在文本的最后存在此字符表示资料结束。&lt;/p>
&lt;p>本人公众号&lt;code>火山灰&lt;/code>，亦可搜&lt;code>time_ash_past&lt;/code>。&lt;/p>
&lt;p>&lt;img src="https://raw.githubusercontent.com/sanbeichahegongheguo/sanbeichahegongheguo.github.io/master/%E5%85%AC%E4%BC%97%E5%8F%B7.jpg" alt="">&lt;/p></description></item></channel></rss>